<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StructureMap.4.3.0.442.Fakes</name>
    </assembly>
    <members>
        <member name="T:ConsoleApplication.Fakes.ShimProgram">
            <summary>Shim type of ConsoleApplication.Program</summary>
        </member>
        <member name="M:ConsoleApplication.Fakes.ShimProgram.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:ConsoleApplication.Fakes.ShimProgram.#ctor(ConsoleApplication.Program)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:ConsoleApplication.Fakes.ShimProgram.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:ConsoleApplication.Fakes.ShimProgram.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:ConsoleApplication.Fakes.ShimProgram.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ConsoleApplication.Fakes.ShimProgram.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:ConsoleApplication.Fakes.ShimProgram.Constructor">
            <summary>Sets the shim of Program.Program()</summary>
        </member>
        <member name="P:ConsoleApplication.Fakes.ShimProgram.MainStringArray">
            <summary>Sets the shim of Program.Main(String[] args)</summary>
        </member>
        <member name="T:ConsoleApplication.Fakes.StubProgram">
            <summary>Stub type of ConsoleApplication.Program</summary>
        </member>
        <member name="M:ConsoleApplication.Fakes.StubProgram.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:ConsoleApplication.Fakes.StubProgram.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:ConsoleApplication.Fakes.StubProgram.InitializeStub">
            <summary>Initializes a new instance of type StubProgram</summary>
        </member>
        <member name="P:ConsoleApplication.Fakes.StubProgram.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:ConsoleApplication.Fakes.StubProgram.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute">
            <summary>Shim type of StructureMap.Attributes.SetterPropertyAttribute</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.#ctor(StructureMap.Attributes.SetterPropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Attributes.Fakes.ShimSetterPropertyAttribute.Constructor">
            <summary>Sets the shim of SetterPropertyAttribute.SetterPropertyAttribute()</summary>
        </member>
        <member name="T:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute">
            <summary>Stub type of StructureMap.Attributes.SetterPropertyAttribute</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetterPropertyAttribute</summary>
        </member>
        <member name="P:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:StructureMap.Attributes.Fakes.StubSetterPropertyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer">
            <summary>Shim type of StructureMap.AutoMocking.AutoMockedContainer</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.#ctor(StructureMap.AutoMocking.AutoMockedContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.AllInstances.AppliesToHasFamilyChecksStructureMapGraphIFamilyPolicyget">
            <summary>Sets the shim of AutoMockedContainer.StructureMap.Graph.IFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.AllInstances.StructureMapGraphIFamilyPolicyBuildType">
            <summary>Sets the shim of AutoMockedContainer.StructureMap.Graph.IFamilyPolicy.Build(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.AllInstances._ctorb__1_0ConfigurationExpression">
            <summary>Sets the shim of AutoMockedContainer.&lt;.ctor&gt;b__1_0(ConfigurationExpression x)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.AllInstances.nameContainerIContainer">
            <summary>Sets the shim of AutoMockedContainer.nameContainer(IContainer container)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.AppliesToHasFamilyChecksStructureMapGraphIFamilyPolicyget">
            <summary>Sets the shim of AutoMockedContainer.StructureMap.Graph.IFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.Bind(StructureMap.IContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.Bind(StructureMap.Graph.IFamilyPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.ConstructorServiceLocator">
            <summary>Sets the shim of AutoMockedContainer.AutoMockedContainer(ServiceLocator locator)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.StructureMapGraphIFamilyPolicyBuildType">
            <summary>Sets the shim of AutoMockedContainer.StructureMap.Graph.IFamilyPolicy.Build(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer._ctorb__1_0ConfigurationExpression">
            <summary>Sets the shim of AutoMockedContainer.&lt;.ctor&gt;b__1_0(ConfigurationExpression x)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMockedContainer.nameContainerIContainer">
            <summary>Sets the shim of AutoMockedContainer.nameContainer(IContainer container)</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1">
            <summary>Shim type of StructureMap.AutoMocking.AutoMocker`1</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.#ctor(StructureMap.AutoMocking.AutoMocker{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AddAdditionalMockForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of AutoMocker`1.AddAdditionalMockFor()</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.AddAdditionalMockForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.AutoMocking.AutoMocker{`0},``0})">
            <summary>Sets the shim of AutoMocker`1.AddAdditionalMockFor()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.ClassUnderTestGet">
            <summary>Sets the shim of AutoMocker`1.get_ClassUnderTest()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.ContainerGet">
            <summary>Sets the shim of AutoMocker`1.get_Container()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.ContainerSetAutoMockedContainer">
            <summary>Sets the shim of AutoMocker`1.set_Container(AutoMockedContainer value)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.CreateMockArrayForOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.AutoMocking.AutoMocker{`0},System.Int32,``0[]})">
            <summary>Sets the shim of AutoMocker`1.CreateMockArrayFor(Int32 count)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.AutoMocking.AutoMocker{`0},``0})">
            <summary>Sets the shim of AutoMocker`1.Get()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.InjectArrayOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.AutoMocking.AutoMocker{`0},``0[]})">
            <summary>Sets the shim of AutoMocker`1.InjectArray(!!0[] stubs)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.InjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.AutoMocking.AutoMocker{`0},``0})">
            <summary>Sets the shim of AutoMocker`1.Inject(!!0 target)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.InjectTypeObject">
            <summary>Sets the shim of AutoMocker`1.Inject(Type pluginType, Object stub)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.PartialMockTheClassUnderTest">
            <summary>Sets the shim of AutoMocker`1.PartialMockTheClassUnderTest()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.ServiceLocatorGet">
            <summary>Sets the shim of AutoMocker`1.get_ServiceLocator()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.ServiceLocatorSetServiceLocator">
            <summary>Sets the shim of AutoMocker`1.set_ServiceLocator(ServiceLocator value)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.UseConcreteClassForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.AutoMocking.AutoMocker{`0}})">
            <summary>Sets the shim of AutoMocker`1.UseConcreteClassFor()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.UseMockForTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.AutoMocking.AutoMocker{`0}})">
            <summary>Sets the shim of AutoMocker`1.UseMockForType()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.AllInstances.getConstructorArgs">
            <summary>Sets the shim of AutoMocker`1.getConstructorArgs()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.Bind(StructureMap.AutoMocking.IAutoMocker{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.ClassUnderTestGet">
            <summary>Sets the shim of AutoMocker`1.get_ClassUnderTest()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.ConstructorServiceLocator">
            <summary>Sets the shim of AutoMocker`1.AutoMocker`1(ServiceLocator serviceLocator)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.ContainerGet">
            <summary>Sets the shim of AutoMocker`1.get_Container()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.ContainerSetAutoMockedContainer">
            <summary>Sets the shim of AutoMocker`1.set_Container(AutoMockedContainer value)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.CreateMockArrayForOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0[]})">
            <summary>Sets the shim of AutoMocker`1.CreateMockArrayFor(Int32 count)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of AutoMocker`1.Get()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.InjectArrayOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[]})">
            <summary>Sets the shim of AutoMocker`1.InjectArray(!!0[] stubs)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.InjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of AutoMocker`1.Inject(!!0 target)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.InjectTypeObject">
            <summary>Sets the shim of AutoMocker`1.Inject(Type pluginType, Object stub)</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.PartialMockTheClassUnderTest">
            <summary>Sets the shim of AutoMocker`1.PartialMockTheClassUnderTest()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.ServiceLocatorGet">
            <summary>Sets the shim of AutoMocker`1.get_ServiceLocator()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.ServiceLocatorSetServiceLocator">
            <summary>Sets the shim of AutoMocker`1.set_ServiceLocator(ServiceLocator value)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.UseConcreteClassForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AutoMocker`1.UseConcreteClassFor()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.UseMockForTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AutoMocker`1.UseMockForType()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.ShimAutoMocker`1.getConstructorArgs">
            <summary>Sets the shim of AutoMocker`1.getConstructorArgs()</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.StubAutoMockedContainer">
            <summary>Stub type of StructureMap.AutoMocking.AutoMockedContainer</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubAutoMockedContainer.#ctor(StructureMap.AutoMocking.ServiceLocator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubAutoMockedContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubAutoMockedContainer.InitializeStub">
            <summary>Initializes a new instance of type StubAutoMockedContainer</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubAutoMockedContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubAutoMockedContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.StubAutoMocker`1">
            <summary>Stub type of StructureMap.AutoMocking.AutoMocker`1</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubAutoMocker`1.#ctor(StructureMap.AutoMocking.ServiceLocator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubAutoMocker`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubAutoMocker`1.InitializeStub">
            <summary>Initializes a new instance of type StubAutoMocker</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubAutoMocker`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubAutoMocker`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1">
            <summary>Stub type of StructureMap.AutoMocking.IAutoMocker`1</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.#ctor">
            <summary>Initializes a new instance of type StubIAutoMocker</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.AddAdditionalMockForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of AddAdditionalMockFor()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#ClassUnderTest">
            <summary>Sets the stub of IAutoMocker`1.get_ClassUnderTest()</summary>
        </member>
        <member name="F:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.ClassUnderTestGet">
            <summary>Sets the stub of IAutoMocker`1.get_ClassUnderTest()</summary>
        </member>
        <member name="P:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#Container">
            <summary>Sets the stub of IAutoMocker`1.get_Container()</summary>
        </member>
        <member name="F:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.ContainerGet">
            <summary>Sets the stub of IAutoMocker`1.get_Container()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.CreateMockArrayForOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0[]})">
            <summary>Sets stubs of CreateMockArrayFor(Int32 count)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Get()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.InjectArrayOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[]})">
            <summary>Sets stubs of InjectArray(!!0[] stubs)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.InjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets stubs of Inject(!!0 target)</summary>
        </member>
        <member name="F:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.InjectTypeObject">
            <summary>Sets the stub of IAutoMocker`1.Inject(Type pluginType, Object stub)</summary>
        </member>
        <member name="F:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.PartialMockTheClassUnderTest">
            <summary>Sets the stub of IAutoMocker`1.PartialMockTheClassUnderTest()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#AddAdditionalMockFor``1">
            <summary>Sets the stub of IAutoMocker`1.AddAdditionalMockFor()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#CreateMockArrayFor``1(System.Int32)">
            <summary>Sets the stub of IAutoMocker`1.CreateMockArrayFor(Int32 count)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#Get``1">
            <summary>Sets the stub of IAutoMocker`1.Get()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#Inject``1(``0)">
            <summary>Sets the stub of IAutoMocker`1.Inject(!!0 target)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#Inject(System.Type,System.Object)">
            <summary>Sets the stub of IAutoMocker`1.Inject(Type pluginType, Object stub)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#InjectArray``1(``0[])">
            <summary>Sets the stub of IAutoMocker`1.InjectArray(!!0[] stubs)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#PartialMockTheClassUnderTest">
            <summary>Sets the stub of IAutoMocker`1.PartialMockTheClassUnderTest()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#UseConcreteClassFor``1">
            <summary>Sets the stub of IAutoMocker`1.UseConcreteClassFor()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.StructureMap#AutoMocking#IAutoMocker{TTargetClass}#UseMockForType``1">
            <summary>Sets the stub of IAutoMocker`1.UseMockForType()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.UseConcreteClassForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of UseConcreteClassFor()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubIAutoMocker`1.UseMockForTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of UseMockForType()</summary>
        </member>
        <member name="T:StructureMap.AutoMocking.Fakes.StubServiceLocator">
            <summary>Stub type of StructureMap.AutoMocking.ServiceLocator</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubServiceLocator.#ctor">
            <summary>Initializes a new instance of type StubServiceLocator</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubServiceLocator.PartialMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets stubs of PartialMock(Object[] args)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubServiceLocator.ServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Service()</summary>
        </member>
        <member name="F:StructureMap.AutoMocking.Fakes.StubServiceLocator.ServiceType">
            <summary>Sets the stub of ServiceLocator.Service(Type serviceType)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubServiceLocator.StructureMap#AutoMocking#ServiceLocator#PartialMock``1(System.Object[])">
            <summary>Sets the stub of ServiceLocator.PartialMock(Object[] args)</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubServiceLocator.StructureMap#AutoMocking#ServiceLocator#Service``1">
            <summary>Sets the stub of ServiceLocator.Service()</summary>
        </member>
        <member name="M:StructureMap.AutoMocking.Fakes.StubServiceLocator.StructureMap#AutoMocking#ServiceLocator#Service(System.Type)">
            <summary>Sets the stub of ServiceLocator.Service(Type serviceType)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource">
            <summary>Shim type of StructureMap.Building.AllPossibleValuesDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.#ctor(StructureMap.Building.AllPossibleValuesDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of AllPossibleValuesDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of AllPossibleValuesDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of AllPossibleValuesDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.ElementTypeGet">
            <summary>Sets the shim of AllPossibleValuesDependencySource.get_ElementType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.EqualsAllPossibleValuesDependencySource">
            <summary>Sets the shim of AllPossibleValuesDependencySource.Equals(AllPossibleValuesDependencySource other)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.EqualsObject">
            <summary>Sets the shim of AllPossibleValuesDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.GetHashCode01">
            <summary>Sets the shim of AllPossibleValuesDependencySource.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of AllPossibleValuesDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of AllPossibleValuesDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.ConstructorType">
            <summary>Sets the shim of AllPossibleValuesDependencySource.AllPossibleValuesDependencySource(Type enumerationType)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.DescriptionGet">
            <summary>Sets the shim of AllPossibleValuesDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.ElementTypeGet">
            <summary>Sets the shim of AllPossibleValuesDependencySource.get_ElementType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.EqualsAllPossibleValuesDependencySource">
            <summary>Sets the shim of AllPossibleValuesDependencySource.Equals(AllPossibleValuesDependencySource other)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.EqualsObject">
            <summary>Sets the shim of AllPossibleValuesDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.GetHashCode">
            <summary>Sets the shim of AllPossibleValuesDependencySource.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.ReturnedTypeGet">
            <summary>Sets the shim of AllPossibleValuesDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.StaticConstructor">
            <summary>Sets the shim of AllPossibleValuesDependencySource.AllPossibleValuesDependencySource()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimAllPossibleValuesDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of AllPossibleValuesDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimArrayDependencySource">
            <summary>Shim type of StructureMap.Building.ArrayDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.#ctor(StructureMap.Building.ArrayDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of ArrayDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AddIDependencySource">
            <summary>Sets the shim of ArrayDependencySource.Add(IDependencySource item)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of ArrayDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.AddIDependencySource">
            <summary>Sets the shim of ArrayDependencySource.Add(IDependencySource item)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of ArrayDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.ItemTypeGet">
            <summary>Sets the shim of ArrayDependencySource.get_ItemType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.ItemsGet">
            <summary>Sets the shim of ArrayDependencySource.get_Items()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of ArrayDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ArrayDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimArrayDependencySource.Bind(StructureMap.Building.IEnumerableDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.ConstructorTypeIDependencySourceArray">
            <summary>Sets the shim of ArrayDependencySource.ArrayDependencySource(Type itemType, IDependencySource[] items)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.DescriptionGet">
            <summary>Sets the shim of ArrayDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.ItemTypeGet">
            <summary>Sets the shim of ArrayDependencySource.get_ItemType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.ItemsGet">
            <summary>Sets the shim of ArrayDependencySource.get_Items()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.ReturnedTypeGet">
            <summary>Sets the shim of ArrayDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimArrayDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ArrayDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildPlan">
            <summary>Shim type of StructureMap.Building.BuildPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.#ctor(StructureMap.Building.BuildPlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of BuildPlan.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of BuildPlan.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.BuildIBuildSessionIContext">
            <summary>Sets the shim of BuildPlan.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.DescriptionGet">
            <summary>Sets the shim of BuildPlan.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.InnerGet">
            <summary>Sets the shim of BuildPlan.get_Inner()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.InstanceGet">
            <summary>Sets the shim of BuildPlan.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.InterceptionPlanGet">
            <summary>Sets the shim of BuildPlan.get_InterceptionPlan()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.PluginTypeGet">
            <summary>Sets the shim of BuildPlan.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of BuildPlan.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.AllInstances.ToDelegate">
            <summary>Sets the shim of BuildPlan.ToDelegate()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.Bind(StructureMap.Building.IBuildPlan)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.Bind(StructureMap.Building.IBuildPlanVisitable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildPlan.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.BuildIBuildSessionIContext">
            <summary>Sets the shim of BuildPlan.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.ConstructorTypeInstanceIDependencySourceIInterceptionPlan">
            <summary>Sets the shim of BuildPlan.BuildPlan(Type pluginType, Instance instance, IDependencySource inner, IInterceptionPlan interceptionPlan)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.ConstructorTypeInstanceIDependencySourcePoliciesIEnumerableOfIInterceptor">
            <summary>Sets the shim of BuildPlan.BuildPlan(Type pluginType, Instance instance, IDependencySource inner, Policies policies, IEnumerable`1&lt;IInterceptor&gt; interceptors)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.DescriptionGet">
            <summary>Sets the shim of BuildPlan.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.InnerGet">
            <summary>Sets the shim of BuildPlan.get_Inner()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.InstanceGet">
            <summary>Sets the shim of BuildPlan.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.InterceptionPlanGet">
            <summary>Sets the shim of BuildPlan.get_InterceptionPlan()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.PluginTypeGet">
            <summary>Sets the shim of BuildPlan.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.ReturnedTypeGet">
            <summary>Sets the shim of BuildPlan.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildPlan.ToDelegate">
            <summary>Sets the shim of BuildPlan.ToDelegate()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildUpPlan">
            <summary>Shim type of StructureMap.Building.BuildUpPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.#ctor(StructureMap.Building.BuildUpPlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AddSetter">
            <summary>Sets the shim of BuildUpPlan.Add(Setter setter)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AddTypeMemberInfoIDependencySource">
            <summary>Sets the shim of BuildUpPlan.Add(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances.AddSetter">
            <summary>Sets the shim of BuildUpPlan.Add(Setter setter)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances.AddTypeMemberInfoIDependencySource">
            <summary>Sets the shim of BuildUpPlan.Add(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances.BuildUpIBuildSessionIContextObject">
            <summary>Sets the shim of BuildUpPlan.BuildUp(IBuildSession session, IContext context, Object object)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances.ConcreteTypeGet">
            <summary>Sets the shim of BuildUpPlan.get_ConcreteType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances.SettersGet">
            <summary>Sets the shim of BuildUpPlan.get_Setters()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances._resetBuildupsb__6_0">
            <summary>Sets the shim of BuildUpPlan.&lt;resetBuildups&gt;b__6_0()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.AllInstances.resetBuildups">
            <summary>Sets the shim of BuildUpPlan.resetBuildups()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.Bind(StructureMap.Building.IHasSetters)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.BuildUpIBuildSessionIContextObject">
            <summary>Sets the shim of BuildUpPlan.BuildUp(IBuildSession session, IContext context, Object object)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.ConcreteTypeGet">
            <summary>Sets the shim of BuildUpPlan.get_ConcreteType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.ConstructorType">
            <summary>Sets the shim of BuildUpPlan.BuildUpPlan(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.SettersGet">
            <summary>Sets the shim of BuildUpPlan.get_Setters()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1">
            <summary>Shim type of StructureMap.Building.BuildUpPlan+SetterActions`1</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.#ctor(StructureMap.Building.BuildUpPlan.SetterActions{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.AllInstances.BuildUpIBuildSessionIContextObject">
            <summary>Sets the shim of SetterActions`1.BuildUp(IBuildSession session, IContext context, Object object)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.Bind(StructureMap.Building.BuildUpPlan.ISetterActions)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.BuildUpIBuildSessionIContextObject">
            <summary>Sets the shim of SetterActions`1.BuildUp(IBuildSession session, IContext context, Object object)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.ShimSetterActions`1.ConstructorIEnumerableOfSetter">
            <summary>Sets the shim of SetterActions`1.SetterActions`1(IEnumerable`1&lt;Setter&gt; setters)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan._resetBuildupsb__6_0">
            <summary>Sets the shim of BuildUpPlan.&lt;resetBuildups&gt;b__6_0()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan.resetBuildups">
            <summary>Sets the shim of BuildUpPlan.resetBuildups()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildUpPlan`1">
            <summary>Shim type of StructureMap.Building.BuildUpPlan`1</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.#ctor(StructureMap.Building.BuildUpPlan{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimBuildUpPlan`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan`1.AllInstances.SetExpressionOfFuncOfT0ObjectIDependencySource">
            <summary>Sets the shim of BuildUpPlan`1.Set(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression, IDependencySource step)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.AllInstances.SetOf1ExpressionOfFuncOfT0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Building.BuildUpPlan{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},``0})">
            <summary>Sets the shim of BuildUpPlan`1.Set(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, !!0 value)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.Bind(StructureMap.Building.IHasSetters)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan`1.Constructor">
            <summary>Sets the shim of BuildUpPlan`1.BuildUpPlan`1()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimBuildUpPlan`1.SetExpressionOfFuncOfT0ObjectIDependencySource">
            <summary>Sets the shim of BuildUpPlan`1.Set(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression, IDependencySource step)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimBuildUpPlan`1.SetOf1ExpressionOfFuncOfT0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}},``0})">
            <summary>Sets the shim of BuildUpPlan`1.Set(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, !!0 value)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConcreteBuild">
            <summary>Shim type of StructureMap.Building.ConcreteBuild</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.#ctor(StructureMap.Building.ConcreteBuild)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of ConcreteBuild.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of ConcreteBuild.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AddSetter">
            <summary>Sets the shim of ConcreteBuild.Add(Setter setter)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AddTypeMemberInfoIDependencySource">
            <summary>Sets the shim of ConcreteBuild.Add(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of ConcreteBuild.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of ConcreteBuild.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.AddSetter">
            <summary>Sets the shim of ConcreteBuild.Add(Setter setter)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.AddTypeMemberInfoIDependencySource">
            <summary>Sets the shim of ConcreteBuild.Add(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.BuildIBuildSessionIContext">
            <summary>Sets the shim of ConcreteBuild.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.BuildOf1IBuildSession``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Building.ConcreteBuild,StructureMap.IBuildSession,``0})">
            <summary>Sets the shim of ConcreteBuild.Build(IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.ConcreteTypeGet">
            <summary>Sets the shim of ConcreteBuild.get_ConcreteType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.ConstructorGet">
            <summary>Sets the shim of ConcreteBuild.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.DescriptionGet">
            <summary>Sets the shim of ConcreteBuild.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.IsValid">
            <summary>Sets the shim of ConcreteBuild.IsValid()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of ConcreteBuild.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.ToDelegate">
            <summary>Sets the shim of ConcreteBuild.ToDelegate()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ConcreteBuild.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.AllInstances.buildInnerExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ConcreteBuild.buildInnerExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.Bind(StructureMap.Building.IBuildPlanVisitable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.Bind(StructureMap.Building.IHasSetters)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.BuildIBuildSessionIContext">
            <summary>Sets the shim of ConcreteBuild.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild.BuildOf1IBuildSession``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.IBuildSession,``0})">
            <summary>Sets the shim of ConcreteBuild.Build(IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ConcreteTypeGet">
            <summary>Sets the shim of ConcreteBuild.get_ConcreteType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ConstructorGet">
            <summary>Sets the shim of ConcreteBuild.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ConstructorType">
            <summary>Sets the shim of ConcreteBuild.ConcreteBuild(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ConstructorTypeConstructorInfo">
            <summary>Sets the shim of ConcreteBuild.ConcreteBuild(Type concreteType, ConstructorInfo constructor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ConstructorTypeConstructorStep">
            <summary>Sets the shim of ConcreteBuild.ConcreteBuild(Type concreteType, ConstructorStep constructor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.DescriptionGet">
            <summary>Sets the shim of ConcreteBuild.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.IsValid">
            <summary>Sets the shim of ConcreteBuild.IsValid()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ReturnedTypeGet">
            <summary>Sets the shim of ConcreteBuild.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ToDelegate">
            <summary>Sets the shim of ConcreteBuild.ToDelegate()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ConcreteBuild.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild.buildInnerExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ConcreteBuild.buildInnerExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConcreteBuild`1">
            <summary>Shim type of StructureMap.Building.ConcreteBuild`1</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.#ctor(StructureMap.Building.ConcreteBuild{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConcreteBuild`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.AllInstances.ConstructorArgsObjectArray">
            <summary>Sets the shim of ConcreteBuild`1.ConstructorArgs(Object[] args)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.AllInstances.SetExpressionOfFuncOfT0ObjectIDependencySource">
            <summary>Sets the shim of ConcreteBuild`1.Set(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression, IDependencySource step)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.AllInstances.SetOf1ExpressionOfFuncOfT0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Building.ConcreteBuild{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},``0})">
            <summary>Sets the shim of ConcreteBuild`1.Set(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, !!0 value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.AllInstances._ConstructorArgsb__5_0Object">
            <summary>Sets the shim of ConcreteBuild`1.&lt;ConstructorArgs&gt;b__5_0(Object a)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.Bind(StructureMap.Building.IBuildPlanVisitable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.Bind(StructureMap.Building.IHasSetters)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.Constructor">
            <summary>Sets the shim of ConcreteBuild`1.ConcreteBuild`1()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.ConstructorArgsObjectArray">
            <summary>Sets the shim of ConcreteBuild`1.ConstructorArgs(Object[] args)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.ConstructorConstructorInfo">
            <summary>Sets the shim of ConcreteBuild`1.ConcreteBuild`1(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.ForExpressionOfFuncOfT0">
            <summary>Sets the shim of ConcreteBuild`1.For(Expression`1&lt;Func`1&lt;!0&gt;&gt; expression)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1.SetExpressionOfFuncOfT0ObjectIDependencySource">
            <summary>Sets the shim of ConcreteBuild`1.Set(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; expression, IDependencySource step)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteBuild`1.SetOf1ExpressionOfFuncOfT0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}},``0})">
            <summary>Sets the shim of ConcreteBuild`1.Set(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, !!0 value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteBuild`1._ConstructorArgsb__5_0Object">
            <summary>Sets the shim of ConcreteBuild`1.&lt;ConstructorArgs&gt;b__5_0(Object a)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConcreteType">
            <summary>Shim type of StructureMap.Building.ConcreteType</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConcreteType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.BuildConstructorStepTypeConstructorInfoDependencyCollectionPolicies">
            <summary>Sets the shim of ConcreteType.BuildConstructorStep(Type pluggedType, ConstructorInfo constructor, DependencyCollection dependencies, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.BuildSourceTypeConstructorInfoDependencyCollectionPolicies">
            <summary>Sets the shim of ConcreteType.BuildSource(Type pluggedType, ConstructorInfo constructor, DependencyCollection dependencies, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.BuildUpPlanTypeDependencyCollectionPolicies">
            <summary>Sets the shim of ConcreteType.BuildUpPlan(Type pluggedType, DependencyCollection dependencies, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.ConvertTypeObjectType">
            <summary>Sets the shim of ConcreteType.ConvertType(Object value, Type dependencyType)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.GetSettersType">
            <summary>Sets the shim of ConcreteType.GetSetters(Type pluggedType)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.SourceForPoliciesStringStringTypeObject">
            <summary>Sets the shim of ConcreteType.SourceFor(Policies policies, String ctorOrSetter, String name, Type dependencyType, Object value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.determineSetterSourceDependencyCollectionPoliciesPropertyInfoIHasSetters">
            <summary>Sets the shim of ConcreteType.determineSetterSource(DependencyCollection dependencies, Policies policies, PropertyInfo setter, IHasSetters plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.determineSetterSourcesTypeDependencyCollectionPoliciesIHasSetters">
            <summary>Sets the shim of ConcreteType.determineSetterSources(Type pluggedType, DependencyCollection dependencies, Policies policies, IHasSetters plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConcreteType.findTypesWithMultipleParametersRequiredConstructorInfo">
            <summary>Sets the shim of ConcreteType.findTypesWithMultipleParametersRequired(ConstructorInfo ctor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConstant">
            <summary>Shim type of StructureMap.Building.Constant</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.#ctor(StructureMap.Building.Constant)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of Constant.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConstant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of Constant.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.DescriptionGet">
            <summary>Sets the shim of Constant.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.EqualsConstant">
            <summary>Sets the shim of Constant.Equals(Constant other)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.EqualsObject">
            <summary>Sets the shim of Constant.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.GetHashCode01">
            <summary>Sets the shim of Constant.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of Constant.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of Constant.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.ToString01">
            <summary>Sets the shim of Constant.ToString()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.AllInstances.ValueGet">
            <summary>Sets the shim of Constant.get_Value()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.ConstructorTypeObject">
            <summary>Sets the shim of Constant.Constant(Type argumentType, Object value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.DescriptionGet">
            <summary>Sets the shim of Constant.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.EqualsConstant">
            <summary>Sets the shim of Constant.Equals(Constant other)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.EqualsObject">
            <summary>Sets the shim of Constant.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.ForObjectObject">
            <summary>Sets the shim of Constant.ForObject(Object o)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstant.ForOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Building.Constant})">
            <summary>Sets the shim of Constant.For(!!0 value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.GetHashCode">
            <summary>Sets the shim of Constant.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.ReturnedTypeGet">
            <summary>Sets the shim of Constant.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of Constant.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.ToString">
            <summary>Sets the shim of Constant.ToString()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstant.ValueGet">
            <summary>Sets the shim of Constant.get_Value()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConstructorStep">
            <summary>Shim type of StructureMap.Building.ConstructorStep</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstructorStep.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstructorStep.#ctor(StructureMap.Building.ConstructorStep)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AddIDependencySource">
            <summary>Sets the shim of ConstructorStep.Add(IDependencySource dependency)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AddIEnumerableOfIDependencySource">
            <summary>Sets the shim of ConstructorStep.Add(IEnumerable`1&lt;IDependencySource&gt; dependencies)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances.AddIDependencySource">
            <summary>Sets the shim of ConstructorStep.Add(IDependencySource dependency)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances.AddIEnumerableOfIDependencySource">
            <summary>Sets the shim of ConstructorStep.Add(IEnumerable`1&lt;IDependencySource&gt; dependencies)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances.ArgumentsGet">
            <summary>Sets the shim of ConstructorStep.get_Arguments()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances.ConstructorGet">
            <summary>Sets the shim of ConstructorStep.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances.DescriptionGet">
            <summary>Sets the shim of ConstructorStep.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ConstructorStep.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.ArgumentsGet">
            <summary>Sets the shim of ConstructorStep.get_Arguments()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstructorStep.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimConstructorStep.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.ConstructorConstructorInfo">
            <summary>Sets the shim of ConstructorStep.ConstructorStep(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.ConstructorGet">
            <summary>Sets the shim of ConstructorStep.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.DescriptionGet">
            <summary>Sets the shim of ConstructorStep.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.ToDescriptionConstructorInfo">
            <summary>Sets the shim of ConstructorStep.ToDescription(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimConstructorStep.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ConstructorStep.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimCtorArgument">
            <summary>Shim type of StructureMap.Building.CtorArgument</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimCtorArgument.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimCtorArgument.#ctor(StructureMap.Building.CtorArgument)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimCtorArgument.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.AllInstances.Description">
            <summary>Sets the shim of CtorArgument.Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.AllInstances.Fullname">
            <summary>Sets the shim of CtorArgument.Fullname()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.AllInstances.ShortName">
            <summary>Sets the shim of CtorArgument.ShortName()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.AllInstances.TitleGet">
            <summary>Sets the shim of CtorArgument.get_Title()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.AllInstances.ToString01">
            <summary>Sets the shim of CtorArgument.ToString()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimCtorArgument.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimCtorArgument.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.Constructor">
            <summary>Sets the shim of CtorArgument.CtorArgument()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.Description">
            <summary>Sets the shim of CtorArgument.Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.Fullname">
            <summary>Sets the shim of CtorArgument.Fullname()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.ShortName">
            <summary>Sets the shim of CtorArgument.ShortName()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.TitleGet">
            <summary>Sets the shim of CtorArgument.get_Title()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimCtorArgument.ToString">
            <summary>Sets the shim of CtorArgument.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimDefaultDependencySource">
            <summary>Shim type of StructureMap.Building.DefaultDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDefaultDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDefaultDependencySource.#ctor(StructureMap.Building.DefaultDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of DefaultDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimDefaultDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of DefaultDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.AllInstances.DependencyTypeGet">
            <summary>Sets the shim of DefaultDependencySource.get_DependencyType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of DefaultDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of DefaultDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of DefaultDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDefaultDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDefaultDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDefaultDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDefaultDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.ConstructorType">
            <summary>Sets the shim of DefaultDependencySource.DefaultDependencySource(Type dependencyType)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.DependencyTypeGet">
            <summary>Sets the shim of DefaultDependencySource.get_DependencyType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.DescriptionGet">
            <summary>Sets the shim of DefaultDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.ReturnedTypeGet">
            <summary>Sets the shim of DefaultDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.StaticConstructor">
            <summary>Sets the shim of DefaultDependencySource.DefaultDependencySource()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDefaultDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of DefaultDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimDelegateExtensions">
            <summary>Shim type of StructureMap.Building.DelegateExtensions</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDelegateExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDelegateExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDelegateExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDelegateExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDelegateExtensions.BuildOf1IBuildPlanIBuildSession``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Building.IBuildPlan,StructureMap.IBuildSession,``0})">
            <summary>Sets the shim of DelegateExtensions.Build(IBuildPlan plan, IBuildSession session)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDelegateExtensions.BuilderOfOf1Delegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Delegate,System.Func{StructureMap.IBuildSession,StructureMap.IContext,``0}})">
            <summary>Sets the shim of DelegateExtensions.BuilderOf(Delegate delegate)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDelegateExtensions.ReplaceParameterLambdaExpressionTypeParameterExpression">
            <summary>Sets the shim of DelegateExtensions.ReplaceParameter(LambdaExpression expression, Type acceptsType, ParameterExpression newParam)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimDependencyProblem">
            <summary>Shim type of StructureMap.Building.DependencyProblem</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDependencyProblem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDependencyProblem.#ctor(StructureMap.Building.DependencyProblem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of DependencyProblem.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimDependencyProblem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of DependencyProblem.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.AllInstances.DescriptionGet">
            <summary>Sets the shim of DependencyProblem.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of DependencyProblem.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.AllInstances.ReturnedTypeSetType">
            <summary>Sets the shim of DependencyProblem.set_ReturnedType(Type value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of DependencyProblem.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDependencyProblem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDependencyProblem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDependencyProblem.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimDependencyProblem.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.Constructor">
            <summary>Sets the shim of DependencyProblem.DependencyProblem()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.DescriptionGet">
            <summary>Sets the shim of DependencyProblem.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.ReturnedTypeGet">
            <summary>Sets the shim of DependencyProblem.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.ReturnedTypeSetType">
            <summary>Sets the shim of DependencyProblem.set_ReturnedType(Type value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimDependencyProblem.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of DependencyProblem.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimLifecycleDependencySource">
            <summary>Shim type of StructureMap.Building.LifecycleDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimLifecycleDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimLifecycleDependencySource.#ctor(StructureMap.Building.LifecycleDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of LifecycleDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of LifecycleDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of LifecycleDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances.InstanceGet">
            <summary>Sets the shim of LifecycleDependencySource.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances.PluginTypeGet">
            <summary>Sets the shim of LifecycleDependencySource.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of LifecycleDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of LifecycleDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimLifecycleDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimLifecycleDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimLifecycleDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimLifecycleDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.ConstructorTypeInstance">
            <summary>Sets the shim of LifecycleDependencySource.LifecycleDependencySource(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.DescriptionGet">
            <summary>Sets the shim of LifecycleDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.InstanceGet">
            <summary>Sets the shim of LifecycleDependencySource.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.PluginTypeGet">
            <summary>Sets the shim of LifecycleDependencySource.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.ReturnedTypeGet">
            <summary>Sets the shim of LifecycleDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.StaticConstructor">
            <summary>Sets the shim of LifecycleDependencySource.LifecycleDependencySource()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimLifecycleDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of LifecycleDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimListDependencySource">
            <summary>Shim type of StructureMap.Building.ListDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.#ctor(StructureMap.Building.ListDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimListDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of ListDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ListDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimListDependencySource.Bind(StructureMap.Building.IEnumerableDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.ConstructorTypeIDependencySourceArray">
            <summary>Sets the shim of ListDependencySource.ListDependencySource(Type itemType, IDependencySource[] items)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.DescriptionGet">
            <summary>Sets the shim of ListDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.StaticConstructor">
            <summary>Sets the shim of ListDependencySource.ListDependencySource()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ListDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimListDependencySource.ToExpressionTypeExpression">
            <summary>Sets the shim of ListDependencySource.ToExpression(Type itemType, Expression arrayExpression)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimParameters">
            <summary>Shim type of StructureMap.Building.Parameters</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimParameters.SessionToContext">
            <summary>Sets the shim of Parameters.SessionToContext()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimParameters.StaticConstructor">
            <summary>Sets the shim of Parameters.Parameters()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimPushPopWrapper">
            <summary>Shim type of StructureMap.Building.PushPopWrapper</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimPushPopWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimPushPopWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimPushPopWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimPushPopWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimPushPopWrapper.StaticConstructor">
            <summary>Sets the shim of PushPopWrapper.PushPopWrapper()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimPushPopWrapper.WrapFuncTypeInstanceExpression">
            <summary>Sets the shim of PushPopWrapper.WrapFunc(Type returnType, Instance instance, Expression inner)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimReferencedDependencySource">
            <summary>Shim type of StructureMap.Building.ReferencedDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimReferencedDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimReferencedDependencySource.#ctor(StructureMap.Building.ReferencedDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of ReferencedDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of ReferencedDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.DependencyTypeGet">
            <summary>Sets the shim of ReferencedDependencySource.get_DependencyType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of ReferencedDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.EqualsObject">
            <summary>Sets the shim of ReferencedDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.EqualsReferencedDependencySource">
            <summary>Sets the shim of ReferencedDependencySource.Equals(ReferencedDependencySource other)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.GetHashCode01">
            <summary>Sets the shim of ReferencedDependencySource.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.NameGet">
            <summary>Sets the shim of ReferencedDependencySource.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of ReferencedDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ReferencedDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.AllInstances.ToString01">
            <summary>Sets the shim of ReferencedDependencySource.ToString()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimReferencedDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimReferencedDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimReferencedDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimReferencedDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.ConstructorTypeString">
            <summary>Sets the shim of ReferencedDependencySource.ReferencedDependencySource(Type dependencyType, String name)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.DependencyTypeGet">
            <summary>Sets the shim of ReferencedDependencySource.get_DependencyType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.DescriptionGet">
            <summary>Sets the shim of ReferencedDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.EqualsObject">
            <summary>Sets the shim of ReferencedDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.EqualsReferencedDependencySource">
            <summary>Sets the shim of ReferencedDependencySource.Equals(ReferencedDependencySource other)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.GetHashCode">
            <summary>Sets the shim of ReferencedDependencySource.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.NameGet">
            <summary>Sets the shim of ReferencedDependencySource.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.ReturnedTypeGet">
            <summary>Sets the shim of ReferencedDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.StaticConstructor">
            <summary>Sets the shim of ReferencedDependencySource.ReferencedDependencySource()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of ReferencedDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimReferencedDependencySource.ToString">
            <summary>Sets the shim of ReferencedDependencySource.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimSetter">
            <summary>Shim type of StructureMap.Building.Setter</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimSetter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimSetter.#ctor(StructureMap.Building.Setter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimSetter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.AssignedValueGet">
            <summary>Sets the shim of Setter.get_AssignedValue()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.AssignedValueSetIDependencySource">
            <summary>Sets the shim of Setter.set_AssignedValue(IDependencySource value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.DescriptionGet">
            <summary>Sets the shim of Setter.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.SetterTypeGet">
            <summary>Sets the shim of Setter.get_SetterType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.TitleGet">
            <summary>Sets the shim of Setter.get_Title()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.ToBindingParameterExpressionParameterExpression">
            <summary>Sets the shim of Setter.ToBinding(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AllInstances.ToSetterLambdaTypeParameterExpression">
            <summary>Sets the shim of Setter.ToSetterLambda(Type concreteType, ParameterExpression target)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AssignedValueGet">
            <summary>Sets the shim of Setter.get_AssignedValue()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.AssignedValueSetIDependencySource">
            <summary>Sets the shim of Setter.set_AssignedValue(IDependencySource value)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimSetter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimSetter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimSetter.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.ConstructorTypeMemberInfoIDependencySource">
            <summary>Sets the shim of Setter.Setter(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.DescriptionGet">
            <summary>Sets the shim of Setter.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.SetterTypeGet">
            <summary>Sets the shim of Setter.get_SetterType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.TitleGet">
            <summary>Sets the shim of Setter.get_Title()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.ToBindingParameterExpressionParameterExpression">
            <summary>Sets the shim of Setter.ToBinding(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimSetter.ToSetterLambdaTypeParameterExpression">
            <summary>Sets the shim of Setter.ToSetterLambda(Type concreteType, ParameterExpression target)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimStructureMapBuildException">
            <summary>Shim type of StructureMap.Building.StructureMapBuildException</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapBuildException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapBuildException.#ctor(StructureMap.Building.StructureMapBuildException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimStructureMapBuildException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapBuildException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapBuildException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimStructureMapBuildException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapBuildException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimStructureMapBuildException.ConstructorString">
            <summary>Sets the shim of StructureMapBuildException.StructureMapBuildException(String message)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimStructureMapBuildException.ConstructorStringException">
            <summary>Sets the shim of StructureMapBuildException.StructureMapBuildException(String message, Exception innerException)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimStructureMapInterceptorException">
            <summary>Shim type of StructureMap.Building.StructureMapInterceptorException</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.#ctor(StructureMap.Building.StructureMapInterceptorException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.ConstructorString">
            <summary>Sets the shim of StructureMapInterceptorException.StructureMapInterceptorException(String message)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimStructureMapInterceptorException.ConstructorStringException">
            <summary>Sets the shim of StructureMapInterceptorException.StructureMapInterceptorException(String message, Exception innerException)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.ShimTryCatchWrapper">
            <summary>Shim type of StructureMap.Building.TryCatchWrapper</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimTryCatchWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.ShimTryCatchWrapper.StaticConstructor">
            <summary>Sets the shim of TryCatchWrapper.TryCatchWrapper()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.WrapActionOf1StringExpressionExpressionOfFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression{System.Func{System.String}},System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.WrapAction(String message, Expression expression, Expression`1&lt;Func`1&lt;String&gt;&gt; descriptionSource)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.WrapActionOf1StringExpressionIDescribed``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Linq.Expressions.Expression,StructureMap.Building.IDescribed,System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.WrapAction(String message, Expression expression, IDescribed described)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.WrapActionOf1StringExpressionString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.WrapAction(String message, Expression expression, String descriptionString)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.WrapFuncOf1StringTypeExpressionExpressionOfFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression{System.Func{System.String}},System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.WrapFunc(String message, Type returnType, Expression expression, Expression`1&lt;Func`1&lt;String&gt;&gt; descriptionSource)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.WrapFuncOf1StringTypeExpressionIDescribed``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Type,System.Linq.Expressions.Expression,StructureMap.Building.IDescribed,System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.WrapFunc(String message, Type returnType, Expression expression, IDescribed described)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.WrapFuncOf1StringTypeExpressionString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Type,System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.WrapFunc(String message, Type returnType, Expression expression, String descriptionString)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.ShimTryCatchWrapper.wrapOf1StringTypeExpressionExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>Sets the shim of TryCatchWrapper.wrap(String message, Type returnType, Expression expression, Expression description)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource">
            <summary>Stub type of StructureMap.Building.AllPossibleValuesDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.Equals(System.Object)">
            <summary>Sets the stub of AllPossibleValuesDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.EqualsObject">
            <summary>Sets the stub of AllPossibleValuesDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.GetHashCode">
            <summary>Sets the stub of AllPossibleValuesDependencySource.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.GetHashCode01">
            <summary>Sets the stub of AllPossibleValuesDependencySource.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.InitializeStub">
            <summary>Initializes a new instance of type StubAllPossibleValuesDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubAllPossibleValuesDependencySource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubArrayDependencySource">
            <summary>Stub type of StructureMap.Building.ArrayDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubArrayDependencySource.#ctor(System.Type,StructureMap.Building.IDependencySource[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubArrayDependencySource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubArrayDependencySource.Description">
            <summary>Sets the stub of ArrayDependencySource.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubArrayDependencySource.DescriptionGet">
            <summary>Sets the stub of ArrayDependencySource.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubArrayDependencySource.InitializeStub">
            <summary>Initializes a new instance of type StubArrayDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubArrayDependencySource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubArrayDependencySource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubArrayDependencySource.ToExpression(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of ArrayDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubArrayDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the stub of ArrayDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubBuildPlan">
            <summary>Stub type of StructureMap.Building.BuildPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildPlan.#ctor(System.Type,StructureMap.Pipeline.Instance,StructureMap.Building.IDependencySource,StructureMap.Building.Interception.IInterceptionPlan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildPlan.#ctor(System.Type,StructureMap.Pipeline.Instance,StructureMap.Building.IDependencySource,StructureMap.Policies,System.Collections.Generic.IEnumerable{StructureMap.Building.Interception.IInterceptor})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildPlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildPlan.InitializeStub">
            <summary>Initializes a new instance of type StubBuildPlan</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildPlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildPlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubBuildUpPlan">
            <summary>Stub type of StructureMap.Building.BuildUpPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildUpPlan.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildUpPlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildUpPlan.InitializeStub">
            <summary>Initializes a new instance of type StubBuildUpPlan</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildUpPlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildUpPlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubBuildUpPlan`1">
            <summary>Stub type of StructureMap.Building.BuildUpPlan`1</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildUpPlan`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildUpPlan`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubBuildUpPlan`1.InitializeStub">
            <summary>Initializes a new instance of type StubBuildUpPlan</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildUpPlan`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubBuildUpPlan`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubConcreteBuild">
            <summary>Stub type of StructureMap.Building.ConcreteBuild</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild.#ctor(System.Type,StructureMap.Building.ConstructorStep)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild.#ctor(System.Type,System.Reflection.ConstructorInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConcreteBuild.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild.InitializeStub">
            <summary>Initializes a new instance of type StubConcreteBuild</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConcreteBuild.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConcreteBuild.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubConcreteBuild`1">
            <summary>Stub type of StructureMap.Building.ConcreteBuild`1</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild`1.#ctor(System.Reflection.ConstructorInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConcreteBuild`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConcreteBuild`1.InitializeStub">
            <summary>Initializes a new instance of type StubConcreteBuild</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConcreteBuild`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConcreteBuild`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubConstant">
            <summary>Stub type of StructureMap.Building.Constant</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstant.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConstant.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstant.Equals(System.Object)">
            <summary>Sets the stub of Constant.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubConstant.EqualsObject">
            <summary>Sets the stub of Constant.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstant.GetHashCode">
            <summary>Sets the stub of Constant.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubConstant.GetHashCode01">
            <summary>Sets the stub of Constant.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstant.InitializeStub">
            <summary>Initializes a new instance of type StubConstant</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConstant.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConstant.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstant.ToString">
            <summary>Sets the stub of Constant.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubConstant.ToString01">
            <summary>Sets the stub of Constant.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubConstructorStep">
            <summary>Stub type of StructureMap.Building.ConstructorStep</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstructorStep.#ctor(System.Reflection.ConstructorInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConstructorStep.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubConstructorStep.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorStep</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConstructorStep.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubConstructorStep.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubCtorArgument">
            <summary>Stub type of StructureMap.Building.CtorArgument</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubCtorArgument.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubCtorArgument.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubCtorArgument.InitializeStub">
            <summary>Initializes a new instance of type StubCtorArgument</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubCtorArgument.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubCtorArgument.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubCtorArgument.ToString">
            <summary>Sets the stub of CtorArgument.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubCtorArgument.ToString01">
            <summary>Sets the stub of CtorArgument.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubDefaultDependencySource">
            <summary>Stub type of StructureMap.Building.DefaultDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubDefaultDependencySource.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubDefaultDependencySource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubDefaultDependencySource.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubDefaultDependencySource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubDefaultDependencySource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubDependencyProblem">
            <summary>Stub type of StructureMap.Building.DependencyProblem</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubDependencyProblem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubDependencyProblem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubDependencyProblem.InitializeStub">
            <summary>Initializes a new instance of type StubDependencyProblem</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubDependencyProblem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubDependencyProblem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubIBuildPlan">
            <summary>Stub type of StructureMap.Building.IBuildPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIBuildPlan.#ctor">
            <summary>Initializes a new instance of type StubIBuildPlan</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIBuildPlan.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the stub of IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIBuildPlan.BuildIBuildSessionIContext">
            <summary>Sets the stub of IBuildPlan.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIBuildPlan.StructureMap#Building#IDescribed#Description">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIBuildPlan.DescriptionGet">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIBuildPlan.StructureMap#Building#IBuildPlan#ReturnedType">
            <summary>Sets the stub of IBuildPlan.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIBuildPlan.ReturnedTypeGet">
            <summary>Sets the stub of IBuildPlan.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIBuildPlan.StructureMap#Building#IBuildPlan#Build(StructureMap.IBuildSession,StructureMap.IContext)">
            <summary>Sets the stub of IBuildPlan.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIBuildPlan.StructureMap#Building#IBuildPlanVisitable#AcceptVisitor(StructureMap.Diagnostics.IBuildPlanVisitor)">
            <summary>Sets the stub of IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubIBuildPlanVisitable">
            <summary>Stub type of StructureMap.Building.IBuildPlanVisitable</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIBuildPlanVisitable.#ctor">
            <summary>Initializes a new instance of type StubIBuildPlanVisitable</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIBuildPlanVisitable.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the stub of IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIBuildPlanVisitable.StructureMap#Building#IBuildPlanVisitable#AcceptVisitor(StructureMap.Diagnostics.IBuildPlanVisitor)">
            <summary>Sets the stub of IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubIDependencySource">
            <summary>Stub type of StructureMap.Building.IDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIDependencySource.#ctor">
            <summary>Initializes a new instance of type StubIDependencySource</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the stub of IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIDependencySource.StructureMap#Building#IDescribed#Description">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIDependencySource.DescriptionGet">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIDependencySource.StructureMap#Building#IDependencySource#ReturnedType">
            <summary>Sets the stub of IDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIDependencySource.ReturnedTypeGet">
            <summary>Sets the stub of IDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIDependencySource.StructureMap#Building#IDependencySource#AcceptVisitor(StructureMap.Diagnostics.IDependencyVisitor)">
            <summary>Sets the stub of IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIDependencySource.StructureMap#Building#IDependencySource#ToExpression(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of IDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the stub of IDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubIDescribed">
            <summary>Stub type of StructureMap.Building.IDescribed</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIDescribed.#ctor">
            <summary>Initializes a new instance of type StubIDescribed</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIDescribed.StructureMap#Building#IDescribed#Description">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIDescribed.DescriptionGet">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubIEnumerableDependencySource">
            <summary>Stub type of StructureMap.Building.IEnumerableDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIEnumerableDependencySource.#ctor">
            <summary>Initializes a new instance of type StubIEnumerableDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIEnumerableDependencySource.StructureMap#Building#IEnumerableDependencySource#Description">
            <summary>Sets the stub of IEnumerableDependencySource.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIEnumerableDependencySource.DescriptionGet">
            <summary>Sets the stub of IEnumerableDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIEnumerableDependencySource.StructureMap#Building#IEnumerableDependencySource#ItemType">
            <summary>Sets the stub of IEnumerableDependencySource.get_ItemType()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIEnumerableDependencySource.ItemTypeGet">
            <summary>Sets the stub of IEnumerableDependencySource.get_ItemType()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIEnumerableDependencySource.StructureMap#Building#IEnumerableDependencySource#Items">
            <summary>Sets the stub of IEnumerableDependencySource.get_Items()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIEnumerableDependencySource.ItemsGet">
            <summary>Sets the stub of IEnumerableDependencySource.get_Items()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIEnumerableDependencySource.StructureMap#Building#IEnumerableDependencySource#ReturnedType">
            <summary>Sets the stub of IEnumerableDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIEnumerableDependencySource.ReturnedTypeGet">
            <summary>Sets the stub of IEnumerableDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubIHasSetters">
            <summary>Stub type of StructureMap.Building.IHasSetters</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIHasSetters.#ctor">
            <summary>Initializes a new instance of type StubIHasSetters</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIHasSetters.AddSetter">
            <summary>Sets the stub of IHasSetters.Add(Setter setter)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIHasSetters.AddTypeMemberInfoIDependencySource">
            <summary>Sets the stub of IHasSetters.Add(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubIHasSetters.StructureMap#Building#IHasSetters#ConcreteType">
            <summary>Sets the stub of IHasSetters.get_ConcreteType()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubIHasSetters.ConcreteTypeGet">
            <summary>Sets the stub of IHasSetters.get_ConcreteType()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIHasSetters.StructureMap#Building#IHasSetters#Add(StructureMap.Building.Setter)">
            <summary>Sets the stub of IHasSetters.Add(Setter setter)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubIHasSetters.StructureMap#Building#IHasSetters#Add(System.Type,System.Reflection.MemberInfo,StructureMap.Building.IDependencySource)">
            <summary>Sets the stub of IHasSetters.Add(Type setterType, MemberInfo member, IDependencySource value)</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubLifecycleDependencySource">
            <summary>Stub type of StructureMap.Building.LifecycleDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubLifecycleDependencySource.#ctor(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubLifecycleDependencySource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubLifecycleDependencySource.InitializeStub">
            <summary>Initializes a new instance of type StubLifecycleDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubLifecycleDependencySource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubLifecycleDependencySource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubListDependencySource">
            <summary>Stub type of StructureMap.Building.ListDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubListDependencySource.#ctor(System.Type,StructureMap.Building.IDependencySource[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubListDependencySource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubListDependencySource.Description">
            <summary>Sets the stub of ListDependencySource.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubListDependencySource.DescriptionGet">
            <summary>Sets the stub of ListDependencySource.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubListDependencySource.InitializeStub">
            <summary>Initializes a new instance of type StubListDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubListDependencySource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubListDependencySource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubReferencedDependencySource">
            <summary>Stub type of StructureMap.Building.ReferencedDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubReferencedDependencySource.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubReferencedDependencySource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubReferencedDependencySource.Equals(System.Object)">
            <summary>Sets the stub of ReferencedDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubReferencedDependencySource.EqualsObject">
            <summary>Sets the stub of ReferencedDependencySource.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubReferencedDependencySource.GetHashCode">
            <summary>Sets the stub of ReferencedDependencySource.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubReferencedDependencySource.GetHashCode01">
            <summary>Sets the stub of ReferencedDependencySource.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubReferencedDependencySource.InitializeStub">
            <summary>Initializes a new instance of type StubReferencedDependencySource</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubReferencedDependencySource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubReferencedDependencySource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubReferencedDependencySource.ToString">
            <summary>Sets the stub of ReferencedDependencySource.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubReferencedDependencySource.ToString01">
            <summary>Sets the stub of ReferencedDependencySource.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubSetter">
            <summary>Stub type of StructureMap.Building.Setter</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubSetter.#ctor(System.Type,System.Reflection.MemberInfo,StructureMap.Building.IDependencySource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubSetter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubSetter.InitializeStub">
            <summary>Initializes a new instance of type StubSetter</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubSetter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubSetter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubStructureMapBuildException">
            <summary>Stub type of StructureMap.Building.StructureMapBuildException</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubStructureMapBuildException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubStructureMapBuildException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.InitializeStub">
            <summary>Initializes a new instance of type StubStructureMapBuildException</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.Message">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.MessageGet">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapBuildException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapBuildException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapBuildException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Fakes.StubStructureMapInterceptorException">
            <summary>Stub type of StructureMap.Building.StructureMapInterceptorException</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubStructureMapInterceptorException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubStructureMapInterceptorException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.InitializeStub">
            <summary>Initializes a new instance of type StubStructureMapInterceptorException</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.Message">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.MessageGet">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:StructureMap.Building.Fakes.StubStructureMapInterceptorException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:StructureMap.Building.Fakes.StubStructureMapInterceptorException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Fakes.StubStructureMapInterceptorException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1">
            <summary>Shim type of StructureMap.Building.Interception.ActivatorInterceptor`1</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.#ctor(StructureMap.Building.Interception.ActivatorInterceptor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AcceptsGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Accepts()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.AcceptsGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Accepts()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.EqualsActivatorInterceptorOfT0">
            <summary>Sets the shim of ActivatorInterceptor`1.Equals(ActivatorInterceptor`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.EqualsObject">
            <summary>Sets the shim of ActivatorInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of ActivatorInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.ReturnsGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.RoleGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the shim of ActivatorInterceptor`1.ToExpression(Policies policies, ParameterExpression context, ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.ToPolicy">
            <summary>Sets the shim of ActivatorInterceptor`1.ToPolicy()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.AllInstances.ToString01">
            <summary>Sets the shim of ActivatorInterceptor`1.ToString()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.Bind(StructureMap.Building.Interception.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.ConstructorExpressionOfActionOfIContextT0String">
            <summary>Sets the shim of ActivatorInterceptor`1.ActivatorInterceptor`1(Expression`1&lt;Action`2&lt;IContext,!0&gt;&gt; action, String description)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.ConstructorExpressionOfActionOfT0String">
            <summary>Sets the shim of ActivatorInterceptor`1.ActivatorInterceptor`1(Expression`1&lt;Action`1&lt;!0&gt;&gt; action, String description)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.DescriptionGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.EqualsActivatorInterceptorOfT0">
            <summary>Sets the shim of ActivatorInterceptor`1.Equals(ActivatorInterceptor`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.EqualsObject">
            <summary>Sets the shim of ActivatorInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.GetHashCode">
            <summary>Sets the shim of ActivatorInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.ReturnsGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.RoleGet">
            <summary>Sets the shim of ActivatorInterceptor`1.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the shim of ActivatorInterceptor`1.ToExpression(Policies policies, ParameterExpression context, ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.ToPolicy">
            <summary>Sets the shim of ActivatorInterceptor`1.ToPolicy()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimActivatorInterceptor`1.ToString">
            <summary>Sets the shim of ActivatorInterceptor`1.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimBlockPlan">
            <summary>Shim type of StructureMap.Building.Interception.BlockPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimBlockPlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimBlockPlan.#ctor(StructureMap.Building.Interception.BlockPlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AddExpressionArray">
            <summary>Sets the shim of BlockPlan.Add(Expression[] expressions)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AddVariableParameterExpression">
            <summary>Sets the shim of BlockPlan.AddVariable(ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AddVariablesIEnumerableOfParameterExpression">
            <summary>Sets the shim of BlockPlan.AddVariables(IEnumerable`1&lt;ParameterExpression&gt; variables)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AdditionOpBlockPlanExpression">
            <summary>Sets the shim of BlockPlan.op_Addition(BlockPlan plan, Expression expression)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances.AddExpressionArray">
            <summary>Sets the shim of BlockPlan.Add(Expression[] expressions)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances.AddVariableParameterExpression">
            <summary>Sets the shim of BlockPlan.AddVariable(ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances.AddVariablesIEnumerableOfParameterExpression">
            <summary>Sets the shim of BlockPlan.AddVariables(IEnumerable`1&lt;ParameterExpression&gt; variables)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances.FindVariableOfTypeType">
            <summary>Sets the shim of BlockPlan.FindVariableOfType(Type type)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances.ToExpression">
            <summary>Sets the shim of BlockPlan.ToExpression()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.AllInstances.VariablesGet">
            <summary>Sets the shim of BlockPlan.get_Variables()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimBlockPlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimBlockPlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.Constructor">
            <summary>Sets the shim of BlockPlan.BlockPlan()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.FindVariableOfTypeType">
            <summary>Sets the shim of BlockPlan.FindVariableOfType(Type type)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.ToExpression">
            <summary>Sets the shim of BlockPlan.ToExpression()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimBlockPlan.VariablesGet">
            <summary>Sets the shim of BlockPlan.get_Variables()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor">
            <summary>Shim type of StructureMap.Building.Interception.DecoratorInterceptor</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.#ctor(StructureMap.Building.Interception.DecoratorInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AcceptsGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Accepts()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.AcceptsGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Accepts()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.DescriptionGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.InstanceGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.ReturnsGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.RoleGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.ToConcreteBuildPoliciesParameterExpression">
            <summary>Sets the shim of DecoratorInterceptor.ToConcreteBuild(Policies policies, ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.AllInstances.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the shim of DecoratorInterceptor.ToExpression(Policies policies, ParameterExpression session, ParameterExpression variable)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.Bind(StructureMap.Building.Interception.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ConstructorTypeIConfiguredInstance">
            <summary>Sets the shim of DecoratorInterceptor.DecoratorInterceptor(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ConstructorTypeType">
            <summary>Sets the shim of DecoratorInterceptor.DecoratorInterceptor(Type pluginType, Type pluggedType)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.DescriptionGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.InstanceGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ReturnsGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.RoleGet">
            <summary>Sets the shim of DecoratorInterceptor.get_Role()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource">
            <summary>Shim type of StructureMap.Building.Interception.DecoratorInterceptor+LiteralDependencySource</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.#ctor(StructureMap.Building.Interception.DecoratorInterceptor.LiteralDependencySource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of LiteralDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AllInstances.AcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of LiteralDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AllInstances.DescriptionGet">
            <summary>Sets the shim of LiteralDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of LiteralDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AllInstances.ReturnedTypeSetType">
            <summary>Sets the shim of LiteralDependencySource.set_ReturnedType(Type value)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of LiteralDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.ConstructorExpressionType">
            <summary>Sets the shim of LiteralDependencySource.LiteralDependencySource(Expression expression, Type returnedType)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.DescriptionGet">
            <summary>Sets the shim of LiteralDependencySource.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.ReturnedTypeGet">
            <summary>Sets the shim of LiteralDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.ReturnedTypeSetType">
            <summary>Sets the shim of LiteralDependencySource.set_ReturnedType(Type value)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ShimLiteralDependencySource.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of LiteralDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ToConcreteBuildPoliciesParameterExpression">
            <summary>Sets the shim of DecoratorInterceptor.ToConcreteBuild(Policies policies, ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorInterceptor.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the shim of DecoratorInterceptor.ToExpression(Policies policies, ParameterExpression session, ParameterExpression variable)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy">
            <summary>Shim type of StructureMap.Building.Interception.DecoratorPolicy</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.#ctor(StructureMap.Building.Interception.DecoratorPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.AllInstances.DescriptionGet">
            <summary>Sets the shim of DecoratorPolicy.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.AllInstances.DetermineInterceptorsTypeInstance">
            <summary>Sets the shim of DecoratorPolicy.DetermineInterceptors(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.Bind(StructureMap.Building.Interception.IInterceptorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.ConstructorTypeConfiguredInstanceFuncOfInstanceBoolean">
            <summary>Sets the shim of DecoratorPolicy.DecoratorPolicy(Type pluginType, ConfiguredInstance instance, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.ConstructorTypeTypeFuncOfInstanceBoolean">
            <summary>Sets the shim of DecoratorPolicy.DecoratorPolicy(Type pluginType, Type pluggedType, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.DescriptionGet">
            <summary>Sets the shim of DecoratorPolicy.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimDecoratorPolicy.DetermineInterceptorsTypeInstance">
            <summary>Sets the shim of DecoratorPolicy.DetermineInterceptors(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1">
            <summary>Shim type of StructureMap.Building.Interception.FuncInterceptor`1</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.#ctor(StructureMap.Building.Interception.FuncInterceptor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AcceptsGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Accepts()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.AcceptsGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Accepts()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.EqualsFuncInterceptorOfT0">
            <summary>Sets the shim of FuncInterceptor`1.Equals(FuncInterceptor`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.EqualsObject">
            <summary>Sets the shim of FuncInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of FuncInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.ReturnsGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.RoleGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the shim of FuncInterceptor`1.ToExpression(Policies policies, ParameterExpression context, ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.ToPolicy">
            <summary>Sets the shim of FuncInterceptor`1.ToPolicy()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.AllInstances.ToString01">
            <summary>Sets the shim of FuncInterceptor`1.ToString()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.Bind(StructureMap.Building.Interception.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.ConstructorExpressionOfFuncOfIContextT0T0String">
            <summary>Sets the shim of FuncInterceptor`1.FuncInterceptor`1(Expression`1&lt;Func`3&lt;IContext,!0,!0&gt;&gt; expression, String description)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.ConstructorExpressionOfFuncOfT0T0String">
            <summary>Sets the shim of FuncInterceptor`1.FuncInterceptor`1(Expression`1&lt;Func`2&lt;!0,!0&gt;&gt; expression, String description)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.DescriptionGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.EqualsFuncInterceptorOfT0">
            <summary>Sets the shim of FuncInterceptor`1.Equals(FuncInterceptor`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.EqualsObject">
            <summary>Sets the shim of FuncInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.GetHashCode">
            <summary>Sets the shim of FuncInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.ReturnsGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.RoleGet">
            <summary>Sets the shim of FuncInterceptor`1.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the shim of FuncInterceptor`1.ToExpression(Policies policies, ParameterExpression context, ParameterExpression variable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.ToPolicy">
            <summary>Sets the shim of FuncInterceptor`1.ToPolicy()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimFuncInterceptor`1.ToString">
            <summary>Sets the shim of FuncInterceptor`1.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan">
            <summary>Shim type of StructureMap.Building.Interception.InterceptionPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.#ctor(StructureMap.Building.Interception.InterceptionPlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of InterceptionPlan.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of InterceptionPlan.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.DescriptionGet">
            <summary>Sets the shim of InterceptionPlan.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.InnerGet">
            <summary>Sets the shim of InterceptionPlan.get_Inner()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of InterceptionPlan.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.StructureMapBuildingIDependencySourceAcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of InterceptionPlan.StructureMap.Building.IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.ToBuilderOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Building.Interception.InterceptionPlan,System.Func{StructureMap.IBuildSession,StructureMap.IContext,``0}})">
            <summary>Sets the shim of InterceptionPlan.ToBuilder()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of InterceptionPlan.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances._addActivationsb__19_0InterceptionPlanActivatorGroup">
            <summary>Sets the shim of InterceptionPlan.&lt;addActivations&gt;b__19_0(ActivatorGroup x)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances._addActivationsb__19_1InterceptionPlanActivatorGroup">
            <summary>Sets the shim of InterceptionPlan.&lt;addActivations&gt;b__19_1(ActivatorGroup x)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.addActivationsBlockPlan">
            <summary>Sets the shim of InterceptionPlan.addActivations(BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.addDecoratorsParameterExpressionParameterExpressionBlockPlan">
            <summary>Sets the shim of InterceptionPlan.addDecorators(ParameterExpression context, ParameterExpression pluginTypeVariable, BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.addPluginTypeVariableBlockPlan">
            <summary>Sets the shim of InterceptionPlan.addPluginTypeVariable(BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.createTheReturnValueParameterExpressionBlockPlan">
            <summary>Sets the shim of InterceptionPlan.createTheReturnValue(ParameterExpression variable, BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.AllInstances.findActivatorGroups">
            <summary>Sets the shim of InterceptionPlan.findActivatorGroups()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.Bind(StructureMap.Building.IBuildPlanVisitable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.Bind(StructureMap.Building.Interception.IInterceptionPlan)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ConstructorTypeIDependencySourcePoliciesIEnumerableOfIInterceptor">
            <summary>Sets the shim of InterceptionPlan.InterceptionPlan(Type pluginType, IDependencySource inner, Policies policies, IEnumerable`1&lt;IInterceptor&gt; interceptors)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.DescriptionGet">
            <summary>Sets the shim of InterceptionPlan.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.InnerGet">
            <summary>Sets the shim of InterceptionPlan.get_Inner()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ReturnedTypeGet">
            <summary>Sets the shim of InterceptionPlan.get_ReturnedType()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup">
            <summary>Shim type of StructureMap.Building.Interception.InterceptionPlan+ActivatorGroup</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.#ctor(StructureMap.Building.Interception.InterceptionPlan.ActivatorGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.AllInstances.CreateExpressionsPoliciesParameterExpression">
            <summary>Sets the shim of ActivatorGroup.CreateExpressions(Policies policies, ParameterExpression originalVariable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.AllInstances.InterceptorsGet">
            <summary>Sets the shim of ActivatorGroup.get_Interceptors()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.AllInstances.ToParameterExpressionsType">
            <summary>Sets the shim of ActivatorGroup.ToParameterExpressions(Type returnedType)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.ConstructorIGroupingOfTypeIInterceptor">
            <summary>Sets the shim of ActivatorGroup.ActivatorGroup(IGrouping`2&lt;Type,IInterceptor&gt; group)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.CreateExpressionsPoliciesParameterExpression">
            <summary>Sets the shim of ActivatorGroup.CreateExpressions(Policies policies, ParameterExpression originalVariable)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.InterceptorsGet">
            <summary>Sets the shim of ActivatorGroup.get_Interceptors()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ShimActivatorGroup.ToParameterExpressionsType">
            <summary>Sets the shim of ActivatorGroup.ToParameterExpressions(Type returnedType)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.StructureMapBuildingIDependencySourceAcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of InterceptionPlan.StructureMap.Building.IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ToBuilderOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{StructureMap.IBuildSession,StructureMap.IContext,``0}})">
            <summary>Sets the shim of InterceptionPlan.ToBuilder()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of InterceptionPlan.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan._addActivationsb__19_0InterceptionPlanActivatorGroup">
            <summary>Sets the shim of InterceptionPlan.&lt;addActivations&gt;b__19_0(ActivatorGroup x)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan._addActivationsb__19_1InterceptionPlanActivatorGroup">
            <summary>Sets the shim of InterceptionPlan.&lt;addActivations&gt;b__19_1(ActivatorGroup x)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.addActivationsBlockPlan">
            <summary>Sets the shim of InterceptionPlan.addActivations(BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.addDecoratorsParameterExpressionParameterExpressionBlockPlan">
            <summary>Sets the shim of InterceptionPlan.addDecorators(ParameterExpression context, ParameterExpression pluginTypeVariable, BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.addPluginTypeVariableBlockPlan">
            <summary>Sets the shim of InterceptionPlan.addPluginTypeVariable(BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.createTheReturnValueParameterExpressionBlockPlan">
            <summary>Sets the shim of InterceptionPlan.createTheReturnValue(ParameterExpression variable, BlockPlan plan)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptionPlan.findActivatorGroups">
            <summary>Sets the shim of InterceptionPlan.findActivatorGroups()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory">
            <summary>Shim type of StructureMap.Building.Interception.InterceptorFactory</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.ForActionOf1StringActionOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Action{StructureMap.IContext,``0},StructureMap.Building.Interception.IInterceptor})">
            <summary>Sets the shim of InterceptorFactory.ForAction(String description, Action`2&lt;IContext,!!0&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.ForActionOf1StringActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Action{``0},StructureMap.Building.Interception.IInterceptor})">
            <summary>Sets the shim of InterceptorFactory.ForAction(String description, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.ForFuncOf1StringFuncOfIContextM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{StructureMap.IContext,``0,``0},StructureMap.Building.Interception.IInterceptor})">
            <summary>Sets the shim of InterceptorFactory.ForFunc(String description, Func`3&lt;IContext,!!0,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorFactory.ForFuncOf1StringFuncOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0,``0},StructureMap.Building.Interception.IInterceptor})">
            <summary>Sets the shim of InterceptorFactory.ForFunc(String description, Func`2&lt;!!0,!!0&gt; func)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1">
            <summary>Shim type of StructureMap.Building.Interception.InterceptorPolicy`1</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.#ctor(StructureMap.Building.Interception.InterceptorPolicy{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of InterceptorPolicy`1.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.DetermineInterceptorsTypeInstance">
            <summary>Sets the shim of InterceptorPolicy`1.DetermineInterceptors(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.EqualsInterceptorPolicyOfT0">
            <summary>Sets the shim of InterceptorPolicy`1.Equals(InterceptorPolicy`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.EqualsObject">
            <summary>Sets the shim of InterceptorPolicy`1.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.FilterGet">
            <summary>Sets the shim of InterceptorPolicy`1.get_Filter()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.FilterSetFuncOfInstanceBoolean">
            <summary>Sets the shim of InterceptorPolicy`1.set_Filter(Func`2&lt;Instance,Boolean&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of InterceptorPolicy`1.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.Bind(StructureMap.Building.Interception.IInterceptorPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.ConstructorIInterceptorFuncOfInstanceBoolean">
            <summary>Sets the shim of InterceptorPolicy`1.InterceptorPolicy`1(IInterceptor interceptor, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.DescriptionGet">
            <summary>Sets the shim of InterceptorPolicy`1.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.DetermineInterceptorsTypeInstance">
            <summary>Sets the shim of InterceptorPolicy`1.DetermineInterceptors(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.EqualsInterceptorPolicyOfT0">
            <summary>Sets the shim of InterceptorPolicy`1.Equals(InterceptorPolicy`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.EqualsObject">
            <summary>Sets the shim of InterceptorPolicy`1.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.FilterGet">
            <summary>Sets the shim of InterceptorPolicy`1.get_Filter()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.FilterSetFuncOfInstanceBoolean">
            <summary>Sets the shim of InterceptorPolicy`1.set_Filter(Func`2&lt;Instance,Boolean&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimInterceptorPolicy`1.GetHashCode">
            <summary>Sets the shim of InterceptorPolicy`1.GetHashCode()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimParameterRewriter">
            <summary>Shim type of StructureMap.Building.Interception.ParameterRewriter</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.#ctor(StructureMap.Building.Interception.ParameterRewriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.AllInstances.VisitParameterParameterExpression">
            <summary>Sets the shim of ParameterRewriter.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.ConstructorParameterExpressionParameterExpression">
            <summary>Sets the shim of ParameterRewriter.ParameterRewriter(ParameterExpression before, ParameterExpression after)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.ReplaceParameterTypeLambdaExpressionParameterExpression">
            <summary>Sets the shim of ParameterRewriter.ReplaceParameter(Type acceptsType, LambdaExpression expression, ParameterExpression newParam)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.ShimParameterRewriter.VisitParameterParameterExpression">
            <summary>Sets the shim of ParameterRewriter.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1">
            <summary>Stub type of StructureMap.Building.Interception.ActivatorInterceptor`1</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.#ctor(System.Linq.Expressions.Expression{System.Action{`0}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.#ctor(System.Linq.Expressions.Expression{System.Action{StructureMap.IContext,`0}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.Equals(System.Object)">
            <summary>Sets the stub of ActivatorInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.EqualsObject">
            <summary>Sets the stub of ActivatorInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.GetHashCode">
            <summary>Sets the stub of ActivatorInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.GetHashCode01">
            <summary>Sets the stub of ActivatorInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.InitializeStub">
            <summary>Initializes a new instance of type StubActivatorInterceptor</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.ToString">
            <summary>Sets the stub of ActivatorInterceptor`1.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubActivatorInterceptor`1.ToString01">
            <summary>Sets the stub of ActivatorInterceptor`1.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubBlockPlan">
            <summary>Stub type of StructureMap.Building.Interception.BlockPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubBlockPlan.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubBlockPlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubBlockPlan.InitializeStub">
            <summary>Initializes a new instance of type StubBlockPlan</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubBlockPlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubBlockPlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor">
            <summary>Stub type of StructureMap.Building.Interception.DecoratorInterceptor</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor.#ctor(System.Type,StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor.#ctor(System.Type,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubDecoratorInterceptor</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubDecoratorInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy">
            <summary>Stub type of StructureMap.Building.Interception.DecoratorPolicy</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy.#ctor(System.Type,StructureMap.Pipeline.ConfiguredInstance,System.Func{StructureMap.Pipeline.Instance,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy.#ctor(System.Type,System.Type,System.Func{StructureMap.Pipeline.Instance,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubDecoratorPolicy</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubDecoratorPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1">
            <summary>Stub type of StructureMap.Building.Interception.FuncInterceptor`1</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`0}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.#ctor(System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,`0,`0}},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.Description">
            <summary>Sets the stub of FuncInterceptor`1.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.DescriptionGet">
            <summary>Sets the stub of FuncInterceptor`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.Equals(System.Object)">
            <summary>Sets the stub of FuncInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.EqualsObject">
            <summary>Sets the stub of FuncInterceptor`1.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.GetHashCode">
            <summary>Sets the stub of FuncInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.GetHashCode01">
            <summary>Sets the stub of FuncInterceptor`1.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.InitializeStub">
            <summary>Initializes a new instance of type StubFuncInterceptor</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.ToString">
            <summary>Sets the stub of FuncInterceptor`1.ToString()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubFuncInterceptor`1.ToString01">
            <summary>Sets the stub of FuncInterceptor`1.ToString()</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan">
            <summary>Stub type of StructureMap.Building.Interception.IInterceptionPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.#ctor">
            <summary>Initializes a new instance of type StubIInterceptionPlan</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.AcceptVisitorIBuildPlanVisitor">
            <summary>Sets the stub of IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.AcceptVisitorIDependencyVisitor">
            <summary>Sets the stub of IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.StructureMap#Building#IDescribed#Description">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.DescriptionGet">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.StructureMap#Building#IDependencySource#ReturnedType">
            <summary>Sets the stub of IDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.ReturnedTypeGet">
            <summary>Sets the stub of IDependencySource.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.StructureMap#Building#IBuildPlanVisitable#AcceptVisitor(StructureMap.Diagnostics.IBuildPlanVisitor)">
            <summary>Sets the stub of IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.StructureMap#Building#IDependencySource#AcceptVisitor(StructureMap.Diagnostics.IDependencyVisitor)">
            <summary>Sets the stub of IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.StructureMap#Building#IDependencySource#ToExpression(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of IDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptionPlan.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the stub of IDependencySource.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubIInterceptor">
            <summary>Stub type of StructureMap.Building.Interception.IInterceptor</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIInterceptor</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptor.StructureMap#Building#Interception#IInterceptor#Accepts">
            <summary>Sets the stub of IInterceptor.get_Accepts()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptor.AcceptsGet">
            <summary>Sets the stub of IInterceptor.get_Accepts()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptor.StructureMap#Building#IDescribed#Description">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptor.DescriptionGet">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptor.StructureMap#Building#Interception#IInterceptor#Returns">
            <summary>Sets the stub of IInterceptor.get_Returns()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptor.ReturnsGet">
            <summary>Sets the stub of IInterceptor.get_Returns()</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptor.StructureMap#Building#Interception#IInterceptor#Role">
            <summary>Sets the stub of IInterceptor.get_Role()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptor.RoleGet">
            <summary>Sets the stub of IInterceptor.get_Role()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptor.StructureMap#Building#Interception#IInterceptor#ToExpression(StructureMap.Policies,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of IInterceptor.ToExpression(Policies policies, ParameterExpression session, ParameterExpression variable)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptor.ToExpressionPoliciesParameterExpressionParameterExpression">
            <summary>Sets the stub of IInterceptor.ToExpression(Policies policies, ParameterExpression session, ParameterExpression variable)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubIInterceptorPolicy">
            <summary>Stub type of StructureMap.Building.Interception.IInterceptorPolicy</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptorPolicy.#ctor">
            <summary>Initializes a new instance of type StubIInterceptorPolicy</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubIInterceptorPolicy.StructureMap#Building#IDescribed#Description">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptorPolicy.DescriptionGet">
            <summary>Sets the stub of IDescribed.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubIInterceptorPolicy.DetermineInterceptorsTypeInstance">
            <summary>Sets the stub of IInterceptorPolicy.DetermineInterceptors(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubIInterceptorPolicy.StructureMap#Building#Interception#IInterceptorPolicy#DetermineInterceptors(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IInterceptorPolicy.DetermineInterceptors(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubInterceptionPlan">
            <summary>Stub type of StructureMap.Building.Interception.InterceptionPlan</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubInterceptionPlan.#ctor(System.Type,StructureMap.Building.IDependencySource,StructureMap.Policies,System.Collections.Generic.IEnumerable{StructureMap.Building.Interception.IInterceptor})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubInterceptionPlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubInterceptionPlan.InitializeStub">
            <summary>Initializes a new instance of type StubInterceptionPlan</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubInterceptionPlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubInterceptionPlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1">
            <summary>Stub type of StructureMap.Building.Interception.InterceptorPolicy`1</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.#ctor(StructureMap.Building.Interception.IInterceptor,System.Func{StructureMap.Pipeline.Instance,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.Equals(System.Object)">
            <summary>Sets the stub of InterceptorPolicy`1.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.EqualsObject">
            <summary>Sets the stub of InterceptorPolicy`1.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.GetHashCode">
            <summary>Sets the stub of InterceptorPolicy`1.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.GetHashCode01">
            <summary>Sets the stub of InterceptorPolicy`1.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.InitializeStub">
            <summary>Initializes a new instance of type StubInterceptorPolicy</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubInterceptorPolicy`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Building.Interception.Fakes.StubParameterRewriter">
            <summary>Stub type of StructureMap.Building.Interception.ParameterRewriter</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.#ctor(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubParameterRewriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.InitializeStub">
            <summary>Initializes a new instance of type StubParameterRewriter</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubParameterRewriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Building.Interception.Fakes.StubParameterRewriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitBinaryBinaryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitBinary(BinaryExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitBlockBlockExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitBlock(BlockExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>Sets the stub of ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitCatchBlockCatchBlock">
            <summary>Sets the stub of ExpressionVisitor.VisitCatchBlock(CatchBlock node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitConditionalConditionalExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitConditional(ConditionalExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitConstantConstantExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitConstant(ConstantExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitDebugInfoDebugInfoExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitDebugInfo(DebugInfoExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitDefaultDefaultExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitDefault(DefaultExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitDynamicDynamicExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitDynamic(DynamicExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>Sets the stub of ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitElementInitElementInit">
            <summary>Sets the stub of ExpressionVisitor.VisitElementInit(ElementInit node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitExtensionExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitExtension(Expression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitGotoGotoExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitGoto(GotoExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitIndexIndexExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitIndex(IndexExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitInvocationInvocationExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitInvocation(InvocationExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLabelLabelExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitLabel(LabelExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
            <summary>Sets the stub of ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLabelTargetLabelTarget">
            <summary>Sets the stub of ExpressionVisitor.VisitLabelTarget(LabelTarget node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>Sets the stub of ExpressionVisitor.VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLambdaOf1ExpressionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression})">
            <summary>Sets stubs of VisitLambda(Expression`1&lt;!!0&gt; node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitListInitListInitExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitListInit(ListInitExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitLoopLoopExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitLoop(LoopExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberAssignment(MemberAssignment node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberBindingMemberBinding">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberBinding(MemberBinding node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberInitMemberInitExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberInit(MemberInitExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberListBindingMemberListBinding">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberListBinding(MemberListBinding node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the stub of ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMemberMemberExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitMember(MemberExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitMethodCallMethodCallExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitMethodCall(MethodCallExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitNewArrayNewArrayExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitNewArray(NewArrayExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitNewNewExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitNew(NewExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of ParameterRewriter.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitParameterParameterExpression">
            <summary>Sets the stub of ParameterRewriter.VisitParameter(ParameterExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitRuntimeVariablesRuntimeVariablesExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitSwitchCaseSwitchCase">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitchCase(SwitchCase node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitSwitchSwitchExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitSwitch(SwitchExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitTryTryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitTry(TryExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitTypeBinaryTypeBinaryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression node)</summary>
        </member>
        <member name="M:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Sets the stub of ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="F:StructureMap.Building.Interception.Fakes.StubParameterRewriter.VisitUnaryUnaryExpression">
            <summary>Sets the stub of ExpressionVisitor.VisitUnary(UnaryExpression node)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression">
            <summary>Shim type of StructureMap.Configuration.DSL.Expressions.ConfigureConventionExpression</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.#ctor(StructureMap.Configuration.DSL.Expressions.ConfigureConventionExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.AllInstances.OnAddedPluginTypesActionOfGenericFamilyExpression">
            <summary>Sets the shim of ConfigureConventionExpression.OnAddedPluginTypes(Action`1&lt;GenericFamilyExpression&gt; configurePluginType)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.ConstructorConfigurableRegistrationConvention">
            <summary>Sets the shim of ConfigureConventionExpression.ConfigureConventionExpression(ConfigurableRegistrationConvention convention)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimConfigureConventionExpression.OnAddedPluginTypesActionOfGenericFamilyExpression">
            <summary>Sets the shim of ConfigureConventionExpression.OnAddedPluginTypes(Action`1&lt;GenericFamilyExpression&gt; configurePluginType)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1">
            <summary>Shim type of StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression`1</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.#ctor(StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddInstanceInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AddInstance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddInstancesActionOfIInstanceExpressionOfT0">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AddInstances(Action`1&lt;IInstanceExpression`1&lt;!0&gt;&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(!!0 object)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AddSpecialActionOfIInstanceExpressionOfT0">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AddSpecial(Action`1&lt;IInstanceExpression`1&lt;!0&gt;&gt; configure)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddInstanceInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AddInstance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddInstancesActionOfIInstanceExpressionOfT0">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AddInstances(Action`1&lt;IInstanceExpression`1&lt;!0&gt;&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(!!0 object)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Add(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AddSpecialActionOfIInstanceExpressionOfT0">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AddSpecial(Action`1&lt;IInstanceExpression`1&lt;!0&gt;&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.AlwaysUnique">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AlwaysUnique()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.ClearAll">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.ConfigureActionOfPluginFamily">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Configure(Action`1&lt;PluginFamily&gt; configuration)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.ContainerScoped">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.ContainerScoped()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.DecorateAllWithExpressionOfFuncOfIContextT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(Expression`1&lt;Func`3&lt;IContext,!0,!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.DecorateAllWithExpressionOfFuncOfT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(Expression`1&lt;Func`2&lt;!0,!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.DecorateAllWithOf1FuncOfInstanceBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Func{StructureMap.Pipeline.Instance,System.Boolean},StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.DecorateAllWithStringFuncOfIContextT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(String description, Func`3&lt;IContext,!0,!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.DecorateAllWithStringFuncOfT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(String description, Func`2&lt;!0,!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.InterceptWithIInterceptorFuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.InterceptWith(IInterceptor interceptor, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.LifecycleIsILifecycle">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.LifecycleIs(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.LifecycleIsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.LifecycleIs()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.MissingNamedInstanceIsGet">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.get_MissingNamedInstanceIs()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.OnCreationForAllExpressionOfActionOfIContextT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(Expression`1&lt;Action`2&lt;IContext,!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.OnCreationForAllExpressionOfActionOfT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(Expression`1&lt;Action`1&lt;!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.OnCreationForAllStringActionOfIContextT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(String description, Action`2&lt;IContext,!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.OnCreationForAllStringActionOfT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(String description, Action`1&lt;!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.Singleton">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Singleton()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.Transient">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Transient()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseIfNoneOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseIfNoneOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseIfNoneOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseIfNoneOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseIfNoneOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseIfNoneT0">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(!0 value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseInstanceInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseInstance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; expression)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(Expression`1&lt;Func`1&lt;!!0&gt;&gt; expression)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(!!0 object)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0},System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.UseString">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(String instanceName)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances._ctorb__3_0PluginGraph">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.&lt;.ctor&gt;b__3_0(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances._get_MissingNamedInstanceIsb__6_0Instance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.&lt;get_MissingNamedInstanceIs&gt;b__6_0(Instance i)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.alterSetActionOfPluginFamily">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.set_alter(Action`1&lt;PluginFamily&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.lifecycleIsILifecycle">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.lifecycleIs(ILifecycle lifecycle)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.registerDefaultInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.registerDefault(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AllInstances.registerFallBackInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.registerFallBack(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.AlwaysUnique">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.AlwaysUnique()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.ClearAll">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.ConfigureActionOfPluginFamily">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Configure(Action`1&lt;PluginFamily&gt; configuration)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.ConstructorRegistryILifecycle">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.CreatePluginFamilyExpression`1(Registry registry, ILifecycle scope)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.ContainerScoped">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.ContainerScoped()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.DecorateAllWithExpressionOfFuncOfIContextT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(Expression`1&lt;Func`3&lt;IContext,!0,!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.DecorateAllWithExpressionOfFuncOfT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(Expression`1&lt;Func`2&lt;!0,!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.DecorateAllWithOf1FuncOfInstanceBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{StructureMap.Pipeline.Instance,System.Boolean},StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.DecorateAllWithStringFuncOfIContextT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(String description, Func`3&lt;IContext,!0,!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.DecorateAllWithStringFuncOfT0T0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.DecorateAllWith(String description, Func`2&lt;!0,!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.InterceptWithIInterceptorFuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.InterceptWith(IInterceptor interceptor, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.LifecycleIsILifecycle">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.LifecycleIs(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.LifecycleIsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.LifecycleIs()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.MissingNamedInstanceIsGet">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.get_MissingNamedInstanceIs()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.OnCreationForAllExpressionOfActionOfIContextT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(Expression`1&lt;Action`2&lt;IContext,!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.OnCreationForAllExpressionOfActionOfT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(Expression`1&lt;Action`1&lt;!0&gt;&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.OnCreationForAllStringActionOfIContextT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(String description, Action`2&lt;IContext,!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.OnCreationForAllStringActionOfT0FuncOfInstanceBoolean">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.OnCreationForAll(String description, Action`1&lt;!0&gt; handler, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.Singleton">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Singleton()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.Transient">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Transient()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseIfNoneOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseIfNoneOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseIfNoneOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseIfNoneOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseIfNoneOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseIfNoneT0">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseIfNone(!0 value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseInstanceInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.UseInstance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; expression)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(Expression`1&lt;Func`1&lt;!!0&gt;&gt; expression)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(!!0 object)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.UseString">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.Use(String instanceName)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1._ctorb__3_0PluginGraph">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.&lt;.ctor&gt;b__3_0(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1._get_MissingNamedInstanceIsb__6_0Instance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.&lt;get_MissingNamedInstanceIs&gt;b__6_0(Instance i)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.alterSetActionOfPluginFamily">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.set_alter(Action`1&lt;PluginFamily&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.lifecycleIsILifecycle">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.lifecycleIs(ILifecycle lifecycle)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.registerDefaultInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.registerDefault(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimCreatePluginFamilyExpression`1.registerFallBackInstance">
            <summary>Sets the shim of CreatePluginFamilyExpression`1.registerFallBack(Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression">
            <summary>Shim type of StructureMap.Configuration.DSL.Expressions.GenericFamilyExpression</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.#ctor(StructureMap.Configuration.DSL.Expressions.GenericFamilyExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AddExpressionOfFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Add(Expression`1&lt;Func`2&lt;IContext,Object&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AddInstance">
            <summary>Sets the shim of GenericFamilyExpression.Add(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AddObject">
            <summary>Sets the shim of GenericFamilyExpression.Add(Object object)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AddStringFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Add(String description, Func`2&lt;IContext,Object&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AddType">
            <summary>Sets the shim of GenericFamilyExpression.Add(Type concreteType)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.AddExpressionOfFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Add(Expression`1&lt;Func`2&lt;IContext,Object&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.AddInstance">
            <summary>Sets the shim of GenericFamilyExpression.Add(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.AddObject">
            <summary>Sets the shim of GenericFamilyExpression.Add(Object object)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.AddStringFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Add(String description, Func`2&lt;IContext,Object&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.AddType">
            <summary>Sets the shim of GenericFamilyExpression.Add(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.ClearAll">
            <summary>Sets the shim of GenericFamilyExpression.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.ConfigureActionOfPluginFamily">
            <summary>Sets the shim of GenericFamilyExpression.Configure(Action`1&lt;PluginFamily&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.ContainerScoped">
            <summary>Sets the shim of GenericFamilyExpression.ContainerScoped()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.DecorateAllWithTypeFuncOfInstanceBoolean">
            <summary>Sets the shim of GenericFamilyExpression.DecorateAllWith(Type decoratorType, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.LifecycleIsILifecycle">
            <summary>Sets the shim of GenericFamilyExpression.LifecycleIs(ILifecycle lifecycle)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.MissingNamedInstanceIsInstance">
            <summary>Sets the shim of GenericFamilyExpression.MissingNamedInstanceIs(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.Singleton">
            <summary>Sets the shim of GenericFamilyExpression.Singleton()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.UseExpressionOfFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Use(Expression`1&lt;Func`2&lt;IContext,Object&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.UseInstance">
            <summary>Sets the shim of GenericFamilyExpression.Use(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.UseObject">
            <summary>Sets the shim of GenericFamilyExpression.Use(Object value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.UseString">
            <summary>Sets the shim of GenericFamilyExpression.Use(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.UseStringFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Use(String description, Func`2&lt;IContext,Object&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.UseType">
            <summary>Sets the shim of GenericFamilyExpression.Use(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.AllInstances.alterAndContinueActionOfPluginFamily">
            <summary>Sets the shim of GenericFamilyExpression.alterAndContinue(Action`1&lt;PluginFamily&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.ClearAll">
            <summary>Sets the shim of GenericFamilyExpression.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.ConfigureActionOfPluginFamily">
            <summary>Sets the shim of GenericFamilyExpression.Configure(Action`1&lt;PluginFamily&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.ConstructorTypeILifecycleRegistry">
            <summary>Sets the shim of GenericFamilyExpression.GenericFamilyExpression(Type pluginType, ILifecycle scope, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.ContainerScoped">
            <summary>Sets the shim of GenericFamilyExpression.ContainerScoped()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.DecorateAllWithTypeFuncOfInstanceBoolean">
            <summary>Sets the shim of GenericFamilyExpression.DecorateAllWith(Type decoratorType, Func`2&lt;Instance,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.LifecycleIsILifecycle">
            <summary>Sets the shim of GenericFamilyExpression.LifecycleIs(ILifecycle lifecycle)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.MissingNamedInstanceIsInstance">
            <summary>Sets the shim of GenericFamilyExpression.MissingNamedInstanceIs(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.Singleton">
            <summary>Sets the shim of GenericFamilyExpression.Singleton()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.UseExpressionOfFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Use(Expression`1&lt;Func`2&lt;IContext,Object&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.UseInstance">
            <summary>Sets the shim of GenericFamilyExpression.Use(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.UseObject">
            <summary>Sets the shim of GenericFamilyExpression.Use(Object value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.UseString">
            <summary>Sets the shim of GenericFamilyExpression.Use(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.UseStringFuncOfIContextObject">
            <summary>Sets the shim of GenericFamilyExpression.Use(String description, Func`2&lt;IContext,Object&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.UseType">
            <summary>Sets the shim of GenericFamilyExpression.Use(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericFamilyExpression.alterAndContinueActionOfPluginFamily">
            <summary>Sets the shim of GenericFamilyExpression.alterAndContinue(Action`1&lt;PluginFamily&gt; action)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression">
            <summary>Shim type of StructureMap.Configuration.DSL.Expressions.GenericIsExpression</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.#ctor(StructureMap.Configuration.DSL.Expressions.GenericIsExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.AllInstances.IsType">
            <summary>Sets the shim of GenericIsExpression.Is(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.AllInstances.TheInstanceNamedString">
            <summary>Sets the shim of GenericIsExpression.TheInstanceNamed(String name)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.ConstructorActionOfInstance">
            <summary>Sets the shim of GenericIsExpression.GenericIsExpression(Action`1&lt;Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.IsType">
            <summary>Sets the shim of GenericIsExpression.Is(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimGenericIsExpression.TheInstanceNamedString">
            <summary>Sets the shim of GenericIsExpression.TheInstanceNamed(String name)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1">
            <summary>Shim type of StructureMap.Configuration.DSL.Expressions.InstanceExpression`1</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.#ctor(StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.ConstructedByOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.ConstructedByOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.ConstructedByOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.ConstructedByOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.InstanceInstance">
            <summary>Sets the shim of InstanceExpression`1.Instance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.IsStructureMapConfigurationDSLExpressionsIsExpressionTget">
            <summary>Sets the shim of InstanceExpression`1.StructureMap.Configuration.DSL.Expressions.IsExpression&lt;T&gt;.get_Is()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.IsThisInstance">
            <summary>Sets the shim of InstanceExpression`1.IsThis(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.IsThisOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.IsThis(!!0 obj)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.ObjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.Object(!!0 theObject)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.TheDefault">
            <summary>Sets the shim of InstanceExpression`1.TheDefault()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.TheInstanceNamedString">
            <summary>Sets the shim of InstanceExpression`1.TheInstanceNamed(String name)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.TypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.Type()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.TypeType">
            <summary>Sets the shim of InstanceExpression`1.Type(Type type)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.AllInstances.returnInstanceOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.InstanceExpression{`0},``0,``0})">
            <summary>Sets the shim of InstanceExpression`1.returnInstance(!!0 instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.Bind(StructureMap.Configuration.DSL.Expressions.IInstanceExpression{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.Bind(StructureMap.Configuration.DSL.Expressions.IsExpression{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.ConstructedByOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.ConstructedByOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.ConstructedByOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.ConstructedByOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.ConstructedBy(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.ConstructorActionOfInstance">
            <summary>Sets the shim of InstanceExpression`1.InstanceExpression`1(Action`1&lt;Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.InstanceInstance">
            <summary>Sets the shim of InstanceExpression`1.Instance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.IsStructureMapConfigurationDSLExpressionsIsExpressionTget">
            <summary>Sets the shim of InstanceExpression`1.StructureMap.Configuration.DSL.Expressions.IsExpression&lt;T&gt;.get_Is()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.IsThisInstance">
            <summary>Sets the shim of InstanceExpression`1.IsThis(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.IsThisOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.IsThis(!!0 obj)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.ObjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.Object(!!0 theObject)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.TheDefault">
            <summary>Sets the shim of InstanceExpression`1.TheDefault()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.TheInstanceNamedString">
            <summary>Sets the shim of InstanceExpression`1.TheInstanceNamed(String name)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.TypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets the shim of InstanceExpression`1.Type()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.TypeType">
            <summary>Sets the shim of InstanceExpression`1.Type(Type type)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.ShimInstanceExpression`1.returnInstanceOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of InstanceExpression`1.returnInstance(!!0 instance)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.StubCreatePluginFamilyExpression`1">
            <summary>Stub type of StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression`1</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubCreatePluginFamilyExpression`1.#ctor(StructureMap.Registry,StructureMap.Pipeline.ILifecycle)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubCreatePluginFamilyExpression`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubCreatePluginFamilyExpression`1.InitializeStub">
            <summary>Initializes a new instance of type StubCreatePluginFamilyExpression</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubCreatePluginFamilyExpression`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubCreatePluginFamilyExpression`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericFamilyExpression">
            <summary>Stub type of StructureMap.Configuration.DSL.Expressions.GenericFamilyExpression</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericFamilyExpression.#ctor(System.Type,StructureMap.Pipeline.ILifecycle,StructureMap.Registry)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericFamilyExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericFamilyExpression.InitializeStub">
            <summary>Initializes a new instance of type StubGenericFamilyExpression</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericFamilyExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericFamilyExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericIsExpression">
            <summary>Stub type of StructureMap.Configuration.DSL.Expressions.GenericIsExpression</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericIsExpression.#ctor(System.Action{StructureMap.Pipeline.Instance})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericIsExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericIsExpression.InitializeStub">
            <summary>Initializes a new instance of type StubGenericIsExpression</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericIsExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubGenericIsExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1">
            <summary>Stub type of StructureMap.Configuration.DSL.Expressions.IInstanceExpression`1</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.#ctor">
            <summary>Initializes a new instance of type StubIInstanceExpression</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.ConstructedByOf1ExpressionOfFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets stubs of ConstructedBy(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.ConstructedByOf1ExpressionOfFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0}},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets stubs of ConstructedBy(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.ConstructedByOf1StringFuncOfIContextM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{StructureMap.IContext,``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets stubs of ConstructedBy(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.ConstructedByOf1StringFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{``0},StructureMap.Pipeline.LambdaInstance{``0,`0}})">
            <summary>Sets stubs of ConstructedBy(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.InstanceInstance">
            <summary>Sets the stub of IInstanceExpression`1.Instance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IsExpression{T}#Is">
            <summary>Sets the stub of IsExpression`1.get_Is()</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.IsGet">
            <summary>Sets the stub of IsExpression`1.get_Is()</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.IsThisInstance">
            <summary>Sets the stub of IsExpression`1.IsThis(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.IsThisOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets stubs of IsThis(!!0 obj)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.ObjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets stubs of Object(!!0 theObject)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#ConstructedBy``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>Sets the stub of IInstanceExpression`1.ConstructedBy(Expression`1&lt;Func`1&lt;!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#ConstructedBy``1(System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,``0}})">
            <summary>Sets the stub of IInstanceExpression`1.ConstructedBy(Expression`1&lt;Func`2&lt;IContext,!!0&gt;&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#ConstructedBy``1(System.String,System.Func{``0})">
            <summary>Sets the stub of IInstanceExpression`1.ConstructedBy(String description, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#ConstructedBy``1(System.String,System.Func{StructureMap.IContext,``0})">
            <summary>Sets the stub of IInstanceExpression`1.ConstructedBy(String description, Func`2&lt;IContext,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#Instance(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IInstanceExpression`1.Instance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#Object``1(``0)">
            <summary>Sets the stub of IInstanceExpression`1.Object(!!0 theObject)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#TheDefault">
            <summary>Sets the stub of IInstanceExpression`1.TheDefault()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#TheInstanceNamed(System.String)">
            <summary>Sets the stub of IInstanceExpression`1.TheInstanceNamed(String name)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#Type(System.Type)">
            <summary>Sets the stub of IInstanceExpression`1.Type(Type type)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IInstanceExpression{T}#Type``1">
            <summary>Sets the stub of IInstanceExpression`1.Type()</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IsExpression{T}#IsThis``1(``0)">
            <summary>Sets the stub of IsExpression`1.IsThis(!!0 obj)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.StructureMap#Configuration#DSL#Expressions#IsExpression{T}#IsThis(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IsExpression`1.IsThis(Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.TheDefault">
            <summary>Sets the stub of IInstanceExpression`1.TheDefault()</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.TheInstanceNamedString">
            <summary>Sets the stub of IInstanceExpression`1.TheInstanceNamed(String name)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.TypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{``0,`0}})">
            <summary>Sets stubs of Type()</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIInstanceExpression`1.TypeType">
            <summary>Sets the stub of IInstanceExpression`1.Type(Type type)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1">
            <summary>Stub type of StructureMap.Configuration.DSL.Expressions.IsExpression`1</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.#ctor">
            <summary>Initializes a new instance of type StubIsExpression</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.StructureMap#Configuration#DSL#Expressions#IsExpression{T}#Is">
            <summary>Sets the stub of IsExpression`1.get_Is()</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.IsGet">
            <summary>Sets the stub of IsExpression`1.get_Is()</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.IsThisInstance">
            <summary>Sets the stub of IsExpression`1.IsThis(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.IsThisOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ObjectInstance{``0,`0}})">
            <summary>Sets stubs of IsThis(!!0 obj)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.StructureMap#Configuration#DSL#Expressions#IsExpression{T}#IsThis(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IsExpression`1.IsThis(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Expressions.Fakes.StubIsExpression`1.StructureMap#Configuration#DSL#Expressions#IsExpression{T}#IsThis``1(``0)">
            <summary>Sets the stub of IsExpression`1.IsThis(!!0 obj)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention">
            <summary>Shim type of StructureMap.Configuration.DSL.SetterConvention</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.#ctor(StructureMap.Configuration.DSL.SetterConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.MatchingFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of SetterConvention.Matching(Func`2&lt;PropertyInfo,Boolean&gt; rule)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.NameMatchesPredicateOfString">
            <summary>Sets the shim of SetterConvention.NameMatches(Predicate`1&lt;String&gt; rule)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Configuration.DSL.SetterConvention})">
            <summary>Sets the shim of SetterConvention.OfType()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.StructureMapConfigurationDSLSetterConventionRuleConfigureSetterRules">
            <summary>Sets the shim of SetterConvention.StructureMap.Configuration.DSL.SetterConventionRule.Configure(SetterRules rules)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.TypeMatchesPredicateOfType">
            <summary>Sets the shim of SetterConvention.TypeMatches(Predicate`1&lt;Type&gt; predicate)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.WithAnyTypeFromNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Configuration.DSL.SetterConvention})">
            <summary>Sets the shim of SetterConvention.WithAnyTypeFromNamespaceContainingType()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.AllInstances.WithAnyTypeFromNamespaceString">
            <summary>Sets the shim of SetterConvention.WithAnyTypeFromNamespace(String nameSpace)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.Bind(StructureMap.Configuration.DSL.SetterConventionRule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.Constructor">
            <summary>Sets the shim of SetterConvention.SetterConvention()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.MatchingFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of SetterConvention.Matching(Func`2&lt;PropertyInfo,Boolean&gt; rule)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.NameMatchesPredicateOfString">
            <summary>Sets the shim of SetterConvention.NameMatches(Predicate`1&lt;String&gt; rule)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.OfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of SetterConvention.OfType()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.StructureMapConfigurationDSLSetterConventionRuleConfigureSetterRules">
            <summary>Sets the shim of SetterConvention.StructureMap.Configuration.DSL.SetterConventionRule.Configure(SetterRules rules)</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.TypeMatchesPredicateOfType">
            <summary>Sets the shim of SetterConvention.TypeMatches(Predicate`1&lt;Type&gt; predicate)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.WithAnyTypeFromNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of SetterConvention.WithAnyTypeFromNamespaceContainingType()</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.ShimSetterConvention.WithAnyTypeFromNamespaceString">
            <summary>Sets the shim of SetterConvention.WithAnyTypeFromNamespace(String nameSpace)</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Fakes.StubSetterConvention">
            <summary>Stub type of StructureMap.Configuration.DSL.SetterConvention</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.StubSetterConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.StubSetterConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.StubSetterConvention.InitializeStub">
            <summary>Initializes a new instance of type StubSetterConvention</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.StubSetterConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Configuration.DSL.Fakes.StubSetterConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Configuration.DSL.Fakes.StubSetterConventionRule">
            <summary>Stub type of StructureMap.Configuration.DSL.SetterConventionRule</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.StubSetterConventionRule.#ctor">
            <summary>Initializes a new instance of type StubSetterConventionRule</summary>
        </member>
        <member name="F:StructureMap.Configuration.DSL.Fakes.StubSetterConventionRule.ConfigureSetterRules">
            <summary>Sets the stub of SetterConventionRule.Configure(SetterRules rules)</summary>
        </member>
        <member name="M:StructureMap.Configuration.DSL.Fakes.StubSetterConventionRule.StructureMap#Configuration#DSL#SetterConventionRule#Configure(StructureMap.Graph.SetterRules)">
            <summary>Sets the stub of SetterConventionRule.Configure(SetterRules rules)</summary>
        </member>
        <member name="T:StructureMap.Configuration.Fakes.ShimConfigurationConstants">
            <summary>Shim type of StructureMap.Configuration.ConfigurationConstants</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimConfigurationConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimConfigurationConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimConfigurationConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.ShimConfigurationConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:StructureMap.Configuration.Fakes.ShimMalformedAliasException">
            <summary>Shim type of StructureMap.Configuration.MalformedAliasException</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimMalformedAliasException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimMalformedAliasException.#ctor(StructureMap.Configuration.MalformedAliasException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Configuration.Fakes.ShimMalformedAliasException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimMalformedAliasException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimMalformedAliasException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.ShimMalformedAliasException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.ShimMalformedAliasException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.ShimMalformedAliasException.ConstructorString">
            <summary>Sets the shim of MalformedAliasException.MalformedAliasException(String xml)</summary>
        </member>
        <member name="T:StructureMap.Configuration.Fakes.StubITypeReader`1">
            <summary>Stub type of StructureMap.Configuration.ITypeReader`1</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubITypeReader`1.#ctor">
            <summary>Initializes a new instance of type StubITypeReader</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubITypeReader`1.CanProcessType">
            <summary>Sets the stub of ITypeReader`1.CanProcess(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubITypeReader`1.ReadT0Type">
            <summary>Sets the stub of ITypeReader`1.Read(!0 node, Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubITypeReader`1.StructureMap#Configuration#ITypeReader{T}#CanProcess(System.Type)">
            <summary>Sets the stub of ITypeReader`1.CanProcess(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubITypeReader`1.StructureMap#Configuration#ITypeReader{T}#Read(`0,System.Type)">
            <summary>Sets the stub of ITypeReader`1.Read(!0 node, Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Configuration.Fakes.StubMalformedAliasException">
            <summary>Stub type of StructureMap.Configuration.MalformedAliasException</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMalformedAliasException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMalformedAliasException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.InitializeStub">
            <summary>Initializes a new instance of type StubMalformedAliasException</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:StructureMap.Configuration.Fakes.StubMalformedAliasException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:StructureMap.Configuration.Fakes.StubMalformedAliasException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:StructureMap.Configuration.Fakes.StubMalformedAliasException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimBuildDependency">
            <summary>Shim type of StructureMap.Diagnostics.BuildDependency</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildDependency.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildDependency.#ctor(StructureMap.Diagnostics.BuildDependency)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimBuildDependency.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.AllInstances.EqualsBuildDependency">
            <summary>Sets the shim of BuildDependency.Equals(BuildDependency buildDependency)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.AllInstances.EqualsObject">
            <summary>Sets the shim of BuildDependency.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.AllInstances.GetHashCode01">
            <summary>Sets the shim of BuildDependency.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.AllInstances.ToString01">
            <summary>Sets the shim of BuildDependency.ToString()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildDependency.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildDependency.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildDependency.Bind(System.IEquatable{StructureMap.Diagnostics.BuildDependency})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.ConstructorTypeInstance">
            <summary>Sets the shim of BuildDependency.BuildDependency(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.EqualsBuildDependency">
            <summary>Sets the shim of BuildDependency.Equals(BuildDependency buildDependency)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.EqualsObject">
            <summary>Sets the shim of BuildDependency.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.GetHashCode">
            <summary>Sets the shim of BuildDependency.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildDependency.ToString">
            <summary>Sets the shim of BuildDependency.ToString()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimBuildError">
            <summary>Shim type of StructureMap.Diagnostics.BuildError</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildError.#ctor(StructureMap.Diagnostics.BuildError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AddDependencyBuildDependency">
            <summary>Sets the shim of BuildError.AddDependency(BuildDependency dependency)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.AddDependencyBuildDependency">
            <summary>Sets the shim of BuildError.AddDependency(BuildDependency dependency)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.DependenciesGet">
            <summary>Sets the shim of BuildError.get_Dependencies()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.ExceptionGet">
            <summary>Sets the shim of BuildError.get_Exception()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.ExceptionSetStructureMapException">
            <summary>Sets the shim of BuildError.set_Exception(StructureMapException value)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.InstanceGet">
            <summary>Sets the shim of BuildError.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.PluginTypeGet">
            <summary>Sets the shim of BuildError.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.RootInstanceGet">
            <summary>Sets the shim of BuildError.get_RootInstance()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.AllInstances.WriteStringWriter">
            <summary>Sets the shim of BuildError.Write(StringWriter writer)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.ConstructorTypeInstance">
            <summary>Sets the shim of BuildError.BuildError(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.DependenciesGet">
            <summary>Sets the shim of BuildError.get_Dependencies()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.ExceptionGet">
            <summary>Sets the shim of BuildError.get_Exception()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.ExceptionSetStructureMapException">
            <summary>Sets the shim of BuildError.set_Exception(StructureMapException value)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.InstanceGet">
            <summary>Sets the shim of BuildError.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.PluginTypeGet">
            <summary>Sets the shim of BuildError.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.RootInstanceGet">
            <summary>Sets the shim of BuildError.get_RootInstance()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildError.WriteStringWriter">
            <summary>Sets the shim of BuildError.Write(StringWriter writer)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer">
            <summary>Shim type of StructureMap.Diagnostics.BuildPlanVisualizer</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.#ctor(StructureMap.Diagnostics.BuildPlanVisualizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.ActivatorIInterceptor">
            <summary>Sets the shim of BuildPlanVisualizer.Activator(IInterceptor interceptor)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.ActivatorIInterceptor">
            <summary>Sets the shim of BuildPlanVisualizer.Activator(IInterceptor interceptor)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.ConstructorConstructorStep">
            <summary>Sets the shim of BuildPlanVisualizer.Constructor(ConstructorStep constructor)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.DecoratorIInterceptor">
            <summary>Sets the shim of BuildPlanVisualizer.Decorator(IInterceptor interceptor)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.InnerBuilderIDependencySource">
            <summary>Sets the shim of BuildPlanVisualizer.InnerBuilder(IDependencySource inner)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.InstanceTypeInstance">
            <summary>Sets the shim of BuildPlanVisualizer.Instance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.MaxLevelsGet">
            <summary>Sets the shim of BuildPlanVisualizer.get_MaxLevels()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.SetterSetter">
            <summary>Sets the shim of BuildPlanVisualizer.Setter(Setter setter)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.ShowDefaultType">
            <summary>Sets the shim of BuildPlanVisualizer.ShowDefault(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.ShowReferencedTypeString">
            <summary>Sets the shim of BuildPlanVisualizer.ShowReferenced(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.VisitNextLevelAction">
            <summary>Sets the shim of BuildPlanVisualizer.VisitNextLevel(Action action)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances.WriteTextWriter">
            <summary>Sets the shim of BuildPlanVisualizer.Write(TextWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.AllInstances._Constructorb__10_0CtorArgument">
            <summary>Sets the shim of BuildPlanVisualizer.&lt;Constructor&gt;b__10_0(CtorArgument arg)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.Bind(StructureMap.Diagnostics.IBuildPlanVisitor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.ConstructorConstructorStep">
            <summary>Sets the shim of BuildPlanVisualizer.Constructor(ConstructorStep constructor)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.ConstructorIPipelineGraphBooleanInt32">
            <summary>Sets the shim of BuildPlanVisualizer.BuildPlanVisualizer(IPipelineGraph pipeline, Boolean deep, Int32 levels)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.DecoratorIInterceptor">
            <summary>Sets the shim of BuildPlanVisualizer.Decorator(IInterceptor interceptor)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.InnerBuilderIDependencySource">
            <summary>Sets the shim of BuildPlanVisualizer.InnerBuilder(IDependencySource inner)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.InstanceTypeInstance">
            <summary>Sets the shim of BuildPlanVisualizer.Instance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.MaxLevelsGet">
            <summary>Sets the shim of BuildPlanVisualizer.get_MaxLevels()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.SetterSetter">
            <summary>Sets the shim of BuildPlanVisualizer.Setter(Setter setter)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.ShowDefaultType">
            <summary>Sets the shim of BuildPlanVisualizer.ShowDefault(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.ShowReferencedTypeString">
            <summary>Sets the shim of BuildPlanVisualizer.ShowReferenced(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.VisitNextLevelAction">
            <summary>Sets the shim of BuildPlanVisualizer.VisitNextLevel(Action action)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer.WriteTextWriter">
            <summary>Sets the shim of BuildPlanVisualizer.Write(TextWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimBuildPlanVisualizer._Constructorb__10_0CtorArgument">
            <summary>Sets the shim of BuildPlanVisualizer.&lt;Constructor&gt;b__10_0(CtorArgument arg)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer">
            <summary>Shim type of StructureMap.Diagnostics.DependencyVisualizer</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.#ctor(StructureMap.Diagnostics.DependencyVisualizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.AllPossibleOfType">
            <summary>Sets the shim of DependencyVisualizer.AllPossibleOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.ConcreteConcreteBuild">
            <summary>Sets the shim of DependencyVisualizer.Concrete(ConcreteBuild build)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.ConstantConstant">
            <summary>Sets the shim of DependencyVisualizer.Constant(Constant constant)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.DefaultType">
            <summary>Sets the shim of DependencyVisualizer.Default(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.DependencyIDependencySource">
            <summary>Sets the shim of DependencyVisualizer.Dependency(IDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.Dispose">
            <summary>Sets the shim of DependencyVisualizer.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.InlineEnumerableIEnumerableDependencySource">
            <summary>Sets the shim of DependencyVisualizer.InlineEnumerable(IEnumerableDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.LifecycledLifecycleDependencySource">
            <summary>Sets the shim of DependencyVisualizer.Lifecycled(LifecycleDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.ProblemDependencyProblem">
            <summary>Sets the shim of DependencyVisualizer.Problem(DependencyProblem problem)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllInstances.ReferencedReferencedDependencySource">
            <summary>Sets the shim of DependencyVisualizer.Referenced(ReferencedDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.AllPossibleOfType">
            <summary>Sets the shim of DependencyVisualizer.AllPossibleOf(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.Bind(StructureMap.Diagnostics.IDependencyVisitor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.ConcreteConcreteBuild">
            <summary>Sets the shim of DependencyVisualizer.Concrete(ConcreteBuild build)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.ConstantConstant">
            <summary>Sets the shim of DependencyVisualizer.Constant(Constant constant)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.ConstructorStringTreeWriterBuildPlanVisualizer">
            <summary>Sets the shim of DependencyVisualizer.DependencyVisualizer(String title, TreeWriter writer, BuildPlanVisualizer buildPlanVisitor)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.DefaultType">
            <summary>Sets the shim of DependencyVisualizer.Default(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.DependencyIDependencySource">
            <summary>Sets the shim of DependencyVisualizer.Dependency(IDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.Dispose">
            <summary>Sets the shim of DependencyVisualizer.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.InlineEnumerableIEnumerableDependencySource">
            <summary>Sets the shim of DependencyVisualizer.InlineEnumerable(IEnumerableDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.LifecycledLifecycleDependencySource">
            <summary>Sets the shim of DependencyVisualizer.Lifecycled(LifecycleDependencySource source)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.ProblemDependencyProblem">
            <summary>Sets the shim of DependencyVisualizer.Problem(DependencyProblem problem)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimDependencyVisualizer.ReferencedReferencedDependencySource">
            <summary>Sets the shim of DependencyVisualizer.Referenced(ReferencedDependencySource source)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimError">
            <summary>Shim type of StructureMap.Diagnostics.Error</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimError.#ctor(StructureMap.Diagnostics.Error)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.AllInstances.EqualsError">
            <summary>Sets the shim of Error.Equals(Error error)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.AllInstances.MessageGet">
            <summary>Sets the shim of Error.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.AllInstances.ToString01">
            <summary>Sets the shim of Error.ToString()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.AllInstances.WriteStringWriter">
            <summary>Sets the shim of Error.Write(StringWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.AllInstances.writeStackTraceException">
            <summary>Sets the shim of Error.writeStackTrace(Exception exception)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimError.Bind(System.IEquatable{StructureMap.Diagnostics.Error})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.ConstructorException">
            <summary>Sets the shim of Error.Error(Exception exception)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.ConstructorString">
            <summary>Sets the shim of Error.Error(String message)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.EqualsError">
            <summary>Sets the shim of Error.Equals(Error error)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.MessageGet">
            <summary>Sets the shim of Error.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.ToString">
            <summary>Sets the shim of Error.ToString()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.WriteStringWriter">
            <summary>Sets the shim of Error.Write(StringWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimError.writeStackTraceException">
            <summary>Sets the shim of Error.writeStackTrace(Exception exception)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimInstanceToken">
            <summary>Shim type of StructureMap.Diagnostics.InstanceToken</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimInstanceToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimInstanceToken.#ctor(StructureMap.Diagnostics.InstanceToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances.DescriptionGet">
            <summary>Sets the shim of InstanceToken.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances.EqualsInstanceToken">
            <summary>Sets the shim of InstanceToken.Equals(InstanceToken instanceToken)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances.EqualsObject">
            <summary>Sets the shim of InstanceToken.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances.GetHashCode01">
            <summary>Sets the shim of InstanceToken.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances.NameGet">
            <summary>Sets the shim of InstanceToken.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.AllInstances.ToString01">
            <summary>Sets the shim of InstanceToken.ToString()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimInstanceToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimInstanceToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimInstanceToken.Bind(System.IEquatable{StructureMap.Diagnostics.InstanceToken})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.ConstructorStringString">
            <summary>Sets the shim of InstanceToken.InstanceToken(String name, String description)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.DescriptionGet">
            <summary>Sets the shim of InstanceToken.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.EqualsInstanceToken">
            <summary>Sets the shim of InstanceToken.Equals(InstanceToken instanceToken)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.EqualsObject">
            <summary>Sets the shim of InstanceToken.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.GetHashCode">
            <summary>Sets the shim of InstanceToken.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.NameGet">
            <summary>Sets the shim of InstanceToken.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimInstanceToken.ToString">
            <summary>Sets the shim of InstanceToken.ToString()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimModelQuery">
            <summary>Shim type of StructureMap.Diagnostics.ModelQuery</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimModelQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimModelQuery.#ctor(StructureMap.Diagnostics.ModelQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimModelQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.AllInstances.QueryIModel">
            <summary>Sets the shim of ModelQuery.Query(IModel model)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.AllInstances._Queryb__4_0IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_0(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.AllInstances._Queryb__4_1IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_1(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.AllInstances._Queryb__4_2IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_2(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.AllInstances._Queryb__4_3IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_3(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimModelQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimModelQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.Constructor">
            <summary>Sets the shim of ModelQuery.ModelQuery()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery.QueryIModel">
            <summary>Sets the shim of ModelQuery.Query(IModel model)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery._Queryb__4_0IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_0(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery._Queryb__4_1IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_1(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery._Queryb__4_2IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_2(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimModelQuery._Queryb__4_3IPluginTypeConfiguration">
            <summary>Sets the shim of ModelQuery.&lt;Query&gt;b__4_3(IPluginTypeConfiguration x)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator">
            <summary>Shim type of StructureMap.Diagnostics.PipelineGraphValidator</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.#ctor(StructureMap.Diagnostics.PipelineGraphValidator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances.AssertIsValid">
            <summary>Sets the shim of PipelineGraphValidator.AssertIsValid()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances.ValidateIPipelineGraphPolicies">
            <summary>Sets the shim of PipelineGraphValidator.Validate(IPipelineGraph pipeline, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances._Validateb__5_4InstanceRef">
            <summary>Sets the shim of PipelineGraphValidator.&lt;Validate&gt;b__5_4(InstanceRef x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances._tryBuildInstanceb__6_0Guid">
            <summary>Sets the shim of PipelineGraphValidator.&lt;tryBuildInstance&gt;b__6_0(Guid x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances.tryBuildInstanceTypeInstanceIPipelineGraphProfileReport">
            <summary>Sets the shim of PipelineGraphValidator.tryBuildInstance(Type pluginType, Instance instance, IPipelineGraph pipeline, ProfileReport report)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances.tryCreateBuildPlanTypeInstanceRefPoliciesProfileReport">
            <summary>Sets the shim of PipelineGraphValidator.tryCreateBuildPlan(Type pluginType, InstanceRef instanceRef, Policies policies, ProfileReport report)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AllInstances.validateTypeInstanceObjectProfileReport">
            <summary>Sets the shim of PipelineGraphValidator.validate(Type pluginType, Instance instance, Object builtObject, ProfileReport report)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AssertIsValid">
            <summary>Sets the shim of PipelineGraphValidator.AssertIsValid()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.AssertNoErrorsIPipelineGraph">
            <summary>Sets the shim of PipelineGraphValidator.AssertNoErrors(IPipelineGraph graph)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.Constructor">
            <summary>Sets the shim of PipelineGraphValidator.PipelineGraphValidator()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.ValidateIPipelineGraphPolicies">
            <summary>Sets the shim of PipelineGraphValidator.Validate(IPipelineGraph pipeline, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator._Validateb__5_4InstanceRef">
            <summary>Sets the shim of PipelineGraphValidator.&lt;Validate&gt;b__5_4(InstanceRef x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator._tryBuildInstanceb__6_0Guid">
            <summary>Sets the shim of PipelineGraphValidator.&lt;tryBuildInstance&gt;b__6_0(Guid x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.findPipelinesIPipelineGraph">
            <summary>Sets the shim of PipelineGraphValidator.findPipelines(IPipelineGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.tryBuildInstanceTypeInstanceIPipelineGraphProfileReport">
            <summary>Sets the shim of PipelineGraphValidator.tryBuildInstance(Type pluginType, Instance instance, IPipelineGraph pipeline, ProfileReport report)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.tryCreateBuildPlanTypeInstanceRefPoliciesProfileReport">
            <summary>Sets the shim of PipelineGraphValidator.tryCreateBuildPlan(Type pluginType, InstanceRef instanceRef, Policies policies, ProfileReport report)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimPipelineGraphValidator.validateTypeInstanceObjectProfileReport">
            <summary>Sets the shim of PipelineGraphValidator.validate(Type pluginType, Instance instance, Object builtObject, ProfileReport report)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimProfileReport">
            <summary>Shim type of StructureMap.Diagnostics.ProfileReport</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimProfileReport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimProfileReport.#ctor(StructureMap.Diagnostics.ProfileReport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AddErrorTypeInstanceStructureMapException">
            <summary>Sets the shim of ProfileReport.AddError(Type pluginType, Instance instance, StructureMapException ex)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AddValidationErrorValidationError">
            <summary>Sets the shim of ProfileReport.AddValidationError(ValidationError error)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.AddErrorTypeInstanceStructureMapException">
            <summary>Sets the shim of ProfileReport.AddError(Type pluginType, Instance instance, StructureMapException ex)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.AddValidationErrorValidationError">
            <summary>Sets the shim of ProfileReport.AddValidationError(ValidationError error)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.ErrorsGet">
            <summary>Sets the shim of ProfileReport.get_Errors()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.HasAnyErrors">
            <summary>Sets the shim of ProfileReport.HasAnyErrors()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.ProfileGet">
            <summary>Sets the shim of ProfileReport.get_Profile()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.RoleGet">
            <summary>Sets the shim of ProfileReport.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.ValidationsGet">
            <summary>Sets the shim of ProfileReport.get_Validations()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.AllInstances.WriteErrorMessagesStringWriter">
            <summary>Sets the shim of ProfileReport.WriteErrorMessages(StringWriter writer)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimProfileReport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimProfileReport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.ConstructorIPipelineGraph">
            <summary>Sets the shim of ProfileReport.ProfileReport(IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.ErrorsGet">
            <summary>Sets the shim of ProfileReport.get_Errors()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.HasAnyErrors">
            <summary>Sets the shim of ProfileReport.HasAnyErrors()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.ProfileGet">
            <summary>Sets the shim of ProfileReport.get_Profile()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.RoleGet">
            <summary>Sets the shim of ProfileReport.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.ValidationsGet">
            <summary>Sets the shim of ProfileReport.get_Validations()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimProfileReport.WriteErrorMessagesStringWriter">
            <summary>Sets the shim of ProfileReport.WriteErrorMessages(StringWriter writer)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimTextReportWriter">
            <summary>Shim type of StructureMap.Diagnostics.TextReportWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.#ctor(StructureMap.Diagnostics.TextReportWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AddContentString">
            <summary>Sets the shim of TextReportWriter.AddContent(String contents)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AddDividerChar">
            <summary>Sets the shim of TextReportWriter.AddDivider(Char character)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AddTextStringArray">
            <summary>Sets the shim of TextReportWriter.AddText(String[] contents)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances.AddContentString">
            <summary>Sets the shim of TextReportWriter.AddContent(String contents)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances.AddDividerChar">
            <summary>Sets the shim of TextReportWriter.AddDivider(Char character)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances.AddTextStringArray">
            <summary>Sets the shim of TextReportWriter.AddText(String[] contents)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances.DumpToDebug">
            <summary>Sets the shim of TextReportWriter.DumpToDebug()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances.Write">
            <summary>Sets the shim of TextReportWriter.Write()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.AllInstances.WriteStringWriter">
            <summary>Sets the shim of TextReportWriter.Write(StringWriter writer)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.ConstructorInt32">
            <summary>Sets the shim of TextReportWriter.TextReportWriter(Int32 columnCount)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.DumpToDebug">
            <summary>Sets the shim of TextReportWriter.DumpToDebug()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.Write">
            <summary>Sets the shim of TextReportWriter.Write()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimTextReportWriter.WriteStringWriter">
            <summary>Sets the shim of TextReportWriter.Write(StringWriter writer)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimValidationError">
            <summary>Shim type of StructureMap.Diagnostics.ValidationError</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimValidationError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimValidationError.#ctor(StructureMap.Diagnostics.ValidationError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimValidationError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimValidationError.AllInstances.WriteStringWriter">
            <summary>Sets the shim of ValidationError.Write(StringWriter writer)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimValidationError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimValidationError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimValidationError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimValidationError.ConstructorTypeInstanceExceptionMethodInfo">
            <summary>Sets the shim of ValidationError.ValidationError(Type pluginType, Instance instance, Exception exception, MethodInfo method)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimValidationError.WriteStringWriter">
            <summary>Sets the shim of ValidationError.Write(StringWriter writer)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter">
            <summary>Shim type of StructureMap.Diagnostics.WhatDoIHaveWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.#ctor(StructureMap.Diagnostics.WhatDoIHaveWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.AllInstances.GetTextModelQueryString">
            <summary>Sets the shim of WhatDoIHaveWriter.GetText(ModelQuery query, String title)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.AllInstances.setContentsStringArrayInstanceRefString">
            <summary>Sets the shim of WhatDoIHaveWriter.setContents(String[] contents, InstanceRef instance, String name)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.AllInstances.writeContentsOfPluginTypesIEnumerableOfIPluginTypeConfiguration">
            <summary>Sets the shim of WhatDoIHaveWriter.writeContentsOfPluginTypes(IEnumerable`1&lt;IPluginTypeConfiguration&gt; pluginTypes)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.AllInstances.writeInstanceInstanceRefString">
            <summary>Sets the shim of WhatDoIHaveWriter.writeInstance(InstanceRef instance, String name)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.AllInstances.writePluginTypeIPluginTypeConfiguration">
            <summary>Sets the shim of WhatDoIHaveWriter.writePluginType(IPluginTypeConfiguration pluginType)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.ConstructorIPipelineGraph">
            <summary>Sets the shim of WhatDoIHaveWriter.WhatDoIHaveWriter(IPipelineGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.GetTextModelQueryString">
            <summary>Sets the shim of WhatDoIHaveWriter.GetText(ModelQuery query, String title)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.setContentsStringArrayInstanceRefString">
            <summary>Sets the shim of WhatDoIHaveWriter.setContents(String[] contents, InstanceRef instance, String name)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.writeContentsOfPluginTypesIEnumerableOfIPluginTypeConfiguration">
            <summary>Sets the shim of WhatDoIHaveWriter.writeContentsOfPluginTypes(IEnumerable`1&lt;IPluginTypeConfiguration&gt; pluginTypes)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.writeInstanceInstanceRefString">
            <summary>Sets the shim of WhatDoIHaveWriter.writeInstance(InstanceRef instance, String name)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWhatDoIHaveWriter.writePluginTypeIPluginTypeConfiguration">
            <summary>Sets the shim of WhatDoIHaveWriter.writePluginType(IPluginTypeConfiguration pluginType)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.ShimWriterExtensions">
            <summary>Shim type of StructureMap.Diagnostics.WriterExtensions</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWriterExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWriterExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.ShimWriterExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWriterExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWriterExtensions.LineInt32Char">
            <summary>Sets the shim of WriterExtensions.Line(Int32 length, Char character)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.ShimWriterExtensions.WriteLineTextWriterInt32String">
            <summary>Sets the shim of WriterExtensions.WriteLine(TextWriter writer, Int32 spaces, String text)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubBuildDependency">
            <summary>Stub type of StructureMap.Diagnostics.BuildDependency</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildDependency.#ctor(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildDependency.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildDependency.Equals(System.Object)">
            <summary>Sets the stub of BuildDependency.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubBuildDependency.EqualsObject">
            <summary>Sets the stub of BuildDependency.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildDependency.GetHashCode">
            <summary>Sets the stub of BuildDependency.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubBuildDependency.GetHashCode01">
            <summary>Sets the stub of BuildDependency.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildDependency.InitializeStub">
            <summary>Initializes a new instance of type StubBuildDependency</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildDependency.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildDependency.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildDependency.ToString">
            <summary>Sets the stub of BuildDependency.ToString()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubBuildDependency.ToString01">
            <summary>Sets the stub of BuildDependency.ToString()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubBuildError">
            <summary>Stub type of StructureMap.Diagnostics.BuildError</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildError.#ctor(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildError.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildError.InitializeStub">
            <summary>Initializes a new instance of type StubBuildError</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildError.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildError.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubBuildPlanVisualizer">
            <summary>Stub type of StructureMap.Diagnostics.BuildPlanVisualizer</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildPlanVisualizer.#ctor(StructureMap.IPipelineGraph,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildPlanVisualizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubBuildPlanVisualizer.InitializeStub">
            <summary>Initializes a new instance of type StubBuildPlanVisualizer</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildPlanVisualizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubBuildPlanVisualizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubDependencyVisualizer">
            <summary>Stub type of StructureMap.Diagnostics.DependencyVisualizer</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubDependencyVisualizer.#ctor(System.String,StructureMap.Diagnostics.TreeView.TreeWriter,StructureMap.Diagnostics.BuildPlanVisualizer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubDependencyVisualizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubDependencyVisualizer.InitializeStub">
            <summary>Initializes a new instance of type StubDependencyVisualizer</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubDependencyVisualizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubDependencyVisualizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubError">
            <summary>Stub type of StructureMap.Diagnostics.Error</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubError.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubError.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubError.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubError.InitializeStub">
            <summary>Initializes a new instance of type StubError</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubError.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubError.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubError.ToString">
            <summary>Sets the stub of Error.ToString()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubError.ToString01">
            <summary>Sets the stub of Error.ToString()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor">
            <summary>Stub type of StructureMap.Diagnostics.IBuildPlanVisitor</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.#ctor">
            <summary>Initializes a new instance of type StubIBuildPlanVisitor</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.ActivatorIInterceptor">
            <summary>Sets the stub of IBuildPlanVisitor.Activator(IInterceptor interceptor)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.ConstructorConstructorStep">
            <summary>Sets the stub of IBuildPlanVisitor.Constructor(ConstructorStep constructor)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.DecoratorIInterceptor">
            <summary>Sets the stub of IBuildPlanVisitor.Decorator(IInterceptor interceptor)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.InnerBuilderIDependencySource">
            <summary>Sets the stub of IBuildPlanVisitor.InnerBuilder(IDependencySource inner)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.InstanceTypeInstance">
            <summary>Sets the stub of IBuildPlanVisitor.Instance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.SetterSetter">
            <summary>Sets the stub of IBuildPlanVisitor.Setter(Setter setter)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.StructureMap#Diagnostics#IBuildPlanVisitor#Activator(StructureMap.Building.Interception.IInterceptor)">
            <summary>Sets the stub of IBuildPlanVisitor.Activator(IInterceptor interceptor)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.StructureMap#Diagnostics#IBuildPlanVisitor#Constructor(StructureMap.Building.ConstructorStep)">
            <summary>Sets the stub of IBuildPlanVisitor.Constructor(ConstructorStep constructor)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.StructureMap#Diagnostics#IBuildPlanVisitor#Decorator(StructureMap.Building.Interception.IInterceptor)">
            <summary>Sets the stub of IBuildPlanVisitor.Decorator(IInterceptor interceptor)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.StructureMap#Diagnostics#IBuildPlanVisitor#InnerBuilder(StructureMap.Building.IDependencySource)">
            <summary>Sets the stub of IBuildPlanVisitor.InnerBuilder(IDependencySource inner)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.StructureMap#Diagnostics#IBuildPlanVisitor#Instance(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IBuildPlanVisitor.Instance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIBuildPlanVisitor.StructureMap#Diagnostics#IBuildPlanVisitor#Setter(StructureMap.Building.Setter)">
            <summary>Sets the stub of IBuildPlanVisitor.Setter(Setter setter)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor">
            <summary>Stub type of StructureMap.Diagnostics.IDependencyVisitor</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.#ctor">
            <summary>Initializes a new instance of type StubIDependencyVisitor</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.AllPossibleOfType">
            <summary>Sets the stub of IDependencyVisitor.AllPossibleOf(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.ConcreteConcreteBuild">
            <summary>Sets the stub of IDependencyVisitor.Concrete(ConcreteBuild build)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.ConstantConstant">
            <summary>Sets the stub of IDependencyVisitor.Constant(Constant constant)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.DefaultType">
            <summary>Sets the stub of IDependencyVisitor.Default(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.DependencyIDependencySource">
            <summary>Sets the stub of IDependencyVisitor.Dependency(IDependencySource source)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.InlineEnumerableIEnumerableDependencySource">
            <summary>Sets the stub of IDependencyVisitor.InlineEnumerable(IEnumerableDependencySource source)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.LifecycledLifecycleDependencySource">
            <summary>Sets the stub of IDependencyVisitor.Lifecycled(LifecycleDependencySource source)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.ProblemDependencyProblem">
            <summary>Sets the stub of IDependencyVisitor.Problem(DependencyProblem problem)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.ReferencedReferencedDependencySource">
            <summary>Sets the stub of IDependencyVisitor.Referenced(ReferencedDependencySource source)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#AllPossibleOf(System.Type)">
            <summary>Sets the stub of IDependencyVisitor.AllPossibleOf(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Concrete(StructureMap.Building.ConcreteBuild)">
            <summary>Sets the stub of IDependencyVisitor.Concrete(ConcreteBuild build)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Constant(StructureMap.Building.Constant)">
            <summary>Sets the stub of IDependencyVisitor.Constant(Constant constant)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Default(System.Type)">
            <summary>Sets the stub of IDependencyVisitor.Default(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Dependency(StructureMap.Building.IDependencySource)">
            <summary>Sets the stub of IDependencyVisitor.Dependency(IDependencySource source)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#InlineEnumerable(StructureMap.Building.IEnumerableDependencySource)">
            <summary>Sets the stub of IDependencyVisitor.InlineEnumerable(IEnumerableDependencySource source)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Lifecycled(StructureMap.Building.LifecycleDependencySource)">
            <summary>Sets the stub of IDependencyVisitor.Lifecycled(LifecycleDependencySource source)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Problem(StructureMap.Building.DependencyProblem)">
            <summary>Sets the stub of IDependencyVisitor.Problem(DependencyProblem problem)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubIDependencyVisitor.StructureMap#Diagnostics#IDependencyVisitor#Referenced(StructureMap.Building.ReferencedDependencySource)">
            <summary>Sets the stub of IDependencyVisitor.Referenced(ReferencedDependencySource source)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubInstanceToken">
            <summary>Stub type of StructureMap.Diagnostics.InstanceToken</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubInstanceToken.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubInstanceToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubInstanceToken.Equals(System.Object)">
            <summary>Sets the stub of InstanceToken.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubInstanceToken.EqualsObject">
            <summary>Sets the stub of InstanceToken.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubInstanceToken.GetHashCode">
            <summary>Sets the stub of InstanceToken.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubInstanceToken.GetHashCode01">
            <summary>Sets the stub of InstanceToken.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubInstanceToken.InitializeStub">
            <summary>Initializes a new instance of type StubInstanceToken</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubInstanceToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubInstanceToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubInstanceToken.ToString">
            <summary>Sets the stub of InstanceToken.ToString()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.Fakes.StubInstanceToken.ToString01">
            <summary>Sets the stub of InstanceToken.ToString()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubModelQuery">
            <summary>Stub type of StructureMap.Diagnostics.ModelQuery</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubModelQuery.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubModelQuery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubModelQuery.InitializeStub">
            <summary>Initializes a new instance of type StubModelQuery</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubModelQuery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubModelQuery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubPipelineGraphValidator">
            <summary>Stub type of StructureMap.Diagnostics.PipelineGraphValidator</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubPipelineGraphValidator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubPipelineGraphValidator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubPipelineGraphValidator.InitializeStub">
            <summary>Initializes a new instance of type StubPipelineGraphValidator</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubPipelineGraphValidator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubPipelineGraphValidator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubProfileReport">
            <summary>Stub type of StructureMap.Diagnostics.ProfileReport</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubProfileReport.#ctor(StructureMap.IPipelineGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubProfileReport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubProfileReport.InitializeStub">
            <summary>Initializes a new instance of type StubProfileReport</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubProfileReport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubProfileReport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubTextReportWriter">
            <summary>Stub type of StructureMap.Diagnostics.TextReportWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubTextReportWriter.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubTextReportWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubTextReportWriter.InitializeStub">
            <summary>Initializes a new instance of type StubTextReportWriter</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubTextReportWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubTextReportWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubValidationError">
            <summary>Stub type of StructureMap.Diagnostics.ValidationError</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubValidationError.#ctor(System.Type,StructureMap.Pipeline.Instance,System.Exception,System.Reflection.MethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubValidationError.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubValidationError.InitializeStub">
            <summary>Initializes a new instance of type StubValidationError</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubValidationError.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubValidationError.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.Fakes.StubWhatDoIHaveWriter">
            <summary>Stub type of StructureMap.Diagnostics.WhatDoIHaveWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubWhatDoIHaveWriter.#ctor(StructureMap.IPipelineGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubWhatDoIHaveWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.Fakes.StubWhatDoIHaveWriter.InitializeStub">
            <summary>Initializes a new instance of type StubWhatDoIHaveWriter</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubWhatDoIHaveWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.Fakes.StubWhatDoIHaveWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.Astericks</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.#ctor(StructureMap.Diagnostics.TreeView.Astericks)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.AllInstances.TabWidthGet">
            <summary>Sets the shim of Astericks.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.AllInstances.applyBufferLineInt32">
            <summary>Sets the shim of Astericks.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.Constructor">
            <summary>Sets the shim of Astericks.Astericks()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.ConstructorInt32">
            <summary>Sets the shim of Astericks.Astericks(Int32 tabWidth)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.TabWidthGet">
            <summary>Sets the shim of Astericks.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimAstericks.applyBufferLineInt32">
            <summary>Sets the shim of Astericks.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.LeftBorder</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.#ctor(StructureMap.Diagnostics.TreeView.LeftBorder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.AllInstances.TabWidthGet">
            <summary>Sets the shim of LeftBorder.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.AllInstances.applyBufferLineInt32">
            <summary>Sets the shim of LeftBorder.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.ConstructorInt32">
            <summary>Sets the shim of LeftBorder.LeftBorder(Int32 tabWidth)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.TabWidthGet">
            <summary>Sets the shim of LeftBorder.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLeftBorder.applyBufferLineInt32">
            <summary>Sets the shim of LeftBorder.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimLine">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.Line</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.#ctor(StructureMap.Diagnostics.TreeView.Line)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.AllInstances.LengthGet">
            <summary>Sets the shim of Line.get_Length()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.AllInstances.PrependString">
            <summary>Sets the shim of Line.Prepend(String buffer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.AllInstances.TextGet">
            <summary>Sets the shim of Line.get_Text()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.AllInstances.TextSetString">
            <summary>Sets the shim of Line.set_Text(String value)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.ConstructorString">
            <summary>Sets the shim of Line.Line(String text)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.LengthGet">
            <summary>Sets the shim of Line.get_Length()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.PrependString">
            <summary>Sets the shim of Line.Prepend(String buffer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.TextGet">
            <summary>Sets the shim of Line.get_Text()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimLine.TextSetString">
            <summary>Sets the shim of Line.set_Text(String value)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.Numbered</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.#ctor(StructureMap.Diagnostics.TreeView.Numbered)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.AllInstances.TabWidthGet">
            <summary>Sets the shim of Numbered.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.AllInstances.applyBufferLineInt32">
            <summary>Sets the shim of Numbered.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.AllInstances.applyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the shim of Numbered.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.Constructor">
            <summary>Sets the shim of Numbered.Numbered()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.ConstructorInt32">
            <summary>Sets the shim of Numbered.Numbered(Int32 tabWidth)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.TabWidthGet">
            <summary>Sets the shim of Numbered.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.applyBufferLineInt32">
            <summary>Sets the shim of Numbered.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimNumbered.applyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the shim of Numbered.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.Outline</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.#ctor(StructureMap.Diagnostics.TreeView.Outline)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.AllInstances.TabWidthGet">
            <summary>Sets the shim of Outline.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.AllInstances.applyBufferLineInt32">
            <summary>Sets the shim of Outline.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.AllInstances.applyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the shim of Outline.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.Constructor">
            <summary>Sets the shim of Outline.Outline()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.ConstructorInt32">
            <summary>Sets the shim of Outline.Outline(Int32 tabWidth)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.TabWidthGet">
            <summary>Sets the shim of Outline.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.applyBufferLineInt32">
            <summary>Sets the shim of Outline.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimOutline.applyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the shim of Outline.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimSection">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.Section</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.#ctor(StructureMap.Diagnostics.TreeView.Section)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.ChildSectionSection">
            <summary>Sets the shim of Section.ChildSection(Section section)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.TabWidthGet">
            <summary>Sets the shim of Section.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.ToLines">
            <summary>Sets the shim of Section.ToLines()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.WriteStringObjectArray">
            <summary>Sets the shim of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances._applyBufferingToChildSectionLinesb__7_0Line">
            <summary>Sets the shim of Section.&lt;applyBufferingToChildSectionLines&gt;b__7_0(Line x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.applyBufferLineInt32">
            <summary>Sets the shim of Section.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.applyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the shim of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.AllInstances.isSubsequentLineInt32">
            <summary>Sets the shim of Section.isSubsequentLine(Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.ChildSectionSection">
            <summary>Sets the shim of Section.ChildSection(Section section)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.Constructor">
            <summary>Sets the shim of Section.Section()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.TabWidthGet">
            <summary>Sets the shim of Section.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.ToLines">
            <summary>Sets the shim of Section.ToLines()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.WriteStringObjectArray">
            <summary>Sets the shim of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection._applyBufferingToChildSectionLinesb__7_0Line">
            <summary>Sets the shim of Section.&lt;applyBufferingToChildSectionLines&gt;b__7_0(Line x)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.applyBufferLineInt32">
            <summary>Sets the shim of Section.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.applyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the shim of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimSection.isSubsequentLineInt32">
            <summary>Sets the shim of Section.isSubsequentLine(Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.Tabbed</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.#ctor(StructureMap.Diagnostics.TreeView.Tabbed)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.AllInstances.TabWidthGet">
            <summary>Sets the shim of Tabbed.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.AllInstances.applyBufferLineInt32">
            <summary>Sets the shim of Tabbed.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.Constructor">
            <summary>Sets the shim of Tabbed.Tabbed()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.ConstructorInt32">
            <summary>Sets the shim of Tabbed.Tabbed(Int32 tabWidth)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.TabWidthGet">
            <summary>Sets the shim of Tabbed.get_TabWidth()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTabbed.applyBufferLineInt32">
            <summary>Sets the shim of Tabbed.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.TitledWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.#ctor(StructureMap.Diagnostics.TreeView.TitledWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.AllInstances.Dispose">
            <summary>Sets the shim of TitledWriter.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.AllInstances.LineStringObjectArray">
            <summary>Sets the shim of TitledWriter.Line(String format, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.AllInstances.WriterGet">
            <summary>Sets the shim of TitledWriter.get_Writer()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.ConstructorStringTreeWriter">
            <summary>Sets the shim of TitledWriter.TitledWriter(String title, TreeWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.Dispose">
            <summary>Sets the shim of TitledWriter.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.LineStringObjectArray">
            <summary>Sets the shim of TitledWriter.Line(String format, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTitledWriter.WriterGet">
            <summary>Sets the shim of TitledWriter.get_Writer()</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter">
            <summary>Shim type of StructureMap.Diagnostics.TreeView.TreeWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.#ctor(StructureMap.Diagnostics.TreeView.TreeWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.BlankLinesInt32">
            <summary>Sets the shim of TreeWriter.BlankLines(Int32 count)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.CurrentSectionGet">
            <summary>Sets the shim of TreeWriter.get_CurrentSection()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.EndSection">
            <summary>Sets the shim of TreeWriter.EndSection()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.LineStringObjectArray">
            <summary>Sets the shim of TreeWriter.Line(String text, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.StartSectionInt32">
            <summary>Sets the shim of TreeWriter.StartSection(Int32 tabWidth)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.StartSectionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Diagnostics.TreeView.TreeWriter})">
            <summary>Sets the shim of TreeWriter.StartSection()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.StartSectionSection">
            <summary>Sets the shim of TreeWriter.StartSection(Section section)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.AllInstances.WriteAllTextWriter">
            <summary>Sets the shim of TreeWriter.WriteAll(TextWriter writer)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.BlankLinesInt32">
            <summary>Sets the shim of TreeWriter.BlankLines(Int32 count)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.ConstructorSection">
            <summary>Sets the shim of TreeWriter.TreeWriter(Section top)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.CurrentSectionGet">
            <summary>Sets the shim of TreeWriter.get_CurrentSection()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.EndSection">
            <summary>Sets the shim of TreeWriter.EndSection()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.LineStringObjectArray">
            <summary>Sets the shim of TreeWriter.Line(String text, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.StartSectionInt32">
            <summary>Sets the shim of TreeWriter.StartSection(Int32 tabWidth)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.StartSectionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of TreeWriter.StartSection()</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.StartSectionSection">
            <summary>Sets the shim of TreeWriter.StartSection(Section section)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.ShimTreeWriter.WriteAllTextWriter">
            <summary>Sets the shim of TreeWriter.WriteAll(TextWriter writer)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.Astericks</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.ApplyBufferLineInt32">
            <summary>Sets the stub of Astericks.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.ApplyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.InitializeStub">
            <summary>Initializes a new instance of type StubAstericks</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.TabWidth">
            <summary>Sets the stub of Astericks.get_TabWidth()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.TabWidthGet">
            <summary>Sets the stub of Astericks.get_TabWidth()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.ToLines">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.ToLines01">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.Write(System.String,System.Object[])">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.WriteStringObjectArray">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.applyBuffer(StructureMap.Diagnostics.TreeView.Line,System.Int32)">
            <summary>Sets the stub of Astericks.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubAstericks.applyBufferingToChildSectionLines(System.Collections.Generic.IEnumerable{StructureMap.Diagnostics.TreeView.Line},System.Int32)">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.LeftBorder</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.ApplyBufferLineInt32">
            <summary>Sets the stub of LeftBorder.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.ApplyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.InitializeStub">
            <summary>Initializes a new instance of type StubLeftBorder</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.TabWidth">
            <summary>Sets the stub of LeftBorder.get_TabWidth()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.TabWidthGet">
            <summary>Sets the stub of LeftBorder.get_TabWidth()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.ToLines">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.ToLines01">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.Write(System.String,System.Object[])">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.WriteStringObjectArray">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.applyBuffer(StructureMap.Diagnostics.TreeView.Line,System.Int32)">
            <summary>Sets the stub of LeftBorder.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLeftBorder.applyBufferingToChildSectionLines(System.Collections.Generic.IEnumerable{StructureMap.Diagnostics.TreeView.Line},System.Int32)">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubLine">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.Line</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLine.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLine.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubLine.InitializeStub">
            <summary>Initializes a new instance of type StubLine</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLine.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubLine.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.Numbered</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.ApplyBufferLineInt32">
            <summary>Sets the stub of Numbered.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.ApplyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the stub of Numbered.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.InitializeStub">
            <summary>Initializes a new instance of type StubNumbered</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.TabWidth">
            <summary>Sets the stub of Numbered.get_TabWidth()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.TabWidthGet">
            <summary>Sets the stub of Numbered.get_TabWidth()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.ToLines">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.ToLines01">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.Write(System.String,System.Object[])">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.WriteStringObjectArray">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.applyBuffer(StructureMap.Diagnostics.TreeView.Line,System.Int32)">
            <summary>Sets the stub of Numbered.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubNumbered.applyBufferingToChildSectionLines(System.Collections.Generic.IEnumerable{StructureMap.Diagnostics.TreeView.Line},System.Int32)">
            <summary>Sets the stub of Numbered.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubOutline">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.Outline</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.ApplyBufferLineInt32">
            <summary>Sets the stub of Outline.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.ApplyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the stub of Outline.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.InitializeStub">
            <summary>Initializes a new instance of type StubOutline</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.TabWidth">
            <summary>Sets the stub of Outline.get_TabWidth()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.TabWidthGet">
            <summary>Sets the stub of Outline.get_TabWidth()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.ToLines">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.ToLines01">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.Write(System.String,System.Object[])">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.WriteStringObjectArray">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.applyBuffer(StructureMap.Diagnostics.TreeView.Line,System.Int32)">
            <summary>Sets the stub of Outline.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubOutline.applyBufferingToChildSectionLines(System.Collections.Generic.IEnumerable{StructureMap.Diagnostics.TreeView.Line},System.Int32)">
            <summary>Sets the stub of Outline.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubSection">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.Section</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubSection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubSection.ApplyBufferLineInt32">
            <summary>Sets the stub of Section.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubSection.ApplyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubSection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubSection.InitializeStub">
            <summary>Initializes a new instance of type StubSection</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubSection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubSection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubSection.TabWidth">
            <summary>Sets the stub of Section.get_TabWidth()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubSection.TabWidthGet">
            <summary>Sets the stub of Section.get_TabWidth()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubSection.ToLines">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubSection.ToLines01">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubSection.Write(System.String,System.Object[])">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubSection.WriteStringObjectArray">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubSection.applyBuffer(StructureMap.Diagnostics.TreeView.Line,System.Int32)">
            <summary>Sets the stub of Section.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubSection.applyBufferingToChildSectionLines(System.Collections.Generic.IEnumerable{StructureMap.Diagnostics.TreeView.Line},System.Int32)">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.Tabbed</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.ApplyBufferLineInt32">
            <summary>Sets the stub of Tabbed.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.ApplyBufferingToChildSectionLinesIEnumerableOfLineInt32">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.InitializeStub">
            <summary>Initializes a new instance of type StubTabbed</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.TabWidth">
            <summary>Sets the stub of Tabbed.get_TabWidth()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.TabWidthGet">
            <summary>Sets the stub of Tabbed.get_TabWidth()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.ToLines">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.ToLines01">
            <summary>Sets the stub of Section.ToLines()</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.Write(System.String,System.Object[])">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.WriteStringObjectArray">
            <summary>Sets the stub of Section.Write(String format, Object[] parameters)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.applyBuffer(StructureMap.Diagnostics.TreeView.Line,System.Int32)">
            <summary>Sets the stub of Tabbed.applyBuffer(Line line, Int32 index)</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTabbed.applyBufferingToChildSectionLines(System.Collections.Generic.IEnumerable{StructureMap.Diagnostics.TreeView.Line},System.Int32)">
            <summary>Sets the stub of Section.applyBufferingToChildSectionLines(IEnumerable`1&lt;Line&gt; sectionLines, Int32 index)</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubTitledWriter">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.TitledWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTitledWriter.#ctor(System.String,StructureMap.Diagnostics.TreeView.TreeWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTitledWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTitledWriter.InitializeStub">
            <summary>Initializes a new instance of type StubTitledWriter</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTitledWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTitledWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter">
            <summary>Stub type of StructureMap.Diagnostics.TreeView.TreeWriter</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.#ctor(StructureMap.Diagnostics.TreeView.Section)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.InitializeStub">
            <summary>Initializes a new instance of type StubTreeWriter</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.Line(System.String,System.Object[])">
            <summary>Sets the stub of TreeWriter.Line(String text, Object[] parameters)</summary>
        </member>
        <member name="F:StructureMap.Diagnostics.TreeView.Fakes.StubTreeWriter.LineStringObjectArray">
            <summary>Sets the stub of TreeWriter.Line(String text, Object[] parameters)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimAlwaysUniqueAttribute">
            <summary>Shim type of StructureMap.AlwaysUniqueAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimAlwaysUniqueAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimAlwaysUniqueAttribute.#ctor(StructureMap.AlwaysUniqueAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimAlwaysUniqueAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimAlwaysUniqueAttribute.AllInstances.AlterIConfiguredInstance">
            <summary>Sets the shim of AlwaysUniqueAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimAlwaysUniqueAttribute.AllInstances.AlterPluginFamily">
            <summary>Sets the shim of AlwaysUniqueAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimAlwaysUniqueAttribute.AlterIConfiguredInstance">
            <summary>Sets the shim of AlwaysUniqueAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimAlwaysUniqueAttribute.AlterPluginFamily">
            <summary>Sets the shim of AlwaysUniqueAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimAlwaysUniqueAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimAlwaysUniqueAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimAlwaysUniqueAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimAlwaysUniqueAttribute.Constructor">
            <summary>Sets the shim of AlwaysUniqueAttribute.AlwaysUniqueAttribute()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimBuildSession">
            <summary>Shim type of StructureMap.BuildSession</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.#ctor(StructureMap.BuildSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimBuildSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances.AllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of BuildSession.All()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.BuildNewInOriginalContextTypeInstance">
            <summary>Sets the shim of BuildSession.BuildNewInOriginalContext(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.BuildNewInSessionTypeInstance">
            <summary>Sets the shim of BuildSession.BuildNewInSession(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.BuildUniqueTypeInstance">
            <summary>Sets the shim of BuildSession.BuildUnique(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.BuildUpObject">
            <summary>Sets the shim of BuildSession.BuildUp(Object target)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.CreateInstanceTypeString">
            <summary>Sets the shim of BuildSession.CreateInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.FindObjectTypeInstance">
            <summary>Sets the shim of BuildSession.FindObject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of BuildSession.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.GetAllInstancesType">
            <summary>Sets the shim of BuildSession.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,``0})">
            <summary>Sets the shim of BuildSession.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,System.String,``0})">
            <summary>Sets the shim of BuildSession.GetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.GetInstanceType">
            <summary>Sets the shim of BuildSession.GetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.GetInstanceTypeString">
            <summary>Sets the shim of BuildSession.GetInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.ParentTypeGet">
            <summary>Sets the shim of BuildSession.get_ParentType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.PoliciesGet">
            <summary>Sets the shim of BuildSession.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.Pop">
            <summary>Sets the shim of BuildSession.Pop()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.PushInstance">
            <summary>Sets the shim of BuildSession.Push(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.RequestedNameGet">
            <summary>Sets the shim of BuildSession.get_RequestedName()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.RequestedNameSetString">
            <summary>Sets the shim of BuildSession.set_RequestedName(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.ResolveFromLifecycleTypeInstance">
            <summary>Sets the shim of BuildSession.ResolveFromLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.RootTypeGet">
            <summary>Sets the shim of BuildSession.get_RootType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.RootTypeSetType">
            <summary>Sets the shim of BuildSession.set_RootType(Type value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,``0})">
            <summary>Sets the shim of BuildSession.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,System.String,``0})">
            <summary>Sets the shim of BuildSession.TryGetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.TryGetInstanceType">
            <summary>Sets the shim of BuildSession.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.TryGetInstanceTypeString">
            <summary>Sets the shim of BuildSession.TryGetInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllInstances._GetAllInstancesb__25_0Of1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.BuildSession,StructureMap.Pipeline.Instance,``0})">
            <summary>Sets the shim of BuildSession.&lt;GetAllInstances&gt;b__25_0(Instance x)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.AllInstances.pipelineGraphGet">
            <summary>Sets the shim of BuildSession.get_pipelineGraph()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.AllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of BuildSession.All()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.Bind(StructureMap.IBuildSession)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.Bind(StructureMap.IContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.BuildNewInOriginalContextTypeInstance">
            <summary>Sets the shim of BuildSession.BuildNewInOriginalContext(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.BuildNewInSessionTypeInstance">
            <summary>Sets the shim of BuildSession.BuildNewInSession(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.BuildUniqueTypeInstance">
            <summary>Sets the shim of BuildSession.BuildUnique(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.BuildUpObject">
            <summary>Sets the shim of BuildSession.BuildUp(Object target)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.ConstructorIPipelineGraphStringExplicitArguments">
            <summary>Sets the shim of BuildSession.BuildSession(IPipelineGraph pipelineGraph, String requestedName, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.CreateInstanceTypeString">
            <summary>Sets the shim of BuildSession.CreateInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.EmptyExplicitArguments">
            <summary>Sets the shim of BuildSession.Empty(ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.FindObjectTypeInstance">
            <summary>Sets the shim of BuildSession.FindObject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.ForPluginGraphPluginGraphExplicitArguments">
            <summary>Sets the shim of BuildSession.ForPluginGraph(PluginGraph graph, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of BuildSession.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.GetAllInstancesType">
            <summary>Sets the shim of BuildSession.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of BuildSession.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of BuildSession.GetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.GetInstanceType">
            <summary>Sets the shim of BuildSession.GetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.GetInstanceTypeString">
            <summary>Sets the shim of BuildSession.GetInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.ParentTypeGet">
            <summary>Sets the shim of BuildSession.get_ParentType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.PoliciesGet">
            <summary>Sets the shim of BuildSession.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.Pop">
            <summary>Sets the shim of BuildSession.Pop()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.PushInstance">
            <summary>Sets the shim of BuildSession.Push(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.RequestedNameGet">
            <summary>Sets the shim of BuildSession.get_RequestedName()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.RequestedNameSetString">
            <summary>Sets the shim of BuildSession.set_RequestedName(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.ResolveFromLifecycleTypeInstance">
            <summary>Sets the shim of BuildSession.ResolveFromLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.RootTypeGet">
            <summary>Sets the shim of BuildSession.get_RootType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.RootTypeSetType">
            <summary>Sets the shim of BuildSession.set_RootType(Type value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.StaticConstructor">
            <summary>Sets the shim of BuildSession.BuildSession()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of BuildSession.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of BuildSession.TryGetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.TryGetInstanceType">
            <summary>Sets the shim of BuildSession.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.TryGetInstanceTypeString">
            <summary>Sets the shim of BuildSession.TryGetInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimBuildSession._GetAllInstancesb__25_0Of1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.Instance,``0})">
            <summary>Sets the shim of BuildSession.&lt;GetAllInstances&gt;b__25_0(Instance x)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimBuildSession.pipelineGraphGet">
            <summary>Sets the shim of BuildSession.get_pipelineGraph()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimCloseGenericTypeExpression">
            <summary>Shim type of StructureMap.CloseGenericTypeExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.#ctor(StructureMap.CloseGenericTypeExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimCloseGenericTypeExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.AllInstances.GetAllClosedTypesOfType">
            <summary>Sets the shim of CloseGenericTypeExpression.GetAllClosedTypesOf(Type type)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.AllInstances.GetClosedTypeOfType">
            <summary>Sets the shim of CloseGenericTypeExpression.GetClosedTypeOf(Type type)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.AllInstances.StructureMapOpenGenericTypeListSpecificationExpressionAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.CloseGenericTypeExpression,System.Collections.Generic.IList{``0}})">
            <summary>Sets the shim of CloseGenericTypeExpression.StructureMap.OpenGenericTypeListSpecificationExpression.As()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.AllInstances.StructureMapOpenGenericTypeSpecificationExpressionAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.CloseGenericTypeExpression,``0})">
            <summary>Sets the shim of CloseGenericTypeExpression.StructureMap.OpenGenericTypeSpecificationExpression.As()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.AllInstances.closeTypeType">
            <summary>Sets the shim of CloseGenericTypeExpression.closeType(Type type)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.Bind(StructureMap.OpenGenericTypeListSpecificationExpression)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.Bind(StructureMap.OpenGenericTypeSpecificationExpression)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.ConstructorObjectIContainer">
            <summary>Sets the shim of CloseGenericTypeExpression.CloseGenericTypeExpression(Object subject, IContainer container)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.GetAllClosedTypesOfType">
            <summary>Sets the shim of CloseGenericTypeExpression.GetAllClosedTypesOf(Type type)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.GetClosedTypeOfType">
            <summary>Sets the shim of CloseGenericTypeExpression.GetClosedTypeOf(Type type)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.StructureMapOpenGenericTypeListSpecificationExpressionAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0}})">
            <summary>Sets the shim of CloseGenericTypeExpression.StructureMap.OpenGenericTypeListSpecificationExpression.As()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimCloseGenericTypeExpression.StructureMapOpenGenericTypeSpecificationExpressionAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of CloseGenericTypeExpression.StructureMap.OpenGenericTypeSpecificationExpression.As()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimCloseGenericTypeExpression.closeTypeType">
            <summary>Sets the shim of CloseGenericTypeExpression.closeType(Type type)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimComplexInstanceGraph">
            <summary>Shim type of StructureMap.ComplexInstanceGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimComplexInstanceGraph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimComplexInstanceGraph.#ctor(StructureMap.ComplexInstanceGraph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.DefaultLifecycleForType">
            <summary>Sets the shim of ComplexInstanceGraph.DefaultLifecycleFor(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.EachInstanceActionOfTypeInstance">
            <summary>Sets the shim of ComplexInstanceGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.FindInstanceTypeString">
            <summary>Sets the shim of ComplexInstanceGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.GetAllInstances">
            <summary>Sets the shim of ComplexInstanceGraph.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.GetAllInstancesType">
            <summary>Sets the shim of ComplexInstanceGraph.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.GetDefaultType">
            <summary>Sets the shim of ComplexInstanceGraph.GetDefault(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.HasDefaultForPluginTypeType">
            <summary>Sets the shim of ComplexInstanceGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.HasInstanceTypeString">
            <summary>Sets the shim of ComplexInstanceGraph.HasInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.ImmediateInstances">
            <summary>Sets the shim of ComplexInstanceGraph.ImmediateInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.ImmediatePluginGraphGet">
            <summary>Sets the shim of ComplexInstanceGraph.get_ImmediatePluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.RoleGet">
            <summary>Sets the shim of ComplexInstanceGraph.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.RoleSetContainerRole">
            <summary>Sets the shim of ComplexInstanceGraph.set_Role(ContainerRole value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances.UniqueFamilies">
            <summary>Sets the shim of ComplexInstanceGraph.UniqueFamilies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.AllInstances._UniqueFamiliesb__10_0PluginFamily">
            <summary>Sets the shim of ComplexInstanceGraph.&lt;UniqueFamilies&gt;b__10_0(PluginFamily x)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimComplexInstanceGraph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimComplexInstanceGraph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimComplexInstanceGraph.Bind(StructureMap.IInstanceGraph)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.ConstructorIPipelineGraphPluginGraphContainerRole">
            <summary>Sets the shim of ComplexInstanceGraph.ComplexInstanceGraph(IPipelineGraph parent, PluginGraph pluginGraph, ContainerRole role)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.DefaultLifecycleForType">
            <summary>Sets the shim of ComplexInstanceGraph.DefaultLifecycleFor(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.EachInstanceActionOfTypeInstance">
            <summary>Sets the shim of ComplexInstanceGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.FindInstanceTypeString">
            <summary>Sets the shim of ComplexInstanceGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.GetAllInstances">
            <summary>Sets the shim of ComplexInstanceGraph.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.GetAllInstancesType">
            <summary>Sets the shim of ComplexInstanceGraph.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.GetDefaultType">
            <summary>Sets the shim of ComplexInstanceGraph.GetDefault(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.HasDefaultForPluginTypeType">
            <summary>Sets the shim of ComplexInstanceGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.HasInstanceTypeString">
            <summary>Sets the shim of ComplexInstanceGraph.HasInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.ImmediateInstances">
            <summary>Sets the shim of ComplexInstanceGraph.ImmediateInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.ImmediatePluginGraphGet">
            <summary>Sets the shim of ComplexInstanceGraph.get_ImmediatePluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.RoleGet">
            <summary>Sets the shim of ComplexInstanceGraph.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.RoleSetContainerRole">
            <summary>Sets the shim of ComplexInstanceGraph.set_Role(ContainerRole value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph.UniqueFamilies">
            <summary>Sets the shim of ComplexInstanceGraph.UniqueFamilies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimComplexInstanceGraph._UniqueFamiliesb__10_0PluginFamily">
            <summary>Sets the shim of ComplexInstanceGraph.&lt;UniqueFamilies&gt;b__10_0(PluginFamily x)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimConfigurationExpression">
            <summary>Shim type of StructureMap.ConfigurationExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.#ctor(StructureMap.ConfigurationExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.AddRegistryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of ConfigurationExpression.AddRegistry()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AddRegistryRegistry">
            <summary>Sets the shim of ConfigurationExpression.AddRegistry(Registry registry)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimConfigurationExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.AddRegistryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.ConfigurationExpression})">
            <summary>Sets the shim of ConfigurationExpression.AddRegistry()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.AddRegistryRegistry">
            <summary>Sets the shim of ConfigurationExpression.AddRegistry(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.BuildGraph">
            <summary>Sets the shim of ConfigurationExpression.BuildGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.EqualsConfigurationExpression">
            <summary>Sets the shim of ConfigurationExpression.Equals(ConfigurationExpression other)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.EqualsObject">
            <summary>Sets the shim of ConfigurationExpression.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConfigurationExpression.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.HasPolicyChanges">
            <summary>Sets the shim of ConfigurationExpression.HasPolicyChanges()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.AllInstances.RegistriesGet">
            <summary>Sets the shim of ConfigurationExpression.get_Registries()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.Bind(StructureMap.IProfileRegistry)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfigurationExpression.Bind(StructureMap.IRegistry)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.BuildGraph">
            <summary>Sets the shim of ConfigurationExpression.BuildGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.Constructor">
            <summary>Sets the shim of ConfigurationExpression.ConfigurationExpression()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.EqualsConfigurationExpression">
            <summary>Sets the shim of ConfigurationExpression.Equals(ConfigurationExpression other)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.EqualsObject">
            <summary>Sets the shim of ConfigurationExpression.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.GetHashCode">
            <summary>Sets the shim of ConfigurationExpression.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.HasPolicyChanges">
            <summary>Sets the shim of ConfigurationExpression.HasPolicyChanges()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfigurationExpression.RegistriesGet">
            <summary>Sets the shim of ConfigurationExpression.get_Registries()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimConfiguredInstancePolicy">
            <summary>Shim type of StructureMap.ConfiguredInstancePolicy</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfiguredInstancePolicy.#ctor(StructureMap.ConfiguredInstancePolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimConfiguredInstancePolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfiguredInstancePolicy.AllInstances.ApplyTypeInstance">
            <summary>Sets the shim of ConfiguredInstancePolicy.Apply(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfiguredInstancePolicy.ApplyTypeInstance">
            <summary>Sets the shim of ConfiguredInstancePolicy.Apply(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfiguredInstancePolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfiguredInstancePolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfiguredInstancePolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimConfiguredInstancePolicy.Bind(StructureMap.IInstancePolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimConfiguredInstancePolicy.Constructor">
            <summary>Sets the shim of ConfiguredInstancePolicy.ConfiguredInstancePolicy()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimContainer">
            <summary>Shim type of StructureMap.Container</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.#ctor(StructureMap.Container)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.AssertConfigurationIsValid">
            <summary>Sets the shim of Container.AssertConfigurationIsValid()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.BuildInstanceWithArgsTypeInstanceExplicitArgumentsString">
            <summary>Sets the shim of Container.BuildInstanceWithArgs(Type pluginType, Instance defaultInstance, ExplicitArguments args, String requestedName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.BuildUpObject">
            <summary>Sets the shim of Container.BuildUp(Object target)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.ConfigureActionOfConfigurationExpression">
            <summary>Sets the shim of Container.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.CreateChildContainer">
            <summary>Sets the shim of Container.CreateChildContainer()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DisposalLockGet">
            <summary>Sets the shim of Container.get_DisposalLock()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DisposalLockSetDisposalLock">
            <summary>Sets the shim of Container.set_DisposalLock(DisposalLock value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.Dispose">
            <summary>Sets the shim of Container.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoGetInstanceType">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoGetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoGetInstanceTypeInstance">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoGetInstanceTypeString">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoTryGetInstanceType">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoTryGetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoTryGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.DoTryGetInstanceTypeString">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.EjectAllInstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Container})">
            <summary>Sets the shim of Container.EjectAllInstancesOf()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.ForGenericTypeType">
            <summary>Sets the shim of Container.ForGenericType(Type templateType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.ForObjectObject">
            <summary>Sets the shim of Container.ForObject(Object subject)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Container.GetAllInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetAllInstancesOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,StructureMap.Pipeline.ExplicitArguments,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Container.GetAllInstances(ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetAllInstancesType">
            <summary>Sets the shim of Container.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetAllInstancesTypeExplicitArguments">
            <summary>Sets the shim of Container.GetAllInstances(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,``0})">
            <summary>Sets the shim of Container.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets the shim of Container.GetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceOf1ExplicitArgumentsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,StructureMap.Pipeline.ExplicitArguments,System.String,``0})">
            <summary>Sets the shim of Container.GetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceOf1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,StructureMap.Pipeline.Instance,``0})">
            <summary>Sets the shim of Container.GetInstance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,System.String,``0})">
            <summary>Sets the shim of Container.GetInstance(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceType">
            <summary>Sets the shim of Container.GetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceTypeInstance">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetInstanceTypeString">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetNestedContainer">
            <summary>Sets the shim of Container.GetNestedContainer()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetNestedContainerIPipelineGraph">
            <summary>Sets the shim of Container.GetNestedContainer(IPipelineGraph pipeline)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetNestedContainerString">
            <summary>Sets the shim of Container.GetNestedContainer(String profileName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.GetProfileString">
            <summary>Sets the shim of Container.GetProfile(String profileName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.InjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Container,``0})">
            <summary>Sets the shim of Container.Inject(!!0 instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.InjectTypeInstance">
            <summary>Sets the shim of Container.Inject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.InjectTypeObject">
            <summary>Sets the shim of Container.Inject(Type pluginType, Object instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.ModelGet">
            <summary>Sets the shim of Container.get_Model()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.NameGet">
            <summary>Sets the shim of Container.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.NameSetString">
            <summary>Sets the shim of Container.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.ProfileNameGet">
            <summary>Sets the shim of Container.get_ProfileName()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.ReleaseObject">
            <summary>Sets the shim of Container.Release(Object object)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.RoleGet">
            <summary>Sets the shim of Container.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.TransientTrackingGet">
            <summary>Sets the shim of Container.get_TransientTracking()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,``0})">
            <summary>Sets the shim of Container.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets the shim of Container.TryGetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceOf1ExplicitArgumentsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,StructureMap.Pipeline.ExplicitArguments,System.String,``0})">
            <summary>Sets the shim of Container.TryGetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,System.String,``0})">
            <summary>Sets the shim of Container.TryGetInstance(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceType">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.TryGetInstanceTypeString">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.WhatDidIScan">
            <summary>Sets the shim of Container.WhatDidIScan()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.WhatDoIHaveTypeAssemblyStringString">
            <summary>Sets the shim of Container.WhatDoIHave(Type pluginType, Assembly assembly, String namespace, String typeName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.WithActionOfIExplicitArgsExpression">
            <summary>Sets the shim of Container.With(Action`1&lt;IExplicitArgsExpression&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.AllInstances.WithOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container,``0,StructureMap.ExplicitArgsExpression})">
            <summary>Sets the shim of Container.With(!!0 arg)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.WithString">
            <summary>Sets the shim of Container.With(String argName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.WithTypeObject">
            <summary>Sets the shim of Container.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AllInstances.assertNotDisposed">
            <summary>Sets the shim of Container.assertNotDisposed()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.AssertConfigurationIsValid">
            <summary>Sets the shim of Container.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.Bind(StructureMap.IContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.BuildInstanceWithArgsTypeInstanceExplicitArgumentsString">
            <summary>Sets the shim of Container.BuildInstanceWithArgs(Type pluginType, Instance defaultInstance, ExplicitArguments args, String requestedName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.BuildUpObject">
            <summary>Sets the shim of Container.BuildUp(Object target)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ConfigureActionOfConfigurationExpression">
            <summary>Sets the shim of Container.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.Constructor">
            <summary>Sets the shim of Container.Container()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ConstructorActionOfConfigurationExpression">
            <summary>Sets the shim of Container.Container(Action`1&lt;ConfigurationExpression&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ConstructorIPipelineGraph">
            <summary>Sets the shim of Container.Container(IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ConstructorPluginGraph">
            <summary>Sets the shim of Container.Container(PluginGraph pluginGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ConstructorRegistry">
            <summary>Sets the shim of Container.Container(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.CreateChildContainer">
            <summary>Sets the shim of Container.CreateChildContainer()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DisposalLockGet">
            <summary>Sets the shim of Container.get_DisposalLock()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DisposalLockSetDisposalLock">
            <summary>Sets the shim of Container.set_DisposalLock(DisposalLock value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.Dispose">
            <summary>Sets the shim of Container.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoGetInstanceType">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoGetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoGetInstanceTypeInstance">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoGetInstanceTypeString">
            <summary>Sets the shim of Container.DoGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoTryGetInstanceType">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoTryGetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoTryGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.DoTryGetInstanceTypeString">
            <summary>Sets the shim of Container.DoTryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.EjectAllInstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of Container.EjectAllInstancesOf()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ForGenericTypeType">
            <summary>Sets the shim of Container.ForGenericType(Type templateType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ForObjectObject">
            <summary>Sets the shim of Container.ForObject(Object subject)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.IContainer})">
            <summary>Sets the shim of Container.For()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Container.GetAllInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetAllInstancesOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Container.GetAllInstances(ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetAllInstancesType">
            <summary>Sets the shim of Container.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetAllInstancesTypeExplicitArguments">
            <summary>Sets the shim of Container.GetAllInstances(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of Container.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetInstanceOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets the shim of Container.GetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetInstanceOf1ExplicitArgumentsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,System.String,``0})">
            <summary>Sets the shim of Container.GetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetInstanceOf1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.Instance,``0})">
            <summary>Sets the shim of Container.GetInstance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of Container.GetInstance(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetInstanceType">
            <summary>Sets the shim of Container.GetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetInstanceTypeInstance">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetInstanceTypeString">
            <summary>Sets the shim of Container.GetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetNestedContainer">
            <summary>Sets the shim of Container.GetNestedContainer()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetNestedContainerIPipelineGraph">
            <summary>Sets the shim of Container.GetNestedContainer(IPipelineGraph pipeline)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetNestedContainerString">
            <summary>Sets the shim of Container.GetNestedContainer(String profileName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.GetProfileString">
            <summary>Sets the shim of Container.GetProfile(String profileName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.InjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of Container.Inject(!!0 instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.InjectTypeInstance">
            <summary>Sets the shim of Container.Inject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.InjectTypeObject">
            <summary>Sets the shim of Container.Inject(Type pluginType, Object instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ModelGet">
            <summary>Sets the shim of Container.get_Model()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.NameGet">
            <summary>Sets the shim of Container.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.NameSetString">
            <summary>Sets the shim of Container.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ProfileNameGet">
            <summary>Sets the shim of Container.get_ProfileName()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ReleaseObject">
            <summary>Sets the shim of Container.Release(Object object)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.RoleGet">
            <summary>Sets the shim of Container.get_Role()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression">
            <summary>Shim type of StructureMap.Container+OpenGenericTypeExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.#ctor(StructureMap.Container.OpenGenericTypeExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.AllInstances.GetInstanceAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Container.OpenGenericTypeExpression,``0})">
            <summary>Sets the shim of OpenGenericTypeExpression.GetInstanceAs()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.AllInstances.WithParametersTypeArray">
            <summary>Sets the shim of OpenGenericTypeExpression.WithParameters(Type[] parameterTypes)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.Bind(StructureMap.Container.GetInstanceAsExpression)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.ConstructorTypeContainer">
            <summary>Sets the shim of OpenGenericTypeExpression.OpenGenericTypeExpression(Type templateType, Container container)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.GetInstanceAsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of OpenGenericTypeExpression.GetInstanceAs()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.ShimOpenGenericTypeExpression.WithParametersTypeArray">
            <summary>Sets the shim of OpenGenericTypeExpression.WithParameters(Type[] parameterTypes)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.TransientTrackingGet">
            <summary>Sets the shim of Container.get_TransientTracking()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of Container.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.TryGetInstanceOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets the shim of Container.TryGetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.TryGetInstanceOf1ExplicitArgumentsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,System.String,``0})">
            <summary>Sets the shim of Container.TryGetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of Container.TryGetInstance(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.TryGetInstanceType">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.TryGetInstanceTypeExplicitArguments">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.TryGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.TryGetInstanceTypeString">
            <summary>Sets the shim of Container.TryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.WhatDidIScan">
            <summary>Sets the shim of Container.WhatDidIScan()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.WhatDoIHaveTypeAssemblyStringString">
            <summary>Sets the shim of Container.WhatDoIHave(Type pluginType, Assembly assembly, String namespace, String typeName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.WithActionOfIExplicitArgsExpression">
            <summary>Sets the shim of Container.With(Action`1&lt;IExplicitArgsExpression&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimContainer.WithOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.ExplicitArgsExpression})">
            <summary>Sets the shim of Container.With(!!0 arg)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.WithString">
            <summary>Sets the shim of Container.With(String argName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.WithTypeObject">
            <summary>Sets the shim of Container.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimContainer.assertNotDisposed">
            <summary>Sets the shim of Container.assertNotDisposed()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimDefaultConstructorAttribute">
            <summary>Shim type of StructureMap.DefaultConstructorAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimDefaultConstructorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimDefaultConstructorAttribute.#ctor(StructureMap.DefaultConstructorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimDefaultConstructorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimDefaultConstructorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimDefaultConstructorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimDefaultConstructorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimDefaultConstructorAttribute.Constructor">
            <summary>Sets the shim of DefaultConstructorAttribute.DefaultConstructorAttribute()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimDefaultConstructorAttribute.GetConstructorType">
            <summary>Sets the shim of DefaultConstructorAttribute.GetConstructor(Type ExportedType)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimExplicitArgsExpression">
            <summary>Shim type of StructureMap.ExplicitArgsExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.#ctor(StructureMap.ExplicitArgsExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.ExplicitArgsExpression,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExplicitArgsExpression.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.GetAllInstancesType">
            <summary>Sets the shim of ExplicitArgsExpression.GetAllInstances(Type type)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.ExplicitArgsExpression,``0})">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.ExplicitArgsExpression,System.String,``0})">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.GetInstanceType">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance(Type type)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.GetInstanceTypeString">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance(Type type, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.StructureMapIExplicitPropertyEqualToObject">
            <summary>Sets the shim of ExplicitArgsExpression.StructureMap.IExplicitProperty.EqualTo(Object value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.ExplicitArgsExpression,``0})">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.ExplicitArgsExpression,System.String,``0})">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.TryGetInstanceType">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.TryGetInstanceTypeString">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.WithOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.ExplicitArgsExpression,``0,StructureMap.ExplicitArgsExpression})">
            <summary>Sets the shim of ExplicitArgsExpression.With(!!0 arg)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.WithString">
            <summary>Sets the shim of ExplicitArgsExpression.With(String argName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.AllInstances.WithTypeObject">
            <summary>Sets the shim of ExplicitArgsExpression.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.Bind(StructureMap.IExplicitArgsExpression)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.Bind(StructureMap.IExplicitProperty)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.ConstructorIContainer">
            <summary>Sets the shim of ExplicitArgsExpression.ExplicitArgsExpression(IContainer container)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExplicitArgsExpression.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.GetAllInstancesType">
            <summary>Sets the shim of ExplicitArgsExpression.GetAllInstances(Type type)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.GetInstanceType">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance(Type type)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.GetInstanceTypeString">
            <summary>Sets the shim of ExplicitArgsExpression.GetInstance(Type type, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.StructureMapIExplicitPropertyEqualToObject">
            <summary>Sets the shim of ExplicitArgsExpression.StructureMap.IExplicitProperty.EqualTo(Object value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.TryGetInstanceType">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.TryGetInstanceTypeString">
            <summary>Sets the shim of ExplicitArgsExpression.TryGetInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExplicitArgsExpression.WithOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.ExplicitArgsExpression})">
            <summary>Sets the shim of ExplicitArgsExpression.With(!!0 arg)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.WithString">
            <summary>Sets the shim of ExplicitArgsExpression.With(String argName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExplicitArgsExpression.WithTypeObject">
            <summary>Sets the shim of ExplicitArgsExpression.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimExpressionVisitorBase">
            <summary>Shim type of StructureMap.ExpressionVisitorBase</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExpressionVisitorBase.#ctor(StructureMap.ExpressionVisitorBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitBinaryBinaryExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitBindingMemberBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitConditionalConditionalExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitConstantConstantExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitElementInitializerElementInit">
            <summary>Sets the shim of ExpressionVisitorBase.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Sets the shim of ExpressionVisitorBase.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitExpression">
            <summary>Sets the shim of ExpressionVisitorBase.Visit(Expression exp)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitInvocationInvocationExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitLambdaLambdaExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitListInitListInitExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitListReadOnlyCollectionOfExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitMemberAccessMemberExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitMemberInitMemberInitExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitMemberListBindingMemberListBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitMethodCallMethodCallExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitNewArrayNewArrayExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitNewNewExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitParameterParameterExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitTypeIsTypeBinaryExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.AllInstances.VisitUnaryUnaryExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExpressionVisitorBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimExpressionVisitorBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.Constructor">
            <summary>Sets the shim of ExpressionVisitorBase.ExpressionVisitorBase()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitBinaryBinaryExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitBindingMemberBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitConditionalConditionalExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitConstantConstantExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitElementInitializerElementInit">
            <summary>Sets the shim of ExpressionVisitorBase.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Sets the shim of ExpressionVisitorBase.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitExpression">
            <summary>Sets the shim of ExpressionVisitorBase.Visit(Expression exp)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitInvocationInvocationExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitLambdaLambdaExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitListInitListInitExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitListReadOnlyCollectionOfExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitMemberAccessMemberExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitMemberInitMemberInitExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitMemberListBindingMemberListBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitMethodCallMethodCallExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitNewArrayNewArrayExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitNewNewExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitParameterParameterExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitTypeIsTypeBinaryExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimExpressionVisitorBase.VisitUnaryUnaryExpression">
            <summary>Sets the shim of ExpressionVisitorBase.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimPipelineGraph">
            <summary>Shim type of StructureMap.PipelineGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.#ctor(StructureMap.PipelineGraph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimPipelineGraph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ConfigureActionOfConfigurationExpression">
            <summary>Sets the shim of PipelineGraph.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ContainerCacheGet">
            <summary>Sets the shim of PipelineGraph.get_ContainerCache()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ContainerCacheSetIObjectCache">
            <summary>Sets the shim of PipelineGraph.set_ContainerCache(IObjectCache value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.DetermineLifecycleTypeInstance">
            <summary>Sets the shim of PipelineGraph.DetermineLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.Dispose">
            <summary>Sets the shim of PipelineGraph.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.EjectorGet">
            <summary>Sets the shim of PipelineGraph.get_Ejector()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.InstancesGet">
            <summary>Sets the shim of PipelineGraph.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.PoliciesGet">
            <summary>Sets the shim of PipelineGraph.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ProfileGet">
            <summary>Sets the shim of PipelineGraph.get_Profile()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ProfilesGet">
            <summary>Sets the shim of PipelineGraph.get_Profiles()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.RegisterContainerIContainer">
            <summary>Sets the shim of PipelineGraph.RegisterContainer(IContainer container)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.RoleGet">
            <summary>Sets the shim of PipelineGraph.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.Root">
            <summary>Sets the shim of PipelineGraph.Root()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.SingletonsGet">
            <summary>Sets the shim of PipelineGraph.get_Singletons()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ToModel">
            <summary>Sets the shim of PipelineGraph.ToModel()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ToNestedGraph">
            <summary>Sets the shim of PipelineGraph.ToNestedGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.TrackDisposableIDisposable">
            <summary>Sets the shim of PipelineGraph.TrackDisposable(IDisposable disposable)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.TransientsGet">
            <summary>Sets the shim of PipelineGraph.get_Transients()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.AllInstances.ValidateValidNestedScoping">
            <summary>Sets the shim of PipelineGraph.ValidateValidNestedScoping()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.Bind(StructureMap.ILifecycleContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.Bind(StructureMap.IPipelineGraph)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPipelineGraph.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.BuildEmpty">
            <summary>Sets the shim of PipelineGraph.BuildEmpty()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.BuildRootPluginGraph">
            <summary>Sets the shim of PipelineGraph.BuildRoot(PluginGraph pluginGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ConfigureActionOfConfigurationExpression">
            <summary>Sets the shim of PipelineGraph.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ConstructorPluginGraphIInstanceGraphIPipelineGraphIObjectCacheITransientTracking">
            <summary>Sets the shim of PipelineGraph.PipelineGraph(PluginGraph pluginGraph, IInstanceGraph instances, IPipelineGraph root, IObjectCache singletons, ITransientTracking transients)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ContainerCacheGet">
            <summary>Sets the shim of PipelineGraph.get_ContainerCache()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ContainerCacheSetIObjectCache">
            <summary>Sets the shim of PipelineGraph.set_ContainerCache(IObjectCache value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.DetermineLifecycleTypeInstance">
            <summary>Sets the shim of PipelineGraph.DetermineLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.Dispose">
            <summary>Sets the shim of PipelineGraph.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.EjectorGet">
            <summary>Sets the shim of PipelineGraph.get_Ejector()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ForActionOfConfigurationExpression">
            <summary>Sets the shim of PipelineGraph.For(Action`1&lt;ConfigurationExpression&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.InstancesGet">
            <summary>Sets the shim of PipelineGraph.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.PoliciesGet">
            <summary>Sets the shim of PipelineGraph.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ProfileGet">
            <summary>Sets the shim of PipelineGraph.get_Profile()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ProfilesGet">
            <summary>Sets the shim of PipelineGraph.get_Profiles()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.RegisterContainerIContainer">
            <summary>Sets the shim of PipelineGraph.RegisterContainer(IContainer container)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.RoleGet">
            <summary>Sets the shim of PipelineGraph.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.Root">
            <summary>Sets the shim of PipelineGraph.Root()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.SingletonsGet">
            <summary>Sets the shim of PipelineGraph.get_Singletons()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ToModel">
            <summary>Sets the shim of PipelineGraph.ToModel()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ToNestedGraph">
            <summary>Sets the shim of PipelineGraph.ToNestedGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.TrackDisposableIDisposable">
            <summary>Sets the shim of PipelineGraph.TrackDisposable(IDisposable disposable)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.TransientsGet">
            <summary>Sets the shim of PipelineGraph.get_Transients()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPipelineGraph.ValidateValidNestedScoping">
            <summary>Sets the shim of PipelineGraph.ValidateValidNestedScoping()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimPluginGraphBuilder">
            <summary>Shim type of StructureMap.PluginGraphBuilder</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPluginGraphBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPluginGraphBuilder.#ctor(StructureMap.PluginGraphBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.AddRegistry">
            <summary>Sets the shim of PluginGraphBuilder.Add(Registry registry)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimPluginGraphBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.AllInstances.AddRegistry">
            <summary>Sets the shim of PluginGraphBuilder.Add(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.AllInstances.Build">
            <summary>Sets the shim of PluginGraphBuilder.Build()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.AllInstances.RunConfigurations">
            <summary>Sets the shim of PluginGraphBuilder.RunConfigurations()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.AllInstances._RunConfigurationsb__5_2TaskOfRegistry">
            <summary>Sets the shim of PluginGraphBuilder.&lt;RunConfigurations&gt;b__5_2(Task`1&lt;Registry&gt; x)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPluginGraphBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPluginGraphBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.Build">
            <summary>Sets the shim of PluginGraphBuilder.Build()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.Constructor">
            <summary>Sets the shim of PluginGraphBuilder.PluginGraphBuilder()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.ConstructorPluginGraph">
            <summary>Sets the shim of PluginGraphBuilder.PluginGraphBuilder(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder.RunConfigurations">
            <summary>Sets the shim of PluginGraphBuilder.RunConfigurations()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPluginGraphBuilder._RunConfigurationsb__5_2TaskOfRegistry">
            <summary>Sets the shim of PluginGraphBuilder.&lt;RunConfigurations&gt;b__5_2(Task`1&lt;Registry&gt; x)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimPolicies">
            <summary>Shim type of StructureMap.Policies</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPolicies.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPolicies.#ctor(StructureMap.Policies)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AddIInstancePolicy">
            <summary>Sets the shim of Policies.Add(IInstancePolicy policy)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AddIInterceptorPolicy">
            <summary>Sets the shim of Policies.Add(IInterceptorPolicy interception)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimPolicies.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.AddIInstancePolicy">
            <summary>Sets the shim of Policies.Add(IInstancePolicy policy)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.AddIInterceptorPolicy">
            <summary>Sets the shim of Policies.Add(IInterceptorPolicy interception)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.ApplyTypeInstance">
            <summary>Sets the shim of Policies.Apply(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.CanBeAutoFilledType">
            <summary>Sets the shim of Policies.CanBeAutoFilled(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.Interception">
            <summary>Sets the shim of Policies.Interception()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.IsMandatorySetterPropertyInfo">
            <summary>Sets the shim of Policies.IsMandatorySetter(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.SelectConstructorTypeDependencyCollection">
            <summary>Sets the shim of Policies.SelectConstructor(Type pluggedType, DependencyCollection dependencies)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.AllInstances.ToBuildUpPlanTypeFuncOfIConfiguredInstance">
            <summary>Sets the shim of Policies.ToBuildUpPlan(Type pluggedType, Func`1&lt;IConfiguredInstance&gt; findInstance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.ApplyTypeInstance">
            <summary>Sets the shim of Policies.Apply(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPolicies.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimPolicies.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.CanBeAutoFilledType">
            <summary>Sets the shim of Policies.CanBeAutoFilled(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.ConstructorPluginGraph">
            <summary>Sets the shim of Policies.Policies(PluginGraph pluginGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.Default">
            <summary>Sets the shim of Policies.Default()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.Interception">
            <summary>Sets the shim of Policies.Interception()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.IsMandatorySetterPropertyInfo">
            <summary>Sets the shim of Policies.IsMandatorySetter(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.SelectConstructorTypeDependencyCollection">
            <summary>Sets the shim of Policies.SelectConstructor(Type pluggedType, DependencyCollection dependencies)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimPolicies.ToBuildUpPlanTypeFuncOfIConfiguredInstance">
            <summary>Sets the shim of Policies.ToBuildUpPlan(Type pluggedType, Func`1&lt;IConfiguredInstance&gt; findInstance)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimProfiles">
            <summary>Shim type of StructureMap.Profiles</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimProfiles.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimProfiles.#ctor(StructureMap.Profiles)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimProfiles.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.AllInstances.AllProfiles">
            <summary>Sets the shim of Profiles.AllProfiles()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.AllInstances.ForString">
            <summary>Sets the shim of Profiles.For(String profileName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.AllInstances.NewChildPluginGraph">
            <summary>Sets the shim of Profiles.NewChild(PluginGraph parent)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.AllProfiles">
            <summary>Sets the shim of Profiles.AllProfiles()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimProfiles.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimProfiles.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.ConstructorPluginGraphIPipelineGraph">
            <summary>Sets the shim of Profiles.Profiles(PluginGraph pluginGraph, IPipelineGraph root)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.ForString">
            <summary>Sets the shim of Profiles.For(String profileName)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimProfiles.NewChildPluginGraph">
            <summary>Sets the shim of Profiles.NewChild(PluginGraph parent)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRegistry">
            <summary>Shim type of StructureMap.Registry</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.#ctor(StructureMap.Registry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AddTypeTypeType">
            <summary>Sets the shim of Registry.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AddTypeTypeTypeString">
            <summary>Sets the shim of Registry.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRegistry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.AddTypeTypeType">
            <summary>Sets the shim of Registry.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.AddTypeTypeTypeString">
            <summary>Sets the shim of Registry.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.ConfigureActionOfPluginGraph">
            <summary>Sets the shim of Registry.Configure(Action`1&lt;PluginGraph&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.ConfigurePluginGraph">
            <summary>Sets the shim of Registry.Configure(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.EqualsObject">
            <summary>Sets the shim of Registry.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.EqualsRegistry">
            <summary>Sets the shim of Registry.Equals(Registry other)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.AllInstances.ForConcreteTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry,StructureMap.Registry.BuildWithExpression{``0}})">
            <summary>Sets the shim of Registry.ForConcreteType()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.AllInstances.ForOf1ILifecycle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry,StructureMap.Pipeline.ILifecycle,StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets the shim of Registry.For(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.AllInstances.ForSingletonOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry,StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets the shim of Registry.ForSingletonOf()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.ForSingletonOfType">
            <summary>Sets the shim of Registry.ForSingletonOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.ForTypeILifecycle">
            <summary>Sets the shim of Registry.For(Type pluginType, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.AllInstances.ForwardOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Registry})">
            <summary>Sets the shim of Registry.Forward()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.GetHashCode01">
            <summary>Sets the shim of Registry.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.AllInstances.IncludeRegistryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Registry})">
            <summary>Sets the shim of Registry.IncludeRegistry()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.IncludeRegistryRegistry">
            <summary>Sets the shim of Registry.IncludeRegistry(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.PoliciesChangedGet">
            <summary>Sets the shim of Registry.get_PoliciesChanged()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.PoliciesChangedSetBoolean">
            <summary>Sets the shim of Registry.set_PoliciesChanged(Boolean value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.PoliciesGet">
            <summary>Sets the shim of Registry.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.ProfileStringActionOfIProfileRegistry">
            <summary>Sets the shim of Registry.Profile(String profileName, Action`1&lt;IProfileRegistry&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.AllInstances.RedirectOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry,StructureMap.Pipeline.LambdaInstance{``0,``0}})">
            <summary>Sets the shim of Registry.Redirect()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.ScanActionOfIAssemblyScanner">
            <summary>Sets the shim of Registry.Scan(Action`1&lt;IAssemblyScanner&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.TransientTrackingSetTransientTracking">
            <summary>Sets the shim of Registry.set_TransientTracking(TransientTracking value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.AllInstances.alterSetActionOfPluginGraph">
            <summary>Sets the shim of Registry.set_alter(Action`1&lt;PluginGraph&gt; value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.Bind(StructureMap.IProfileRegistry)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.Bind(StructureMap.IRegistry)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ConfigureActionOfPluginGraph">
            <summary>Sets the shim of Registry.Configure(Action`1&lt;PluginGraph&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ConfigurePluginGraph">
            <summary>Sets the shim of Registry.Configure(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.Constructor">
            <summary>Sets the shim of Registry.Registry()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.EqualsObject">
            <summary>Sets the shim of Registry.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.EqualsRegistry">
            <summary>Sets the shim of Registry.Equals(Registry other)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ForConcreteTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry.BuildWithExpression{``0}})">
            <summary>Sets the shim of Registry.ForConcreteType()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ForOf1ILifecycle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ILifecycle,StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets the shim of Registry.For(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ForSingletonOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets the shim of Registry.ForSingletonOf()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ForSingletonOfType">
            <summary>Sets the shim of Registry.ForSingletonOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ForTypeILifecycle">
            <summary>Sets the shim of Registry.For(Type pluginType, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ForwardOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of Registry.Forward()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.GetHashCode">
            <summary>Sets the shim of Registry.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.IncludeRegistryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of Registry.IncludeRegistry()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.IncludeRegistryRegistry">
            <summary>Sets the shim of Registry.IncludeRegistry(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.IsPublicRegistryType">
            <summary>Sets the shim of Registry.IsPublicRegistry(Type type)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.PoliciesChangedGet">
            <summary>Sets the shim of Registry.get_PoliciesChanged()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.PoliciesChangedSetBoolean">
            <summary>Sets the shim of Registry.set_PoliciesChanged(Boolean value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.PoliciesGet">
            <summary>Sets the shim of Registry.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ProfileStringActionOfIProfileRegistry">
            <summary>Sets the shim of Registry.Profile(String profileName, Action`1&lt;IProfileRegistry&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.RedirectOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.LambdaInstance{``0,``0}})">
            <summary>Sets the shim of Registry.Redirect()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.RegistryExistsIEnumerableOfRegistryRegistry">
            <summary>Sets the shim of Registry.RegistryExists(IEnumerable`1&lt;Registry&gt; all, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ScanActionOfIAssemblyScanner">
            <summary>Sets the shim of Registry.Scan(Action`1&lt;IAssemblyScanner&gt; action)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1">
            <summary>Shim type of StructureMap.Registry+BuildWithExpression`1</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.#ctor(StructureMap.Registry.BuildWithExpression{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.AllInstances.ConfigureGet">
            <summary>Sets the shim of BuildWithExpression`1.get_Configure()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.ConfigureGet">
            <summary>Sets the shim of BuildWithExpression`1.get_Configure()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimBuildWithExpression`1.ConstructorSmartInstanceOfT0T0">
            <summary>Sets the shim of BuildWithExpression`1.BuildWithExpression`1(SmartInstance`2&lt;!0,!0&gt; instance)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression">
            <summary>Shim type of StructureMap.Registry+PoliciesExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.#ctor(StructureMap.Registry.PoliciesExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AddIInstancePolicy">
            <summary>Sets the shim of PoliciesExpression.Add(IInstancePolicy policy)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of PoliciesExpression.Add()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.AddIInstancePolicy">
            <summary>Sets the shim of PoliciesExpression.Add(IInstancePolicy policy)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Registry.PoliciesExpression})">
            <summary>Sets the shim of PoliciesExpression.Add()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.ConstructorSelectorIConstructorSelector">
            <summary>Sets the shim of PoliciesExpression.ConstructorSelector(IConstructorSelector constructorSelector)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.ConstructorSelectorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Registry.PoliciesExpression})">
            <summary>Sets the shim of PoliciesExpression.ConstructorSelector()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.FillAllPropertiesOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry.PoliciesExpression,StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets the shim of PoliciesExpression.FillAllPropertiesOfType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.InterceptorsIInterceptorPolicy">
            <summary>Sets the shim of PoliciesExpression.Interceptors(IInterceptorPolicy policy)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.OnMissingFamilyIFamilyPolicy">
            <summary>Sets the shim of PoliciesExpression.OnMissingFamily(IFamilyPolicy policy)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.OnMissingFamilyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Registry.PoliciesExpression})">
            <summary>Sets the shim of PoliciesExpression.OnMissingFamily()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.SetAllPropertiesActionOfSetterConvention">
            <summary>Sets the shim of PoliciesExpression.SetAllProperties(Action`1&lt;SetterConvention&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.AllInstances.alterSetActionOfPluginGraph">
            <summary>Sets the shim of PoliciesExpression.set_alter(Action`1&lt;PluginGraph&gt; value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.ConstructorRegistry">
            <summary>Sets the shim of PoliciesExpression.PoliciesExpression(Registry parent)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.ConstructorSelectorIConstructorSelector">
            <summary>Sets the shim of PoliciesExpression.ConstructorSelector(IConstructorSelector constructorSelector)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.ConstructorSelectorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of PoliciesExpression.ConstructorSelector()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.FillAllPropertiesOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets the shim of PoliciesExpression.FillAllPropertiesOfType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.InterceptorsIInterceptorPolicy">
            <summary>Sets the shim of PoliciesExpression.Interceptors(IInterceptorPolicy policy)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.OnMissingFamilyIFamilyPolicy">
            <summary>Sets the shim of PoliciesExpression.OnMissingFamily(IFamilyPolicy policy)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.OnMissingFamilyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of PoliciesExpression.OnMissingFamily()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.SetAllPropertiesActionOfSetterConvention">
            <summary>Sets the shim of PoliciesExpression.SetAllProperties(Action`1&lt;SetterConvention&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.ShimPoliciesExpression.alterSetActionOfPluginGraph">
            <summary>Sets the shim of PoliciesExpression.set_alter(Action`1&lt;PluginGraph&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.StaticConstructor">
            <summary>Sets the shim of Registry.Registry()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.TransientTrackingSetTransientTracking">
            <summary>Sets the shim of Registry.set_TransientTracking(TransientTracking value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRegistry.alterSetActionOfPluginGraph">
            <summary>Sets the shim of Registry.set_alter(Action`1&lt;PluginGraph&gt; value)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRootInstanceGraph">
            <summary>Shim type of StructureMap.RootInstanceGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRootInstanceGraph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRootInstanceGraph.#ctor(StructureMap.RootInstanceGraph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.DefaultLifecycleForType">
            <summary>Sets the shim of RootInstanceGraph.DefaultLifecycleFor(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.EachInstanceActionOfTypeInstance">
            <summary>Sets the shim of RootInstanceGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.FindInstanceTypeString">
            <summary>Sets the shim of RootInstanceGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.GetAllInstances">
            <summary>Sets the shim of RootInstanceGraph.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.GetAllInstancesType">
            <summary>Sets the shim of RootInstanceGraph.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.GetDefaultType">
            <summary>Sets the shim of RootInstanceGraph.GetDefault(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.HasDefaultForPluginTypeType">
            <summary>Sets the shim of RootInstanceGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.HasInstanceTypeString">
            <summary>Sets the shim of RootInstanceGraph.HasInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.ImmediateInstances">
            <summary>Sets the shim of RootInstanceGraph.ImmediateInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.ImmediatePluginGraphGet">
            <summary>Sets the shim of RootInstanceGraph.get_ImmediatePluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.RoleGet">
            <summary>Sets the shim of RootInstanceGraph.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.AllInstances.UniqueFamilies">
            <summary>Sets the shim of RootInstanceGraph.UniqueFamilies()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRootInstanceGraph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRootInstanceGraph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimRootInstanceGraph.Bind(StructureMap.IInstanceGraph)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.ConstructorPluginGraph">
            <summary>Sets the shim of RootInstanceGraph.RootInstanceGraph(PluginGraph pluginGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.DefaultLifecycleForType">
            <summary>Sets the shim of RootInstanceGraph.DefaultLifecycleFor(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.EachInstanceActionOfTypeInstance">
            <summary>Sets the shim of RootInstanceGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.FindInstanceTypeString">
            <summary>Sets the shim of RootInstanceGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.GetAllInstances">
            <summary>Sets the shim of RootInstanceGraph.GetAllInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.GetAllInstancesType">
            <summary>Sets the shim of RootInstanceGraph.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.GetDefaultType">
            <summary>Sets the shim of RootInstanceGraph.GetDefault(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.HasDefaultForPluginTypeType">
            <summary>Sets the shim of RootInstanceGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.HasInstanceTypeString">
            <summary>Sets the shim of RootInstanceGraph.HasInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.ImmediateInstances">
            <summary>Sets the shim of RootInstanceGraph.ImmediateInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.ImmediatePluginGraphGet">
            <summary>Sets the shim of RootInstanceGraph.get_ImmediatePluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.RoleGet">
            <summary>Sets the shim of RootInstanceGraph.get_Role()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimRootInstanceGraph.UniqueFamilies">
            <summary>Sets the shim of RootInstanceGraph.UniqueFamilies()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimSessionCache">
            <summary>Shim type of StructureMap.SessionCache</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.#ctor(StructureMap.SessionCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimSessionCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.AllInstances.AllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.SessionCache,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of SessionCache.All()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.AllInstances.GetDefaultTypeIPipelineGraph">
            <summary>Sets the shim of SessionCache.GetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.AllInstances.GetObjectTypeInstanceILifecycle">
            <summary>Sets the shim of SessionCache.GetObject(Type pluginType, Instance instance, ILifecycle lifecycle)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.AllInstances.TryGetDefaultTypeIPipelineGraph">
            <summary>Sets the shim of SessionCache.TryGetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.AllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of SessionCache.All()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSessionCache.Bind(StructureMap.ISessionCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.ConstructorIBuildSession">
            <summary>Sets the shim of SessionCache.SessionCache(IBuildSession resolver)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.ConstructorIBuildSessionExplicitArguments">
            <summary>Sets the shim of SessionCache.SessionCache(IBuildSession resolver, ExplicitArguments arguments)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.GetDefaultTypeIPipelineGraph">
            <summary>Sets the shim of SessionCache.GetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.GetObjectTypeInstanceILifecycle">
            <summary>Sets the shim of SessionCache.GetObject(Type pluginType, Instance instance, ILifecycle lifecycle)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSessionCache.TryGetDefaultTypeIPipelineGraph">
            <summary>Sets the shim of SessionCache.TryGetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimSingletonAttribute">
            <summary>Shim type of StructureMap.SingletonAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSingletonAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSingletonAttribute.#ctor(StructureMap.SingletonAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimSingletonAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSingletonAttribute.AllInstances.AlterIConfiguredInstance">
            <summary>Sets the shim of SingletonAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSingletonAttribute.AllInstances.AlterPluginFamily">
            <summary>Sets the shim of SingletonAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSingletonAttribute.AlterIConfiguredInstance">
            <summary>Sets the shim of SingletonAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSingletonAttribute.AlterPluginFamily">
            <summary>Sets the shim of SingletonAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSingletonAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimSingletonAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSingletonAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimSingletonAttribute.Constructor">
            <summary>Sets the shim of SingletonAttribute.SingletonAttribute()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapAttribute">
            <summary>Shim type of StructureMap.StructureMapAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapAttribute.#ctor(StructureMap.StructureMapAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AllInstances.AlterIConfiguredInstance">
            <summary>Sets the shim of StructureMapAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AllInstances.AlterIConfiguredInstanceParameterInfo">
            <summary>Sets the shim of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AllInstances.AlterIConfiguredInstancePropertyInfo">
            <summary>Sets the shim of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AllInstances.AlterPluginFamily">
            <summary>Sets the shim of StructureMapAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AlterIConfiguredInstance">
            <summary>Sets the shim of StructureMapAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AlterIConfiguredInstanceParameterInfo">
            <summary>Sets the shim of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AlterIConfiguredInstancePropertyInfo">
            <summary>Sets the shim of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.AlterPluginFamily">
            <summary>Sets the shim of StructureMapAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapAttribute.Constructor">
            <summary>Sets the shim of StructureMapAttribute.StructureMapAttribute()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapBuildPlanException">
            <summary>Shim type of StructureMap.StructureMapBuildPlanException</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapBuildPlanException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapBuildPlanException.#ctor(StructureMap.StructureMapBuildPlanException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapBuildPlanException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapBuildPlanException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapBuildPlanException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapBuildPlanException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapBuildPlanException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapBuildPlanException.ConstructorString">
            <summary>Sets the shim of StructureMapBuildPlanException.StructureMapBuildPlanException(String message)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapBuildPlanException.ConstructorStringException">
            <summary>Sets the shim of StructureMapBuildPlanException.StructureMapBuildPlanException(String message, Exception innerException)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapConfigurationException">
            <summary>Shim type of StructureMap.StructureMapConfigurationException</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapConfigurationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapConfigurationException.#ctor(StructureMap.StructureMapConfigurationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapConfigurationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapConfigurationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapConfigurationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapConfigurationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapConfigurationException.ConstructorStringException">
            <summary>Sets the shim of StructureMapConfigurationException.StructureMapConfigurationException(String message, Exception innerException)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapConfigurationException.ConstructorStringObjectArray">
            <summary>Sets the shim of StructureMapConfigurationException.StructureMapConfigurationException(String message, Object[] parameters)</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapException">
            <summary>Shim type of StructureMap.StructureMapException</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapException.#ctor(StructureMap.StructureMapException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimStructureMapException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.AllInstances.ContextGet">
            <summary>Sets the shim of StructureMapException.get_Context()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.AllInstances.ContextSetString">
            <summary>Sets the shim of StructureMapException.set_Context(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.AllInstances.MessageGet">
            <summary>Sets the shim of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.AllInstances.PushStringObjectArray">
            <summary>Sets the shim of StructureMapException.Push(String description, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.AllInstances.TitleGet">
            <summary>Sets the shim of StructureMapException.get_Title()</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimStructureMapException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.ConstructorString">
            <summary>Sets the shim of StructureMapException.StructureMapException(String message)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.ConstructorStringException">
            <summary>Sets the shim of StructureMapException.StructureMapException(String message, Exception innerException)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.ContextGet">
            <summary>Sets the shim of StructureMapException.get_Context()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.ContextSetString">
            <summary>Sets the shim of StructureMapException.set_Context(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.MessageGet">
            <summary>Sets the shim of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.PushStringObjectArray">
            <summary>Sets the shim of StructureMapException.Push(String description, Object[] parameters)</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.StaticConstructor">
            <summary>Sets the shim of StructureMapException.StructureMapException()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimStructureMapException.TitleGet">
            <summary>Sets the shim of StructureMapException.get_Title()</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimValidationMethodAttribute">
            <summary>Shim type of StructureMap.ValidationMethodAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimValidationMethodAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimValidationMethodAttribute.#ctor(StructureMap.ValidationMethodAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Fakes.ShimValidationMethodAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimValidationMethodAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Fakes.ShimValidationMethodAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimValidationMethodAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimValidationMethodAttribute.Constructor">
            <summary>Sets the shim of ValidationMethodAttribute.ValidationMethodAttribute()</summary>
        </member>
        <member name="P:StructureMap.Fakes.ShimValidationMethodAttribute.GetValidationMethodsType">
            <summary>Sets the shim of ValidationMethodAttribute.GetValidationMethods(Type objectType)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubAlwaysUniqueAttribute">
            <summary>Stub type of StructureMap.AlwaysUniqueAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.Alter(StructureMap.Graph.PluginFamily)">
            <summary>Sets the stub of AlwaysUniqueAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Sets the stub of AlwaysUniqueAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance,System.Reflection.ParameterInfo)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance,System.Reflection.PropertyInfo)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.AlterIConfiguredInstance">
            <summary>Sets the stub of AlwaysUniqueAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.AlterIConfiguredInstanceParameterInfo">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.AlterIConfiguredInstancePropertyInfo">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.AlterPluginFamily">
            <summary>Sets the stub of AlwaysUniqueAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubAlwaysUniqueAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAlwaysUniqueAttribute</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubAlwaysUniqueAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubAlwaysUniqueAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubAlwaysUniqueAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubAlwaysUniqueAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubAlwaysUniqueAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubBuildSession">
            <summary>Stub type of StructureMap.BuildSession</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubBuildSession.#ctor(StructureMap.IPipelineGraph,System.String,StructureMap.Pipeline.ExplicitArguments)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubBuildSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubBuildSession.CreateInstance(System.Type,System.String)">
            <summary>Sets the stub of BuildSession.CreateInstance(Type pluginType, String name)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubBuildSession.CreateInstanceTypeString">
            <summary>Sets the stub of BuildSession.CreateInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubBuildSession.FindObject(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of BuildSession.FindObject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubBuildSession.FindObjectTypeInstance">
            <summary>Sets the stub of BuildSession.FindObject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubBuildSession.InitializeStub">
            <summary>Initializes a new instance of type StubBuildSession</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubBuildSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubBuildSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubCloseGenericTypeExpression">
            <summary>Stub type of StructureMap.CloseGenericTypeExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubCloseGenericTypeExpression.#ctor(System.Object,StructureMap.IContainer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubCloseGenericTypeExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubCloseGenericTypeExpression.InitializeStub">
            <summary>Initializes a new instance of type StubCloseGenericTypeExpression</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubCloseGenericTypeExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubCloseGenericTypeExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubComplexInstanceGraph">
            <summary>Stub type of StructureMap.ComplexInstanceGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubComplexInstanceGraph.#ctor(StructureMap.IPipelineGraph,StructureMap.Graph.PluginGraph,StructureMap.ContainerRole)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubComplexInstanceGraph.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubComplexInstanceGraph.InitializeStub">
            <summary>Initializes a new instance of type StubComplexInstanceGraph</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubComplexInstanceGraph.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubComplexInstanceGraph.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubConfiguredInstancePolicy">
            <summary>Stub type of StructureMap.ConfiguredInstancePolicy</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubConfiguredInstancePolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubConfiguredInstancePolicy.ApplyTypeIConfiguredInstance">
            <summary>Sets the stub of ConfiguredInstancePolicy.apply(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubConfiguredInstancePolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubConfiguredInstancePolicy.InitializeStub">
            <summary>Initializes a new instance of type StubConfiguredInstancePolicy</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubConfiguredInstancePolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubConfiguredInstancePolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubConfiguredInstancePolicy.apply(System.Type,StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Sets the stub of ConfiguredInstancePolicy.apply(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubContainer">
            <summary>Stub type of StructureMap.Container</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubContainer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubContainer.#ctor(StructureMap.Registry)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubContainer.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubContainer.#ctor(System.Action{StructureMap.ConfigurationExpression})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubContainer.InitializeStub">
            <summary>Initializes a new instance of type StubContainer</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubDefaultConstructorAttribute">
            <summary>Stub type of StructureMap.DefaultConstructorAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubDefaultConstructorAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubDefaultConstructorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubDefaultConstructorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubDefaultConstructorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubDefaultConstructorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubDefaultConstructorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubDefaultConstructorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultConstructorAttribute</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubDefaultConstructorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubDefaultConstructorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubDefaultConstructorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubDefaultConstructorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubDefaultConstructorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubDefaultConstructorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubDefaultConstructorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubDefaultConstructorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubExpressionVisitorBase">
            <summary>Stub type of StructureMap.ExpressionVisitorBase</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubExpressionVisitorBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.InitializeStub">
            <summary>Initializes a new instance of type StubExpressionVisitorBase</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubExpressionVisitorBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubExpressionVisitorBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of ExpressionVisitorBase.Visit(Expression exp)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitBinaryBinaryExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Sets the stub of ExpressionVisitorBase.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Sets the stub of ExpressionVisitorBase.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitBindingMemberBinding">
            <summary>Sets the stub of ExpressionVisitorBase.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitConditionalConditionalExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitConstantConstantExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitElementInitializer(System.Linq.Expressions.ElementInit)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitElementInitializerElementInit">
            <summary>Sets the stub of ExpressionVisitorBase.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>Sets the stub of ExpressionVisitorBase.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Sets the stub of ExpressionVisitorBase.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitExpression">
            <summary>Sets the stub of ExpressionVisitorBase.Visit(Expression exp)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitInvocationInvocationExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitLambdaLambdaExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Sets the stub of ExpressionVisitorBase.VisitList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitListInitListInitExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitListReadOnlyCollectionOfExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberAccessMemberExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberAssignmentMemberAssignment">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberInitMemberInitExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberListBindingMemberListBinding">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitMethodCallMethodCallExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitNewArrayNewArrayExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitNewNewExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitParameterParameterExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitTypeIs(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitTypeIsTypeBinaryExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Sets the stub of ExpressionVisitorBase.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubExpressionVisitorBase.VisitUnaryUnaryExpression">
            <summary>Sets the stub of ExpressionVisitorBase.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIBuildSession">
            <summary>Stub type of StructureMap.IBuildSession</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.#ctor">
            <summary>Initializes a new instance of type StubIBuildSession</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.BuildNewInOriginalContextTypeInstance">
            <summary>Sets the stub of IBuildSession.BuildNewInOriginalContext(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.BuildNewInSessionTypeInstance">
            <summary>Sets the stub of IBuildSession.BuildNewInSession(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.BuildUniqueTypeInstance">
            <summary>Sets the stub of IBuildSession.BuildUnique(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.CreateInstanceTypeString">
            <summary>Sets the stub of IBuildSession.CreateInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#Policies">
            <summary>Sets the stub of IBuildSession.get_Policies()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.PoliciesGet">
            <summary>Sets the stub of IBuildSession.get_Policies()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.Pop">
            <summary>Sets the stub of IBuildSession.Pop()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.PushInstance">
            <summary>Sets the stub of IBuildSession.Push(Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIBuildSession.ResolveFromLifecycleTypeInstance">
            <summary>Sets the stub of IBuildSession.ResolveFromLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#BuildNewInOriginalContext(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IBuildSession.BuildNewInOriginalContext(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#BuildNewInSession(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IBuildSession.BuildNewInSession(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#BuildUnique(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IBuildSession.BuildUnique(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#CreateInstance(System.Type,System.String)">
            <summary>Sets the stub of IBuildSession.CreateInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#Pop">
            <summary>Sets the stub of IBuildSession.Pop()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#Push(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IBuildSession.Push(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIBuildSession.StructureMap#IBuildSession#ResolveFromLifecycle(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IBuildSession.ResolveFromLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIContainer">
            <summary>Stub type of StructureMap.IContainer</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.#ctor">
            <summary>Initializes a new instance of type StubIContainer</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.AssertConfigurationIsValid">
            <summary>Sets the stub of IContainer.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.AttachBackingFieldToDisposalLock">
            <summary>Attaches delegates to emulate StubIContainer.DisposalLock as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIContainer.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.BuildUpObject">
            <summary>Sets the stub of IContainer.BuildUp(Object target)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.ConfigureActionOfConfigurationExpression">
            <summary>Sets the stub of IContainer.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.CreateChildContainer">
            <summary>Sets the stub of IContainer.CreateChildContainer()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#DisposalLock">
            <summary>Sets the stub of IContainer.get_DisposalLock()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.DisposalLockGet">
            <summary>Sets the stub of IContainer.get_DisposalLock()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.DisposalLockSetDisposalLock">
            <summary>Sets the stub of IContainer.set_DisposalLock(DisposalLock value)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.EjectAllInstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of EjectAllInstancesOf()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.ForGenericTypeType">
            <summary>Sets the stub of IContainer.ForGenericType(Type templateType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.ForObjectObject">
            <summary>Sets the stub of IContainer.ForObject(Object subject)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetAllInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetAllInstancesOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetAllInstances(ExplicitArguments args)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetAllInstancesType">
            <summary>Sets the stub of IContainer.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetAllInstancesTypeExplicitArguments">
            <summary>Sets the stub of IContainer.GetAllInstances(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetInstanceOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets stubs of GetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetInstanceOf1ExplicitArgumentsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,System.String,``0})">
            <summary>Sets stubs of GetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetInstanceOf1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.Instance,``0})">
            <summary>Sets stubs of GetInstance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetInstance(String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetInstanceType">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetInstanceTypeExplicitArguments">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetInstanceTypeExplicitArgumentsString">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetInstanceTypeInstance">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetInstanceTypeString">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetNestedContainer">
            <summary>Sets the stub of IContainer.GetNestedContainer()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetNestedContainerString">
            <summary>Sets the stub of IContainer.GetNestedContainer(String profileName)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.GetProfileString">
            <summary>Sets the stub of IContainer.GetProfile(String profileName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.InjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets stubs of Inject(!!0 instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.InjectTypeObject">
            <summary>Sets the stub of IContainer.Inject(Type pluginType, Object instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Model">
            <summary>Sets the stub of IContainer.get_Model()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.ModelGet">
            <summary>Sets the stub of IContainer.get_Model()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Name">
            <summary>Sets the stub of IContainer.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.NameGet">
            <summary>Sets the stub of IContainer.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.NameSetString">
            <summary>Sets the stub of IContainer.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#ProfileName">
            <summary>Sets the stub of IContainer.get_ProfileName()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.ProfileNameGet">
            <summary>Sets the stub of IContainer.get_ProfileName()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.ReleaseObject">
            <summary>Sets the stub of IContainer.Release(Object object)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Role">
            <summary>Sets the stub of IContainer.get_Role()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.RoleGet">
            <summary>Sets the stub of IContainer.get_Role()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#AssertConfigurationIsValid">
            <summary>Sets the stub of IContainer.AssertConfigurationIsValid()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#BuildUp(System.Object)">
            <summary>Sets the stub of IContainer.BuildUp(Object target)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Configure(System.Action{StructureMap.ConfigurationExpression})">
            <summary>Sets the stub of IContainer.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#CreateChildContainer">
            <summary>Sets the stub of IContainer.CreateChildContainer()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#EjectAllInstancesOf``1">
            <summary>Sets the stub of IContainer.EjectAllInstancesOf()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#ForGenericType(System.Type)">
            <summary>Sets the stub of IContainer.ForGenericType(Type templateType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#ForObject(System.Object)">
            <summary>Sets the stub of IContainer.ForObject(Object subject)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetAllInstances(System.Type)">
            <summary>Sets the stub of IContainer.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetAllInstances(System.Type,StructureMap.Pipeline.ExplicitArguments)">
            <summary>Sets the stub of IContainer.GetAllInstances(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetAllInstances``1">
            <summary>Sets the stub of IContainer.GetAllInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetAllInstances``1(StructureMap.Pipeline.ExplicitArguments)">
            <summary>Sets the stub of IContainer.GetAllInstances(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance``1">
            <summary>Sets the stub of IContainer.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance``1(StructureMap.Pipeline.ExplicitArguments)">
            <summary>Sets the stub of IContainer.GetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance(System.Type)">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance``1(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IContainer.GetInstance(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance``1(System.String)">
            <summary>Sets the stub of IContainer.GetInstance(String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance(System.Type,StructureMap.Pipeline.ExplicitArguments)">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance``1(StructureMap.Pipeline.ExplicitArguments,System.String)">
            <summary>Sets the stub of IContainer.GetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance(System.Type,System.String)">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetInstance(System.Type,StructureMap.Pipeline.ExplicitArguments,System.String)">
            <summary>Sets the stub of IContainer.GetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetNestedContainer">
            <summary>Sets the stub of IContainer.GetNestedContainer()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetNestedContainer(System.String)">
            <summary>Sets the stub of IContainer.GetNestedContainer(String profileName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#GetProfile(System.String)">
            <summary>Sets the stub of IContainer.GetProfile(String profileName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Inject``1(``0)">
            <summary>Sets the stub of IContainer.Inject(!!0 instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Inject(System.Type,System.Object)">
            <summary>Sets the stub of IContainer.Inject(Type pluginType, Object instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#Release(System.Object)">
            <summary>Sets the stub of IContainer.Release(Object object)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance``1">
            <summary>Sets the stub of IContainer.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance(System.Type)">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance``1(System.String)">
            <summary>Sets the stub of IContainer.TryGetInstance(String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance``1(StructureMap.Pipeline.ExplicitArguments)">
            <summary>Sets the stub of IContainer.TryGetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance(System.Type,StructureMap.Pipeline.ExplicitArguments)">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance``1(StructureMap.Pipeline.ExplicitArguments,System.String)">
            <summary>Sets the stub of IContainer.TryGetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance(System.Type,System.String)">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TryGetInstance(System.Type,StructureMap.Pipeline.ExplicitArguments,System.String)">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#WhatDidIScan">
            <summary>Sets the stub of IContainer.WhatDidIScan()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#WhatDoIHave(System.Type,System.Reflection.Assembly,System.String,System.String)">
            <summary>Sets the stub of IContainer.WhatDoIHave(Type pluginType, Assembly assembly, String namespace, String typeName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#With(System.Action{StructureMap.IExplicitArgsExpression})">
            <summary>Sets the stub of IContainer.With(Action`1&lt;IExplicitArgsExpression&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#With``1(``0)">
            <summary>Sets the stub of IContainer.With(!!0 arg)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#With(System.Type,System.Object)">
            <summary>Sets the stub of IContainer.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#With(System.String)">
            <summary>Sets the stub of IContainer.With(String argName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContainer.StructureMap#IContainer#TransientTracking">
            <summary>Sets the stub of IContainer.get_TransientTracking()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.TransientTrackingGet">
            <summary>Sets the stub of IContainer.get_TransientTracking()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.TryGetInstanceOf1ExplicitArguments``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets stubs of TryGetInstance(ExplicitArguments args)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.TryGetInstanceOf1ExplicitArgumentsString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,System.String,``0})">
            <summary>Sets stubs of TryGetInstance(ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of TryGetInstance(String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.TryGetInstanceType">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.TryGetInstanceTypeExplicitArguments">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType, ExplicitArguments args)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.TryGetInstanceTypeExplicitArgumentsString">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType, ExplicitArguments args, String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.TryGetInstanceTypeString">
            <summary>Sets the stub of IContainer.TryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.WhatDidIScan">
            <summary>Sets the stub of IContainer.WhatDidIScan()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.WhatDoIHaveTypeAssemblyStringString">
            <summary>Sets the stub of IContainer.WhatDoIHave(Type pluginType, Assembly assembly, String namespace, String typeName)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.WithActionOfIExplicitArgsExpression">
            <summary>Sets the stub of IContainer.With(Action`1&lt;IExplicitArgsExpression&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContainer.WithOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.ExplicitArgsExpression})">
            <summary>Sets stubs of With(!!0 arg)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.WithString">
            <summary>Sets the stub of IContainer.With(String argName)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContainer.WithTypeObject">
            <summary>Sets the stub of IContainer.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIContext">
            <summary>Stub type of StructureMap.IContext</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.#ctor">
            <summary>Initializes a new instance of type StubIContext</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.AllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of All()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.BuildUpObject">
            <summary>Sets the stub of IContext.BuildUp(Object target)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.GetAllInstancesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetAllInstances()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.GetAllInstancesType">
            <summary>Sets the stub of IContext.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.GetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetInstance(String name)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.GetInstanceType">
            <summary>Sets the stub of IContext.GetInstance(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.GetInstanceTypeString">
            <summary>Sets the stub of IContext.GetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContext.StructureMap#IContext#ParentType">
            <summary>Sets the stub of IContext.get_ParentType()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.ParentTypeGet">
            <summary>Sets the stub of IContext.get_ParentType()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContext.StructureMap#IContext#RequestedName">
            <summary>Sets the stub of IContext.get_RequestedName()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.RequestedNameGet">
            <summary>Sets the stub of IContext.get_RequestedName()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIContext.StructureMap#IContext#RootType">
            <summary>Sets the stub of IContext.get_RootType()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.RootTypeGet">
            <summary>Sets the stub of IContext.get_RootType()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#All``1">
            <summary>Sets the stub of IContext.All()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#BuildUp(System.Object)">
            <summary>Sets the stub of IContext.BuildUp(Object target)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#GetAllInstances(System.Type)">
            <summary>Sets the stub of IContext.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#GetAllInstances``1">
            <summary>Sets the stub of IContext.GetAllInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#GetInstance``1">
            <summary>Sets the stub of IContext.GetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#GetInstance``1(System.String)">
            <summary>Sets the stub of IContext.GetInstance(String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#GetInstance(System.Type)">
            <summary>Sets the stub of IContext.GetInstance(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#GetInstance(System.Type,System.String)">
            <summary>Sets the stub of IContext.GetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#TryGetInstance(System.Type)">
            <summary>Sets the stub of IContext.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#TryGetInstance(System.Type,System.String)">
            <summary>Sets the stub of IContext.TryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#TryGetInstance``1">
            <summary>Sets the stub of IContext.TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.StructureMap#IContext#TryGetInstance``1(System.String)">
            <summary>Sets the stub of IContext.TryGetInstance(String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.TryGetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of TryGetInstance()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIContext.TryGetInstanceOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of TryGetInstance(String name)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.TryGetInstanceType">
            <summary>Sets the stub of IContext.TryGetInstance(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIContext.TryGetInstanceTypeString">
            <summary>Sets the stub of IContext.TryGetInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIExplicitArgsExpression">
            <summary>Stub type of StructureMap.IExplicitArgsExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitArgsExpression.#ctor">
            <summary>Initializes a new instance of type StubIExplicitArgsExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitArgsExpression.StructureMap#IExplicitArgsExpression#With``1(``0)">
            <summary>Sets the stub of IExplicitArgsExpression.With(!!0 arg)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitArgsExpression.StructureMap#IExplicitArgsExpression#With(System.Type,System.Object)">
            <summary>Sets the stub of IExplicitArgsExpression.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitArgsExpression.StructureMap#IExplicitArgsExpression#With(System.String)">
            <summary>Sets the stub of IExplicitArgsExpression.With(String argName)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitArgsExpression.WithOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.ExplicitArgsExpression})">
            <summary>Sets stubs of With(!!0 arg)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIExplicitArgsExpression.WithString">
            <summary>Sets the stub of IExplicitArgsExpression.With(String argName)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIExplicitArgsExpression.WithTypeObject">
            <summary>Sets the stub of IExplicitArgsExpression.With(Type pluginType, Object arg)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIExplicitProperty">
            <summary>Stub type of StructureMap.IExplicitProperty</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitProperty.#ctor">
            <summary>Initializes a new instance of type StubIExplicitProperty</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIExplicitProperty.EqualToObject">
            <summary>Sets the stub of IExplicitProperty.EqualTo(Object value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIExplicitProperty.StructureMap#IExplicitProperty#EqualTo(System.Object)">
            <summary>Sets the stub of IExplicitProperty.EqualTo(Object value)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIGraphEjector">
            <summary>Stub type of StructureMap.IGraphEjector</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.#ctor">
            <summary>Initializes a new instance of type StubIGraphEjector</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.EjectAllInstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of EjectAllInstancesOf()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIGraphEjector.RemoveCompletelyFuncOfTypeBoolean">
            <summary>Sets the stub of IGraphEjector.RemoveCompletely(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIGraphEjector.RemoveCompletelyType">
            <summary>Sets the stub of IGraphEjector.RemoveCompletely(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIGraphEjector.RemoveCompletelyTypeInstance">
            <summary>Sets the stub of IGraphEjector.RemoveCompletely(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIGraphEjector.RemoveFromLifecycleTypeInstance">
            <summary>Sets the stub of IGraphEjector.RemoveFromLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.StructureMap#IGraphEjector#EjectAllInstancesOf``1">
            <summary>Sets the stub of IGraphEjector.EjectAllInstancesOf()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.StructureMap#IGraphEjector#RemoveCompletely(System.Type)">
            <summary>Sets the stub of IGraphEjector.RemoveCompletely(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.StructureMap#IGraphEjector#RemoveCompletely(System.Func{System.Type,System.Boolean})">
            <summary>Sets the stub of IGraphEjector.RemoveCompletely(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.StructureMap#IGraphEjector#RemoveCompletely(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IGraphEjector.RemoveCompletely(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIGraphEjector.StructureMap#IGraphEjector#RemoveFromLifecycle(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IGraphEjector.RemoveFromLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIInstanceGraph">
            <summary>Stub type of StructureMap.IInstanceGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.#ctor">
            <summary>Initializes a new instance of type StubIInstanceGraph</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.DefaultLifecycleForType">
            <summary>Sets the stub of IInstanceGraph.DefaultLifecycleFor(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.EachInstanceActionOfTypeInstance">
            <summary>Sets the stub of IInstanceGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.FindInstanceTypeString">
            <summary>Sets the stub of IInstanceGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.GetAllInstances">
            <summary>Sets the stub of IInstanceGraph.GetAllInstances()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.GetAllInstancesType">
            <summary>Sets the stub of IInstanceGraph.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.GetDefaultType">
            <summary>Sets the stub of IInstanceGraph.GetDefault(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.HasDefaultForPluginTypeType">
            <summary>Sets the stub of IInstanceGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.HasInstanceTypeString">
            <summary>Sets the stub of IInstanceGraph.HasInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.ImmediateInstances">
            <summary>Sets the stub of IInstanceGraph.ImmediateInstances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#ImmediatePluginGraph">
            <summary>Sets the stub of IInstanceGraph.get_ImmediatePluginGraph()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.ImmediatePluginGraphGet">
            <summary>Sets the stub of IInstanceGraph.get_ImmediatePluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#Role">
            <summary>Sets the stub of IInstanceGraph.get_Role()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.RoleGet">
            <summary>Sets the stub of IInstanceGraph.get_Role()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#DefaultLifecycleFor(System.Type)">
            <summary>Sets the stub of IInstanceGraph.DefaultLifecycleFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#EachInstance(System.Action{System.Type,StructureMap.Pipeline.Instance})">
            <summary>Sets the stub of IInstanceGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#FindInstance(System.Type,System.String)">
            <summary>Sets the stub of IInstanceGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#GetAllInstances">
            <summary>Sets the stub of IInstanceGraph.GetAllInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#GetAllInstances(System.Type)">
            <summary>Sets the stub of IInstanceGraph.GetAllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#GetDefault(System.Type)">
            <summary>Sets the stub of IInstanceGraph.GetDefault(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#HasDefaultForPluginType(System.Type)">
            <summary>Sets the stub of IInstanceGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#HasInstance(System.Type,System.String)">
            <summary>Sets the stub of IInstanceGraph.HasInstance(Type pluginType, String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#ImmediateInstances">
            <summary>Sets the stub of IInstanceGraph.ImmediateInstances()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstanceGraph.StructureMap#IInstanceGraph#UniqueFamilies">
            <summary>Sets the stub of IInstanceGraph.UniqueFamilies()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstanceGraph.UniqueFamilies">
            <summary>Sets the stub of IInstanceGraph.UniqueFamilies()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIInstancePolicy">
            <summary>Stub type of StructureMap.IInstancePolicy</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstancePolicy.#ctor">
            <summary>Initializes a new instance of type StubIInstancePolicy</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIInstancePolicy.ApplyTypeInstance">
            <summary>Sets the stub of IInstancePolicy.Apply(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIInstancePolicy.StructureMap#IInstancePolicy#Apply(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IInstancePolicy.Apply(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubILifecycleContext">
            <summary>Stub type of StructureMap.ILifecycleContext</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubILifecycleContext.#ctor">
            <summary>Initializes a new instance of type StubILifecycleContext</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubILifecycleContext.StructureMap#ILifecycleContext#ContainerCache">
            <summary>Sets the stub of ILifecycleContext.get_ContainerCache()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubILifecycleContext.ContainerCacheGet">
            <summary>Sets the stub of ILifecycleContext.get_ContainerCache()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubILifecycleContext.DetermineLifecycleTypeInstance">
            <summary>Sets the stub of ILifecycleContext.DetermineLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubILifecycleContext.StructureMap#ILifecycleContext#Singletons">
            <summary>Sets the stub of ILifecycleContext.get_Singletons()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubILifecycleContext.SingletonsGet">
            <summary>Sets the stub of ILifecycleContext.get_Singletons()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubILifecycleContext.StructureMap#ILifecycleContext#DetermineLifecycle(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of ILifecycleContext.DetermineLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubILifecycleContext.StructureMap#ILifecycleContext#Transients">
            <summary>Sets the stub of ILifecycleContext.get_Transients()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubILifecycleContext.TransientsGet">
            <summary>Sets the stub of ILifecycleContext.get_Transients()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIPipelineGraph">
            <summary>Stub type of StructureMap.IPipelineGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.#ctor">
            <summary>Initializes a new instance of type StubIPipelineGraph</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ConfigureActionOfConfigurationExpression">
            <summary>Sets the stub of IPipelineGraph.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#ILifecycleContext#ContainerCache">
            <summary>Sets the stub of ILifecycleContext.get_ContainerCache()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ContainerCacheGet">
            <summary>Sets the stub of ILifecycleContext.get_ContainerCache()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.DetermineLifecycleTypeInstance">
            <summary>Sets the stub of ILifecycleContext.DetermineLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Ejector">
            <summary>Sets the stub of IPipelineGraph.get_Ejector()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.EjectorGet">
            <summary>Sets the stub of IPipelineGraph.get_Ejector()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Instances">
            <summary>Sets the stub of IPipelineGraph.get_Instances()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.InstancesGet">
            <summary>Sets the stub of IPipelineGraph.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Policies">
            <summary>Sets the stub of IPipelineGraph.get_Policies()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.PoliciesGet">
            <summary>Sets the stub of IPipelineGraph.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Profile">
            <summary>Sets the stub of IPipelineGraph.get_Profile()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ProfileGet">
            <summary>Sets the stub of IPipelineGraph.get_Profile()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Profiles">
            <summary>Sets the stub of IPipelineGraph.get_Profiles()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ProfilesGet">
            <summary>Sets the stub of IPipelineGraph.get_Profiles()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.RegisterContainerIContainer">
            <summary>Sets the stub of IPipelineGraph.RegisterContainer(IContainer container)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Role">
            <summary>Sets the stub of IPipelineGraph.get_Role()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.RoleGet">
            <summary>Sets the stub of IPipelineGraph.get_Role()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.Root">
            <summary>Sets the stub of IPipelineGraph.Root()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#ILifecycleContext#Singletons">
            <summary>Sets the stub of ILifecycleContext.get_Singletons()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.SingletonsGet">
            <summary>Sets the stub of ILifecycleContext.get_Singletons()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#ILifecycleContext#DetermineLifecycle(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of ILifecycleContext.DetermineLifecycle(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Configure(System.Action{StructureMap.ConfigurationExpression})">
            <summary>Sets the stub of IPipelineGraph.Configure(Action`1&lt;ConfigurationExpression&gt; configure)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#RegisterContainer(StructureMap.IContainer)">
            <summary>Sets the stub of IPipelineGraph.RegisterContainer(IContainer container)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#Root">
            <summary>Sets the stub of IPipelineGraph.Root()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#ToModel">
            <summary>Sets the stub of IPipelineGraph.ToModel()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#ToNestedGraph">
            <summary>Sets the stub of IPipelineGraph.ToNestedGraph()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#TrackDisposable(System.IDisposable)">
            <summary>Sets the stub of IPipelineGraph.TrackDisposable(IDisposable disposable)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.StructureMap#IPipelineGraph#ValidateValidNestedScoping">
            <summary>Sets the stub of IPipelineGraph.ValidateValidNestedScoping()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIPipelineGraph.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ToModel">
            <summary>Sets the stub of IPipelineGraph.ToModel()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ToNestedGraph">
            <summary>Sets the stub of IPipelineGraph.ToNestedGraph()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.TrackDisposableIDisposable">
            <summary>Sets the stub of IPipelineGraph.TrackDisposable(IDisposable disposable)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIPipelineGraph.StructureMap#ILifecycleContext#Transients">
            <summary>Sets the stub of ILifecycleContext.get_Transients()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.TransientsGet">
            <summary>Sets the stub of ILifecycleContext.get_Transients()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIPipelineGraph.ValidateValidNestedScoping">
            <summary>Sets the stub of IPipelineGraph.ValidateValidNestedScoping()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIProfileRegistry">
            <summary>Stub type of StructureMap.IProfileRegistry</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.#ctor">
            <summary>Initializes a new instance of type StubIProfileRegistry</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.ForOf1ILifecycle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ILifecycle,StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets stubs of For(ILifecycle lifecycle)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIProfileRegistry.ForTypeILifecycle">
            <summary>Sets the stub of IProfileRegistry.For(Type pluginType, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.ForwardOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of Forward()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.RedirectOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.LambdaInstance{``0,``0}})">
            <summary>Sets stubs of Redirect()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.StructureMap#IProfileRegistry#For(System.Type,StructureMap.Pipeline.ILifecycle)">
            <summary>Sets the stub of IProfileRegistry.For(Type pluginType, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.StructureMap#IProfileRegistry#For``1(StructureMap.Pipeline.ILifecycle)">
            <summary>Sets the stub of IProfileRegistry.For(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.StructureMap#IProfileRegistry#Forward``2">
            <summary>Sets the stub of IProfileRegistry.Forward()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIProfileRegistry.StructureMap#IProfileRegistry#Redirect``2">
            <summary>Sets the stub of IProfileRegistry.Redirect()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubIRegistry">
            <summary>Stub type of StructureMap.IRegistry</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.#ctor">
            <summary>Initializes a new instance of type StubIRegistry</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.AddTypeTypeType">
            <summary>Sets the stub of IRegistry.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.AddTypeTypeTypeString">
            <summary>Sets the stub of IRegistry.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.ConfigureActionOfPluginGraph">
            <summary>Sets the stub of IRegistry.Configure(Action`1&lt;PluginGraph&gt; configure)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.ForConcreteTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Registry.BuildWithExpression{``0}})">
            <summary>Sets stubs of ForConcreteType()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.ForOf1ILifecycle``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ILifecycle,StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets stubs of For(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.ForSingletonOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Configuration.DSL.Expressions.CreatePluginFamilyExpression{``0}})">
            <summary>Sets stubs of ForSingletonOf()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.ForSingletonOfType">
            <summary>Sets the stub of IRegistry.ForSingletonOf(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.ForTypeILifecycle">
            <summary>Sets the stub of IProfileRegistry.For(Type pluginType, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.ForwardOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of Forward()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.IncludeRegistryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of IncludeRegistry()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.IncludeRegistryRegistry">
            <summary>Sets the stub of IRegistry.IncludeRegistry(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#Policies">
            <summary>Sets the stub of IRegistry.get_Policies()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.PoliciesGet">
            <summary>Sets the stub of IRegistry.get_Policies()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.ProfileStringActionOfIProfileRegistry">
            <summary>Sets the stub of IRegistry.Profile(String profileName, Action`1&lt;IProfileRegistry&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.RedirectOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.LambdaInstance{``0,``0}})">
            <summary>Sets stubs of Redirect()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubIRegistry.ScanActionOfIAssemblyScanner">
            <summary>Sets the stub of IRegistry.Scan(Action`1&lt;IAssemblyScanner&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IProfileRegistry#For(System.Type,StructureMap.Pipeline.ILifecycle)">
            <summary>Sets the stub of IProfileRegistry.For(Type pluginType, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IProfileRegistry#For``1(StructureMap.Pipeline.ILifecycle)">
            <summary>Sets the stub of IProfileRegistry.For(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IProfileRegistry#Forward``2">
            <summary>Sets the stub of IProfileRegistry.Forward()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IProfileRegistry#Redirect``2">
            <summary>Sets the stub of IProfileRegistry.Redirect()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#AddType(System.Type,System.Type)">
            <summary>Sets the stub of IRegistry.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#AddType(System.Type,System.Type,System.String)">
            <summary>Sets the stub of IRegistry.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#Configure(System.Action{StructureMap.Graph.PluginGraph})">
            <summary>Sets the stub of IRegistry.Configure(Action`1&lt;PluginGraph&gt; configure)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#ForConcreteType``1">
            <summary>Sets the stub of IRegistry.ForConcreteType()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#ForSingletonOf(System.Type)">
            <summary>Sets the stub of IRegistry.ForSingletonOf(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#ForSingletonOf``1">
            <summary>Sets the stub of IRegistry.ForSingletonOf()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#IncludeRegistry``1">
            <summary>Sets the stub of IRegistry.IncludeRegistry()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#IncludeRegistry(StructureMap.Registry)">
            <summary>Sets the stub of IRegistry.IncludeRegistry(Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#Profile(System.String,System.Action{StructureMap.IProfileRegistry})">
            <summary>Sets the stub of IRegistry.Profile(String profileName, Action`1&lt;IProfileRegistry&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubIRegistry.StructureMap#IRegistry#Scan(System.Action{StructureMap.Graph.IAssemblyScanner})">
            <summary>Sets the stub of IRegistry.Scan(Action`1&lt;IAssemblyScanner&gt; action)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubISessionCache">
            <summary>Stub type of StructureMap.ISessionCache</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubISessionCache.#ctor">
            <summary>Initializes a new instance of type StubISessionCache</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubISessionCache.AllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of All()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubISessionCache.GetDefaultTypeIPipelineGraph">
            <summary>Sets the stub of ISessionCache.GetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubISessionCache.GetObjectTypeInstanceILifecycle">
            <summary>Sets the stub of ISessionCache.GetObject(Type pluginType, Instance instance, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubISessionCache.StructureMap#ISessionCache#All``1">
            <summary>Sets the stub of ISessionCache.All()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubISessionCache.StructureMap#ISessionCache#GetDefault(System.Type,StructureMap.IPipelineGraph)">
            <summary>Sets the stub of ISessionCache.GetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubISessionCache.StructureMap#ISessionCache#GetObject(System.Type,StructureMap.Pipeline.Instance,StructureMap.Pipeline.ILifecycle)">
            <summary>Sets the stub of ISessionCache.GetObject(Type pluginType, Instance instance, ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubISessionCache.StructureMap#ISessionCache#TryGetDefault(System.Type,StructureMap.IPipelineGraph)">
            <summary>Sets the stub of ISessionCache.TryGetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubISessionCache.TryGetDefaultTypeIPipelineGraph">
            <summary>Sets the stub of ISessionCache.TryGetDefault(Type pluginType, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubOpenGenericTypeListSpecificationExpression">
            <summary>Stub type of StructureMap.OpenGenericTypeListSpecificationExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubOpenGenericTypeListSpecificationExpression.#ctor">
            <summary>Initializes a new instance of type StubOpenGenericTypeListSpecificationExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubOpenGenericTypeListSpecificationExpression.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0}})">
            <summary>Sets stubs of As()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubOpenGenericTypeListSpecificationExpression.StructureMap#OpenGenericTypeListSpecificationExpression#As``1">
            <summary>Sets the stub of OpenGenericTypeListSpecificationExpression.As()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubOpenGenericTypeSpecificationExpression">
            <summary>Stub type of StructureMap.OpenGenericTypeSpecificationExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubOpenGenericTypeSpecificationExpression.#ctor">
            <summary>Initializes a new instance of type StubOpenGenericTypeSpecificationExpression</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubOpenGenericTypeSpecificationExpression.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of As()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubOpenGenericTypeSpecificationExpression.StructureMap#OpenGenericTypeSpecificationExpression#As``1">
            <summary>Sets the stub of OpenGenericTypeSpecificationExpression.As()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubPipelineGraph">
            <summary>Stub type of StructureMap.PipelineGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPipelineGraph.#ctor(StructureMap.Graph.PluginGraph,StructureMap.IInstanceGraph,StructureMap.IPipelineGraph,StructureMap.Pipeline.IObjectCache,StructureMap.Pipeline.ITransientTracking)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPipelineGraph.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPipelineGraph.InitializeStub">
            <summary>Initializes a new instance of type StubPipelineGraph</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPipelineGraph.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPipelineGraph.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubPluginGraphBuilder">
            <summary>Stub type of StructureMap.PluginGraphBuilder</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPluginGraphBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPluginGraphBuilder.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPluginGraphBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPluginGraphBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubPluginGraphBuilder</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPluginGraphBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPluginGraphBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubPolicies">
            <summary>Stub type of StructureMap.Policies</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPolicies.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPolicies.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubPolicies.InitializeStub">
            <summary>Initializes a new instance of type StubPolicies</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPolicies.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubPolicies.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubProfiles">
            <summary>Stub type of StructureMap.Profiles</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubProfiles.#ctor(StructureMap.Graph.PluginGraph,StructureMap.IPipelineGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubProfiles.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubProfiles.InitializeStub">
            <summary>Initializes a new instance of type StubProfiles</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubProfiles.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubProfiles.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubRegistry">
            <summary>Stub type of StructureMap.Registry</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRegistry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRegistry.AddType(System.Type,System.Type,System.String)">
            <summary>Sets the stub of Registry.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubRegistry.AddTypeTypeTypeString">
            <summary>Sets the stub of Registry.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubRegistry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRegistry.Equals(System.Object)">
            <summary>Sets the stub of Registry.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubRegistry.EqualsObject">
            <summary>Sets the stub of Registry.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRegistry.GetHashCode">
            <summary>Sets the stub of Registry.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubRegistry.GetHashCode01">
            <summary>Sets the stub of Registry.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRegistry.InitializeStub">
            <summary>Initializes a new instance of type StubRegistry</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubRegistry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubRegistry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubRootInstanceGraph">
            <summary>Stub type of StructureMap.RootInstanceGraph</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRootInstanceGraph.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubRootInstanceGraph.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubRootInstanceGraph.InitializeStub">
            <summary>Initializes a new instance of type StubRootInstanceGraph</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubRootInstanceGraph.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubRootInstanceGraph.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubSessionCache">
            <summary>Stub type of StructureMap.SessionCache</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSessionCache.#ctor(StructureMap.IBuildSession)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSessionCache.#ctor(StructureMap.IBuildSession,StructureMap.Pipeline.ExplicitArguments)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSessionCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSessionCache.InitializeStub">
            <summary>Initializes a new instance of type StubSessionCache</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSessionCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSessionCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubSingletonAttribute">
            <summary>Stub type of StructureMap.SingletonAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.Alter(StructureMap.Graph.PluginFamily)">
            <summary>Sets the stub of SingletonAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Sets the stub of SingletonAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance,System.Reflection.ParameterInfo)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance,System.Reflection.PropertyInfo)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.AlterIConfiguredInstance">
            <summary>Sets the stub of SingletonAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.AlterIConfiguredInstanceParameterInfo">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.AlterIConfiguredInstancePropertyInfo">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.AlterPluginFamily">
            <summary>Sets the stub of SingletonAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSingletonAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSingletonAttribute</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSingletonAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSingletonAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubSingletonAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubSingletonAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubSingletonAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubStructureMapAttribute">
            <summary>Stub type of StructureMap.StructureMapAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.Alter(StructureMap.Graph.PluginFamily)">
            <summary>Sets the stub of StructureMapAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance,System.Reflection.ParameterInfo)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.Alter(StructureMap.Pipeline.IConfiguredInstance,System.Reflection.PropertyInfo)">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.AlterIConfiguredInstance">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.AlterIConfiguredInstanceParameterInfo">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, ParameterInfo parameter)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.AlterIConfiguredInstancePropertyInfo">
            <summary>Sets the stub of StructureMapAttribute.Alter(IConfiguredInstance instance, PropertyInfo property)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.AlterPluginFamily">
            <summary>Sets the stub of StructureMapAttribute.Alter(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubStructureMapAttribute</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubStructureMapBuildPlanException">
            <summary>Stub type of StructureMap.StructureMapBuildPlanException</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubStructureMapBuildPlanException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubStructureMapBuildPlanException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.InitializeStub">
            <summary>Initializes a new instance of type StubStructureMapBuildPlanException</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.Message">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.MessageGet">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapBuildPlanException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapBuildPlanException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapBuildPlanException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubStructureMapConfigurationException">
            <summary>Stub type of StructureMap.StructureMapConfigurationException</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.#ctor(System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubStructureMapConfigurationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubStructureMapConfigurationException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.InitializeStub">
            <summary>Initializes a new instance of type StubStructureMapConfigurationException</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.Message">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.MessageGet">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapConfigurationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapConfigurationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapConfigurationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubStructureMapException">
            <summary>Stub type of StructureMap.StructureMapException</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubStructureMapException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubStructureMapException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.InitializeStub">
            <summary>Initializes a new instance of type StubStructureMapException</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.Message">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.MessageGet">
            <summary>Sets the stub of StructureMapException.get_Message()</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubStructureMapException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubStructureMapException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubStructureMapException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:StructureMap.Fakes.StubValidationMethodAttribute">
            <summary>Stub type of StructureMap.ValidationMethodAttribute</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubValidationMethodAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubValidationMethodAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubValidationMethodAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubValidationMethodAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubValidationMethodAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubValidationMethodAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubValidationMethodAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValidationMethodAttribute</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubValidationMethodAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubValidationMethodAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubValidationMethodAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubValidationMethodAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:StructureMap.Fakes.StubValidationMethodAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubValidationMethodAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Fakes.StubValidationMethodAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:StructureMap.Fakes.StubValidationMethodAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimAllPossibleInstance">
            <summary>Shim type of StructureMap.Graph.AllPossibleInstance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAllPossibleInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAllPossibleInstance.#ctor(StructureMap.Graph.AllPossibleInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimAllPossibleInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.AllInstances.DescriptionGet">
            <summary>Sets the shim of AllPossibleInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of AllPossibleInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of AllPossibleInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAllPossibleInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAllPossibleInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAllPossibleInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.ConstructorType">
            <summary>Sets the shim of AllPossibleInstance.AllPossibleInstance(Type returnedType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.DescriptionGet">
            <summary>Sets the shim of AllPossibleInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.ReturnedTypeGet">
            <summary>Sets the shim of AllPossibleInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAllPossibleInstance.ToDependencySourceType">
            <summary>Sets the shim of AllPossibleInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimAssemblyFinder">
            <summary>Shim type of StructureMap.Graph.AssemblyFinder</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyFinder.FindAssembliesActionOfStringBoolean">
            <summary>Sets the shim of AssemblyFinder.FindAssemblies(Action`1&lt;String&gt; logFailure, Boolean includeExeFiles)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyFinder.FindAssembliesFuncOfAssemblyBooleanActionOfStringBoolean">
            <summary>Sets the shim of AssemblyFinder.FindAssemblies(Func`2&lt;Assembly,Boolean&gt; filter, Action`1&lt;String&gt; onDirectoryFound, Boolean includeExeFiles)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyFinder.FindAssembliesStringActionOfStringBoolean">
            <summary>Sets the shim of AssemblyFinder.FindAssemblies(String assemblyPath, Action`1&lt;String&gt; logFailure, Boolean includeExeFiles)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimAssemblyScanner">
            <summary>Shim type of StructureMap.Graph.AssemblyScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.#ctor(StructureMap.Graph.AssemblyScanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AddAllTypesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Graph.FindAllTypesFilter})">
            <summary>Sets the shim of AssemblyScanner.AddAllTypesOf()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AddAllTypesOfType">
            <summary>Sets the shim of AssemblyScanner.AddAllTypesOf(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AddAllTypesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Graph.AssemblyScanner,StructureMap.Graph.FindAllTypesFilter})">
            <summary>Sets the shim of AssemblyScanner.AddAllTypesOf()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AddAllTypesOfType">
            <summary>Sets the shim of AssemblyScanner.AddAllTypesOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesAndExecutablesFromApplicationBaseDirectoryFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesAndExecutablesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesAndExecutablesFromPathString">
            <summary>Sets the shim of AssemblyScanner.AssembliesAndExecutablesFromPath(String path)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesAndExecutablesFromPathStringFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesAndExecutablesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesFromApplicationBaseDirectory">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromApplicationBaseDirectory()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesFromApplicationBaseDirectoryFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesFromPathString">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromPath(String path)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssembliesFromPathStringFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssemblyAssembly">
            <summary>Sets the shim of AssemblyScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssemblyContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Graph.AssemblyScanner})">
            <summary>Sets the shim of AssemblyScanner.AssemblyContainingType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssemblyContainingTypeType">
            <summary>Sets the shim of AssemblyScanner.AssemblyContainingType(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.AssemblyString">
            <summary>Sets the shim of AssemblyScanner.Assembly(String assemblyName)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ConnectImplementationsToTypesClosingType">
            <summary>Sets the shim of AssemblyScanner.ConnectImplementationsToTypesClosing(Type openGenericType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ContainsString">
            <summary>Sets the shim of AssemblyScanner.Contains(String assemblyName)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ConventionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Graph.AssemblyScanner})">
            <summary>Sets the shim of AssemblyScanner.Convention()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ConventionsGet">
            <summary>Sets the shim of AssemblyScanner.get_Conventions()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.CountGet">
            <summary>Sets the shim of AssemblyScanner.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.DescribeStringWriter">
            <summary>Sets the shim of AssemblyScanner.Describe(StringWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.DescriptionGet">
            <summary>Sets the shim of AssemblyScanner.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.DescriptionSetString">
            <summary>Sets the shim of AssemblyScanner.set_Description(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ExcludeFuncOfTypeBoolean">
            <summary>Sets the shim of AssemblyScanner.Exclude(Func`2&lt;Type,Boolean&gt; exclude)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ExcludeNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Graph.AssemblyScanner})">
            <summary>Sets the shim of AssemblyScanner.ExcludeNamespaceContainingType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ExcludeNamespaceString">
            <summary>Sets the shim of AssemblyScanner.ExcludeNamespace(String nameSpace)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ExcludeTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Graph.AssemblyScanner})">
            <summary>Sets the shim of AssemblyScanner.ExcludeType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.HasAssemblies">
            <summary>Sets the shim of AssemblyScanner.HasAssemblies()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.IncludeFuncOfTypeBoolean">
            <summary>Sets the shim of AssemblyScanner.Include(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.IncludeNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Graph.AssemblyScanner})">
            <summary>Sets the shim of AssemblyScanner.IncludeNamespaceContainingType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.IncludeNamespaceString">
            <summary>Sets the shim of AssemblyScanner.IncludeNamespace(String nameSpace)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.LookForRegistries">
            <summary>Sets the shim of AssemblyScanner.LookForRegistries()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.RegisterConcreteTypesAgainstTheFirstInterface">
            <summary>Sets the shim of AssemblyScanner.RegisterConcreteTypesAgainstTheFirstInterface()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.ScanForTypes">
            <summary>Sets the shim of AssemblyScanner.ScanForTypes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.SingleImplementationsOfInterface">
            <summary>Sets the shim of AssemblyScanner.SingleImplementationsOfInterface()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.TheCallingAssembly">
            <summary>Sets the shim of AssemblyScanner.TheCallingAssembly()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.WithDefaultConventions">
            <summary>Sets the shim of AssemblyScanner.WithDefaultConventions()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances.WithIRegistrationConvention">
            <summary>Sets the shim of AssemblyScanner.With(IRegistrationConvention convention)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances._ScanForTypesb__33_0Type">
            <summary>Sets the shim of AssemblyScanner.&lt;ScanForTypes&gt;b__33_0(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AllInstances._ScanForTypesb__33_1TaskOfTypeSet">
            <summary>Sets the shim of AssemblyScanner.&lt;ScanForTypes&gt;b__33_1(Task`1&lt;TypeSet&gt; t)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesAndExecutablesFromApplicationBaseDirectoryFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesAndExecutablesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesAndExecutablesFromPathString">
            <summary>Sets the shim of AssemblyScanner.AssembliesAndExecutablesFromPath(String path)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesAndExecutablesFromPathStringFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesAndExecutablesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesFromApplicationBaseDirectory">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromApplicationBaseDirectory()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesFromApplicationBaseDirectoryFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesFromPathString">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromPath(String path)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssembliesFromPathStringFuncOfAssemblyBoolean">
            <summary>Sets the shim of AssemblyScanner.AssembliesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssemblyAssembly">
            <summary>Sets the shim of AssemblyScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssemblyContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AssemblyScanner.AssemblyContainingType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssemblyContainingTypeType">
            <summary>Sets the shim of AssemblyScanner.AssemblyContainingType(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.AssemblyString">
            <summary>Sets the shim of AssemblyScanner.Assembly(String assemblyName)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.Bind(StructureMap.Graph.IAssemblyScanner)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.ConnectImplementationsToTypesClosingType">
            <summary>Sets the shim of AssemblyScanner.ConnectImplementationsToTypesClosing(Type openGenericType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.Constructor">
            <summary>Sets the shim of AssemblyScanner.AssemblyScanner()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.ContainsString">
            <summary>Sets the shim of AssemblyScanner.Contains(String assemblyName)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.ConventionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AssemblyScanner.Convention()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.ConventionsGet">
            <summary>Sets the shim of AssemblyScanner.get_Conventions()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.CountGet">
            <summary>Sets the shim of AssemblyScanner.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.DescribeStringWriter">
            <summary>Sets the shim of AssemblyScanner.Describe(StringWriter writer)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.DescriptionGet">
            <summary>Sets the shim of AssemblyScanner.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.DescriptionSetString">
            <summary>Sets the shim of AssemblyScanner.set_Description(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.ExcludeFuncOfTypeBoolean">
            <summary>Sets the shim of AssemblyScanner.Exclude(Func`2&lt;Type,Boolean&gt; exclude)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.ExcludeNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AssemblyScanner.ExcludeNamespaceContainingType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.ExcludeNamespaceString">
            <summary>Sets the shim of AssemblyScanner.ExcludeNamespace(String nameSpace)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.ExcludeTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AssemblyScanner.ExcludeType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.HasAssemblies">
            <summary>Sets the shim of AssemblyScanner.HasAssemblies()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.IncludeFuncOfTypeBoolean">
            <summary>Sets the shim of AssemblyScanner.Include(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimAssemblyScanner.IncludeNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AssemblyScanner.IncludeNamespaceContainingType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.IncludeNamespaceString">
            <summary>Sets the shim of AssemblyScanner.IncludeNamespace(String nameSpace)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.LookForRegistries">
            <summary>Sets the shim of AssemblyScanner.LookForRegistries()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.RegisterConcreteTypesAgainstTheFirstInterface">
            <summary>Sets the shim of AssemblyScanner.RegisterConcreteTypesAgainstTheFirstInterface()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.ScanForTypes">
            <summary>Sets the shim of AssemblyScanner.ScanForTypes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.SingleImplementationsOfInterface">
            <summary>Sets the shim of AssemblyScanner.SingleImplementationsOfInterface()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.TheCallingAssembly">
            <summary>Sets the shim of AssemblyScanner.TheCallingAssembly()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.WithDefaultConventions">
            <summary>Sets the shim of AssemblyScanner.WithDefaultConventions()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.WithIRegistrationConvention">
            <summary>Sets the shim of AssemblyScanner.With(IRegistrationConvention convention)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner._ScanForTypesb__33_0Type">
            <summary>Sets the shim of AssemblyScanner.&lt;ScanForTypes&gt;b__33_0(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner._ScanForTypesb__33_1TaskOfTypeSet">
            <summary>Sets the shim of AssemblyScanner.&lt;ScanForTypes&gt;b__33_1(Task`1&lt;TypeSet&gt; t)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimAssemblyScanner.findTheCallingAssembly">
            <summary>Sets the shim of AssemblyScanner.findTheCallingAssembly()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy">
            <summary>Shim type of StructureMap.Graph.CloseGenericFamilyPolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.#ctor(StructureMap.Graph.CloseGenericFamilyPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.AllInstances.AppliesToHasFamilyChecksGet">
            <summary>Sets the shim of CloseGenericFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.AllInstances.BuildType">
            <summary>Sets the shim of CloseGenericFamilyPolicy.Build(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.AllInstances.MatchesType">
            <summary>Sets the shim of CloseGenericFamilyPolicy.Matches(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.AllInstances.tryToConnectType">
            <summary>Sets the shim of CloseGenericFamilyPolicy.tryToConnect(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.AppliesToHasFamilyChecksGet">
            <summary>Sets the shim of CloseGenericFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.Bind(StructureMap.Graph.IFamilyPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.BuildType">
            <summary>Sets the shim of CloseGenericFamilyPolicy.Build(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.ConstructorPluginGraph">
            <summary>Sets the shim of CloseGenericFamilyPolicy.CloseGenericFamilyPolicy(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.MatchesType">
            <summary>Sets the shim of CloseGenericFamilyPolicy.Matches(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCloseGenericFamilyPolicy.tryToConnectType">
            <summary>Sets the shim of CloseGenericFamilyPolicy.tryToConnect(Type type)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimCompositeFilter`1">
            <summary>Shim type of StructureMap.Graph.CompositeFilter`1</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositeFilter`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositeFilter`1.#ctor(StructureMap.Graph.CompositeFilter{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimCompositeFilter`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.AllInstances.ExcludesGet">
            <summary>Sets the shim of CompositeFilter`1.get_Excludes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.AllInstances.ExcludesSetCompositePredicateOfT0">
            <summary>Sets the shim of CompositeFilter`1.set_Excludes(CompositePredicate`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.AllInstances.IncludesGet">
            <summary>Sets the shim of CompositeFilter`1.get_Includes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.AllInstances.IncludesSetCompositePredicateOfT0">
            <summary>Sets the shim of CompositeFilter`1.set_Includes(CompositePredicate`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.AllInstances.MatchesT0">
            <summary>Sets the shim of CompositeFilter`1.Matches(!0 target)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositeFilter`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositeFilter`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.Constructor">
            <summary>Sets the shim of CompositeFilter`1.CompositeFilter`1()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.ExcludesGet">
            <summary>Sets the shim of CompositeFilter`1.get_Excludes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.ExcludesSetCompositePredicateOfT0">
            <summary>Sets the shim of CompositeFilter`1.set_Excludes(CompositePredicate`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.IncludesGet">
            <summary>Sets the shim of CompositeFilter`1.get_Includes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.IncludesSetCompositePredicateOfT0">
            <summary>Sets the shim of CompositeFilter`1.set_Includes(CompositePredicate`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositeFilter`1.MatchesT0">
            <summary>Sets the shim of CompositeFilter`1.Matches(!0 target)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimCompositePredicate`1">
            <summary>Shim type of StructureMap.Graph.CompositePredicate`1</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositePredicate`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositePredicate`1.#ctor(StructureMap.Graph.CompositePredicate{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AddFuncOfT0Boolean">
            <summary>Sets the shim of CompositePredicate`1.Add(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AdditionOpCompositePredicateOfT0FuncOfT0Boolean">
            <summary>Sets the shim of CompositePredicate`1.op_Addition(CompositePredicate`1&lt;!0&gt; invokes, Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances.AddFuncOfT0Boolean">
            <summary>Sets the shim of CompositePredicate`1.Add(Func`2&lt;!0,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances.DoesNotMatcheAnyT0">
            <summary>Sets the shim of CompositePredicate`1.DoesNotMatcheAny(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances.MatchesAllT0">
            <summary>Sets the shim of CompositePredicate`1.MatchesAll(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances.MatchesAnyT0">
            <summary>Sets the shim of CompositePredicate`1.MatchesAny(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances.MatchesNoneT0">
            <summary>Sets the shim of CompositePredicate`1.MatchesNone(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances._Addb__4_0T0">
            <summary>Sets the shim of CompositePredicate`1.&lt;Add&gt;b__4_0(!0 x)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances._Addb__4_2T0">
            <summary>Sets the shim of CompositePredicate`1.&lt;Add&gt;b__4_2(!0 x)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.AllInstances._Addb__4_4T0">
            <summary>Sets the shim of CompositePredicate`1.&lt;Add&gt;b__4_4(!0 x)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositePredicate`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimCompositePredicate`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.Constructor">
            <summary>Sets the shim of CompositePredicate`1.CompositePredicate`1()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.DoesNotMatcheAnyT0">
            <summary>Sets the shim of CompositePredicate`1.DoesNotMatcheAny(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.MatchesAllT0">
            <summary>Sets the shim of CompositePredicate`1.MatchesAll(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.MatchesAnyT0">
            <summary>Sets the shim of CompositePredicate`1.MatchesAny(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1.MatchesNoneT0">
            <summary>Sets the shim of CompositePredicate`1.MatchesNone(!0 target)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1._Addb__4_0T0">
            <summary>Sets the shim of CompositePredicate`1.&lt;Add&gt;b__4_0(!0 x)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1._Addb__4_2T0">
            <summary>Sets the shim of CompositePredicate`1.&lt;Add&gt;b__4_2(!0 x)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimCompositePredicate`1._Addb__4_4T0">
            <summary>Sets the shim of CompositePredicate`1.&lt;Add&gt;b__4_4(!0 x)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention">
            <summary>Shim type of StructureMap.Graph.ConfigurableRegistrationConvention</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.#ctor(StructureMap.Graph.ConfigurableRegistrationConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.AllInstances.SetFamilyConfigurationActionActionOfGenericFamilyExpression">
            <summary>Sets the shim of ConfigurableRegistrationConvention.SetFamilyConfigurationAction(Action`1&lt;GenericFamilyExpression&gt; configureFamily)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.Constructor">
            <summary>Sets the shim of ConfigurableRegistrationConvention.ConfigurableRegistrationConvention()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimConfigurableRegistrationConvention.SetFamilyConfigurationActionActionOfGenericFamilyExpression">
            <summary>Sets the shim of ConfigurableRegistrationConvention.SetFamilyConfigurationAction(Action`1&lt;GenericFamilyExpression&gt; configureFamily)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimDefaultConventionScanner">
            <summary>Shim type of StructureMap.Graph.DefaultConventionScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.#ctor(StructureMap.Graph.DefaultConventionScanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.AllInstances.FindPluginTypeType">
            <summary>Sets the shim of DefaultConventionScanner.FindPluginType(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.AllInstances.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of DefaultConventionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.AllInstances.ToString01">
            <summary>Sets the shim of DefaultConventionScanner.ToString()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.Constructor">
            <summary>Sets the shim of DefaultConventionScanner.DefaultConventionScanner()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.FindPluginTypeType">
            <summary>Sets the shim of DefaultConventionScanner.FindPluginType(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of DefaultConventionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimDefaultConventionScanner.ToString">
            <summary>Sets the shim of DefaultConventionScanner.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy">
            <summary>Shim type of StructureMap.Graph.EnumerableFamilyPolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.#ctor(StructureMap.Graph.EnumerableFamilyPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.AllInstances.AppliesToHasFamilyChecksGet">
            <summary>Sets the shim of EnumerableFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.AllInstances.BuildType">
            <summary>Sets the shim of EnumerableFamilyPolicy.Build(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.AppliesToHasFamilyChecksGet">
            <summary>Sets the shim of EnumerableFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.Bind(StructureMap.Graph.IFamilyPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.BuildType">
            <summary>Sets the shim of EnumerableFamilyPolicy.Build(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimEnumerableFamilyPolicy.Constructor">
            <summary>Sets the shim of EnumerableFamilyPolicy.EnumerableFamilyPolicy()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFindAllTypesFilter">
            <summary>Shim type of StructureMap.Graph.FindAllTypesFilter</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.#ctor(StructureMap.Graph.FindAllTypesFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.AllInstances.GetLeastSpecificButValidTypeTypeType">
            <summary>Sets the shim of FindAllTypesFilter.GetLeastSpecificButValidType(Type pluginType, Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.AllInstances.MatchesType">
            <summary>Sets the shim of FindAllTypesFilter.Matches(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.AllInstances.NameByFuncOfTypeString">
            <summary>Sets the shim of FindAllTypesFilter.NameBy(Func`2&lt;Type,String&gt; getName)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.AllInstances.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of FindAllTypesFilter.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.AllInstances.ToString01">
            <summary>Sets the shim of FindAllTypesFilter.ToString()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.ConstructorType">
            <summary>Sets the shim of FindAllTypesFilter.FindAllTypesFilter(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.GetLeastSpecificButValidTypeTypeType">
            <summary>Sets the shim of FindAllTypesFilter.GetLeastSpecificButValidType(Type pluginType, Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.MatchesType">
            <summary>Sets the shim of FindAllTypesFilter.Matches(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.NameByFuncOfTypeString">
            <summary>Sets the shim of FindAllTypesFilter.NameBy(Func`2&lt;Type,String&gt; getName)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of FindAllTypesFilter.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindAllTypesFilter.ToString">
            <summary>Sets the shim of FindAllTypesFilter.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFindRegistriesScanner">
            <summary>Shim type of StructureMap.Graph.FindRegistriesScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.#ctor(StructureMap.Graph.FindRegistriesScanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.AllInstances.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of FindRegistriesScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.Constructor">
            <summary>Sets the shim of FindRegistriesScanner.FindRegistriesScanner()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFindRegistriesScanner.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of FindRegistriesScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention">
            <summary>Shim type of StructureMap.Graph.FirstInterfaceConvention</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.#ctor(StructureMap.Graph.FirstInterfaceConvention)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.AllInstances.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of FirstInterfaceConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.AllInstances.ToString01">
            <summary>Sets the shim of FirstInterfaceConvention.ToString()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.Constructor">
            <summary>Sets the shim of FirstInterfaceConvention.FirstInterfaceConvention()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of FirstInterfaceConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFirstInterfaceConvention.ToString">
            <summary>Sets the shim of FirstInterfaceConvention.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy">
            <summary>Shim type of StructureMap.Graph.FuncBuildByNamePolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.#ctor(StructureMap.Graph.FuncBuildByNamePolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.AllInstances.AppliesToHasFamilyChecksGet">
            <summary>Sets the shim of FuncBuildByNamePolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.AllInstances.BuildType">
            <summary>Sets the shim of FuncBuildByNamePolicy.Build(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.AppliesToHasFamilyChecksGet">
            <summary>Sets the shim of FuncBuildByNamePolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.Bind(StructureMap.Graph.IFamilyPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.BuildType">
            <summary>Sets the shim of FuncBuildByNamePolicy.Build(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncBuildByNamePolicy.Constructor">
            <summary>Sets the shim of FuncBuildByNamePolicy.FuncBuildByNamePolicy()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1">
            <summary>Shim type of StructureMap.Graph.FuncByNameInstance`1</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.#ctor(StructureMap.Graph.FuncByNameInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.Bind(StructureMap.Pipeline.LambdaInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimFuncByNameInstance`1.Constructor">
            <summary>Sets the shim of FuncByNameInstance`1.FuncByNameInstance`1()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimGenericConnectionScanner">
            <summary>Shim type of StructureMap.Graph.GenericConnectionScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.#ctor(StructureMap.Graph.GenericConnectionScanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.AllInstances.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of GenericConnectionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.AllInstances.ToString01">
            <summary>Sets the shim of GenericConnectionScanner.ToString()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.AllInstances._ScanTypesb__5_0Type">
            <summary>Sets the shim of GenericConnectionScanner.&lt;ScanTypes&gt;b__5_0(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.AllInstances.addConcretionsThatCouldBeClosedTypeGenericFamilyExpression">
            <summary>Sets the shim of GenericConnectionScanner.addConcretionsThatCouldBeClosed(Type interface, GenericFamilyExpression expression)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.ConstructorType">
            <summary>Sets the shim of GenericConnectionScanner.GenericConnectionScanner(Type openType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of GenericConnectionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.ToString">
            <summary>Sets the shim of GenericConnectionScanner.ToString()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner._ScanTypesb__5_0Type">
            <summary>Sets the shim of GenericConnectionScanner.&lt;ScanTypes&gt;b__5_0(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericConnectionScanner.addConcretionsThatCouldBeClosedTypeGenericFamilyExpression">
            <summary>Sets the shim of GenericConnectionScanner.addConcretionsThatCouldBeClosed(Type interface, GenericFamilyExpression expression)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimGenericsPluginGraph">
            <summary>Shim type of StructureMap.Graph.GenericsPluginGraph</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericsPluginGraph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericsPluginGraph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimGenericsPluginGraph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericsPluginGraph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericsPluginGraph.CanBeCastTypeType">
            <summary>Sets the shim of GenericsPluginGraph.CanBeCast(Type pluginType, Type pluggedType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimGenericsPluginGraph.checkGenericTypeTypeType">
            <summary>Sets the shim of GenericsPluginGraph.checkGenericType(Type pluggedType, Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimHasLifecycle">
            <summary>Shim type of StructureMap.Graph.HasLifecycle</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimHasLifecycle.#ctor(StructureMap.Graph.HasLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimHasLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.AllInstances.LifecycleGet">
            <summary>Sets the shim of HasLifecycle.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.AllInstances.SetLifecycleToILifecycle">
            <summary>Sets the shim of HasLifecycle.SetLifecycleTo(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimHasLifecycle.AllInstances.SetLifecycleToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Graph.HasLifecycle})">
            <summary>Sets the shim of HasLifecycle.SetLifecycleTo()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.AllInstances.copyLifecycleHasLifecycle">
            <summary>Sets the shim of HasLifecycle.copyLifecycle(HasLifecycle other)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimHasLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimHasLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.Constructor">
            <summary>Sets the shim of HasLifecycle.HasLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.LifecycleGet">
            <summary>Sets the shim of HasLifecycle.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.SetLifecycleToILifecycle">
            <summary>Sets the shim of HasLifecycle.SetLifecycleTo(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimHasLifecycle.SetLifecycleToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of HasLifecycle.SetLifecycleTo()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimHasLifecycle.copyLifecycleHasLifecycle">
            <summary>Sets the shim of HasLifecycle.copyLifecycle(HasLifecycle other)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimImplementationMap">
            <summary>Shim type of StructureMap.Graph.ImplementationMap</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimImplementationMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimImplementationMap.#ctor(StructureMap.Graph.ImplementationMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimImplementationMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimImplementationMap.AllInstances.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of ImplementationMap.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimImplementationMap.AllInstances.ToString01">
            <summary>Sets the shim of ImplementationMap.ToString()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimImplementationMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimImplementationMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimImplementationMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimImplementationMap.Bind(StructureMap.Graph.IRegistrationConvention)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimImplementationMap.Constructor">
            <summary>Sets the shim of ImplementationMap.ImplementationMap()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimImplementationMap.ScanTypesTypeSetRegistry">
            <summary>Sets the shim of ImplementationMap.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimImplementationMap.ToString">
            <summary>Sets the shim of ImplementationMap.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimPluginFamily">
            <summary>Shim type of StructureMap.Graph.PluginFamily</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginFamily.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginFamily.#ctor(StructureMap.Graph.PluginFamily)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AddInstanceInstance">
            <summary>Sets the shim of PluginFamily.AddInstance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AddTypeType">
            <summary>Sets the shim of PluginFamily.AddType(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AddTypeTypeString">
            <summary>Sets the shim of PluginFamily.AddType(Type concreteType, String name)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.AddInstanceInstance">
            <summary>Sets the shim of PluginFamily.AddInstance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.AddTypeType">
            <summary>Sets the shim of PluginFamily.AddType(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.AddTypeTypeString">
            <summary>Sets the shim of PluginFamily.AddType(Type concreteType, String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.CreateTemplatedCloneTypeArray">
            <summary>Sets the shim of PluginFamily.CreateTemplatedClone(Type[] templateTypes)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.FallbackGet">
            <summary>Sets the shim of PluginFamily.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.FallbackSetInstance">
            <summary>Sets the shim of PluginFamily.set_Fallback(Instance value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.GetDefaultInstance">
            <summary>Sets the shim of PluginFamily.GetDefaultInstance()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.GetInstanceString">
            <summary>Sets the shim of PluginFamily.GetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.InstancesGet">
            <summary>Sets the shim of PluginFamily.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.IsGenericTemplateGet">
            <summary>Sets the shim of PluginFamily.get_IsGenericTemplate()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.MissingInstanceGet">
            <summary>Sets the shim of PluginFamily.get_MissingInstance()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.MissingInstanceSetInstance">
            <summary>Sets the shim of PluginFamily.set_MissingInstance(Instance value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.OwnerGet">
            <summary>Sets the shim of PluginFamily.get_Owner()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.OwnerSetPluginGraph">
            <summary>Sets the shim of PluginFamily.set_Owner(PluginGraph value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.PluginTypeGet">
            <summary>Sets the shim of PluginFamily.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.PoliciesGet">
            <summary>Sets the shim of PluginFamily.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.RemoveAll">
            <summary>Sets the shim of PluginFamily.RemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.RemoveInstanceInstance">
            <summary>Sets the shim of PluginFamily.RemoveInstance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.SetDefaultInstance">
            <summary>Sets the shim of PluginFamily.SetDefault(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.SystemIDisposableDispose">
            <summary>Sets the shim of PluginFamily.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances._ctorb__4_0StructureMapAttribute">
            <summary>Sets the shim of PluginFamily.&lt;.ctor&gt;b__4_0(StructureMapAttribute a)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances._ctorb__4_1String">
            <summary>Sets the shim of PluginFamily.&lt;.ctor&gt;b__4_1(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.assertInstanceIsValidForThisPluginTypeInstance">
            <summary>Sets the shim of PluginFamily.assertInstanceIsValidForThisPluginType(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.determineDefault">
            <summary>Sets the shim of PluginFamily.determineDefault()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.hasTypeType">
            <summary>Sets the shim of PluginFamily.hasType(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.AllInstances.resetDefault">
            <summary>Sets the shim of PluginFamily.resetDefault()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginFamily.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginFamily.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginFamily.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.ConstructorType">
            <summary>Sets the shim of PluginFamily.PluginFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.CreateTemplatedCloneTypeArray">
            <summary>Sets the shim of PluginFamily.CreateTemplatedClone(Type[] templateTypes)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.FallbackGet">
            <summary>Sets the shim of PluginFamily.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.FallbackSetInstance">
            <summary>Sets the shim of PluginFamily.set_Fallback(Instance value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.GetDefaultInstance">
            <summary>Sets the shim of PluginFamily.GetDefaultInstance()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.GetInstanceString">
            <summary>Sets the shim of PluginFamily.GetInstance(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.InstancesGet">
            <summary>Sets the shim of PluginFamily.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.IsGenericTemplateGet">
            <summary>Sets the shim of PluginFamily.get_IsGenericTemplate()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.MissingInstanceGet">
            <summary>Sets the shim of PluginFamily.get_MissingInstance()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.MissingInstanceSetInstance">
            <summary>Sets the shim of PluginFamily.set_MissingInstance(Instance value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.OwnerGet">
            <summary>Sets the shim of PluginFamily.get_Owner()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.OwnerSetPluginGraph">
            <summary>Sets the shim of PluginFamily.set_Owner(PluginGraph value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.PluginTypeGet">
            <summary>Sets the shim of PluginFamily.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.PoliciesGet">
            <summary>Sets the shim of PluginFamily.get_Policies()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.RemoveAll">
            <summary>Sets the shim of PluginFamily.RemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.RemoveInstanceInstance">
            <summary>Sets the shim of PluginFamily.RemoveInstance(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.SetDefaultInstance">
            <summary>Sets the shim of PluginFamily.SetDefault(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.SystemIDisposableDispose">
            <summary>Sets the shim of PluginFamily.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily._ctorb__4_0StructureMapAttribute">
            <summary>Sets the shim of PluginFamily.&lt;.ctor&gt;b__4_0(StructureMapAttribute a)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily._ctorb__4_1String">
            <summary>Sets the shim of PluginFamily.&lt;.ctor&gt;b__4_1(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.assertInstanceIsValidForThisPluginTypeInstance">
            <summary>Sets the shim of PluginFamily.assertInstanceIsValidForThisPluginType(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.determineDefault">
            <summary>Sets the shim of PluginFamily.determineDefault()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.hasTypeType">
            <summary>Sets the shim of PluginFamily.hasType(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginFamily.resetDefault">
            <summary>Sets the shim of PluginFamily.resetDefault()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimPluginGraph">
            <summary>Shim type of StructureMap.Graph.PluginGraph</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AddFamilyPluginFamily">
            <summary>Sets the shim of PluginGraph.AddFamily(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AddFamilyPolicyIFamilyPolicy">
            <summary>Sets the shim of PluginGraph.AddFamilyPolicy(IFamilyPolicy policy)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AddTypeTypeType">
            <summary>Sets the shim of PluginGraph.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AddTypeTypeTypeString">
            <summary>Sets the shim of PluginGraph.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.AddFamilyPluginFamily">
            <summary>Sets the shim of PluginGraph.AddFamily(PluginFamily family)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.AddFamilyPolicyIFamilyPolicy">
            <summary>Sets the shim of PluginGraph.AddFamilyPolicy(IFamilyPolicy policy)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.AddTypeTypeType">
            <summary>Sets the shim of PluginGraph.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.AddTypeTypeTypeString">
            <summary>Sets the shim of PluginGraph.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.AllInstancesType">
            <summary>Sets the shim of PluginGraph.AllInstances(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ClearTypeMisses">
            <summary>Sets the shim of PluginGraph.ClearTypeMisses()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.EachInstanceActionOfTypeInstance">
            <summary>Sets the shim of PluginGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.EjectFamilyType">
            <summary>Sets the shim of PluginGraph.EjectFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.FamiliesGet">
            <summary>Sets the shim of PluginGraph.get_Families()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.FindExistingOrCreateFamilyType">
            <summary>Sets the shim of PluginGraph.FindExistingOrCreateFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.FindInstanceTypeString">
            <summary>Sets the shim of PluginGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.HasDefaultForPluginTypeType">
            <summary>Sets the shim of PluginGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.HasFamilyType">
            <summary>Sets the shim of PluginGraph.HasFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.HasInstanceTypeString">
            <summary>Sets the shim of PluginGraph.HasInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ImportRegistryRegistry">
            <summary>Sets the shim of PluginGraph.ImportRegistry(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ImportRegistryType">
            <summary>Sets the shim of PluginGraph.ImportRegistry(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.IsRunningConfigureGet">
            <summary>Sets the shim of PluginGraph.get_IsRunningConfigure()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.IsRunningConfigureSetBoolean">
            <summary>Sets the shim of PluginGraph.set_IsRunningConfigure(Boolean value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ItemStructureMapGraphIFamilyCollectiongetType">
            <summary>Sets the shim of PluginGraph.StructureMap.Graph.IFamilyCollection.get_Item(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ItemStructureMapGraphIFamilyCollectionsetTypePluginFamily">
            <summary>Sets the shim of PluginGraph.StructureMap.Graph.IFamilyCollection.set_Item(Type pluginType, PluginFamily value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.NameGet">
            <summary>Sets the shim of PluginGraph.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.NameSetString">
            <summary>Sets the shim of PluginGraph.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.NewChild">
            <summary>Sets the shim of PluginGraph.NewChild()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ParentGet">
            <summary>Sets the shim of PluginGraph.get_Parent()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ParentSetPluginGraph">
            <summary>Sets the shim of PluginGraph.set_Parent(PluginGraph value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ProfileNameGet">
            <summary>Sets the shim of PluginGraph.get_ProfileName()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ProfileNameSetString">
            <summary>Sets the shim of PluginGraph.set_ProfileName(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ProfileString">
            <summary>Sets the shim of PluginGraph.Profile(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ProfilesGet">
            <summary>Sets the shim of PluginGraph.get_Profiles()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.RegistriesGet">
            <summary>Sets the shim of PluginGraph.get_Registries()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.RootGet">
            <summary>Sets the shim of PluginGraph.get_Root()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.SingletonCacheGet">
            <summary>Sets the shim of PluginGraph.get_SingletonCache()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.StructureMapGraphIFamilyCollectionHasType">
            <summary>Sets the shim of PluginGraph.StructureMap.Graph.IFamilyCollection.Has(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.SystemCollectionsGenericIEnumerableStructureMapGraphPluginFamilyGetEnumerator">
            <summary>Sets the shim of PluginGraph.System.Collections.Generic.IEnumerable&lt;StructureMap.Graph.PluginFamily&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of PluginGraph.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.SystemIDisposableDispose">
            <summary>Sets the shim of PluginGraph.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.ToNestedGraph">
            <summary>Sets the shim of PluginGraph.ToNestedGraph()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances._StructureMapGraphIFamilyCollectionget_Itemb__34_0Type">
            <summary>Sets the shim of PluginGraph.&lt;StructureMap.Graph.IFamilyCollection.get_Item&gt;b__34_0(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances._SystemIDisposableDisposeb__62_0KeyValuePairOfTypePluginFamily">
            <summary>Sets the shim of PluginGraph.&lt;System.IDisposable.Dispose&gt;b__62_0(KeyValuePair`2&lt;Type,PluginFamily&gt; family)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances._ctorb__17_0String">
            <summary>Sets the shim of PluginGraph.&lt;.ctor&gt;b__17_0(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstances.addCloseGenericPolicyTo">
            <summary>Sets the shim of PluginGraph.addCloseGenericPolicyTo()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.AllInstancesType">
            <summary>Sets the shim of PluginGraph.AllInstances(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.Bind(StructureMap.Graph.IFamilyCollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.Bind(StructureMap.Graph.IPluginGraph)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimPluginGraph.Bind(System.Collections.Generic.IEnumerable{StructureMap.Graph.PluginFamily})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ClearTypeMisses">
            <summary>Sets the shim of PluginGraph.ClearTypeMisses()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.Constructor">
            <summary>Sets the shim of PluginGraph.PluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.CreateRootString">
            <summary>Sets the shim of PluginGraph.CreateRoot(String profile)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.EachInstanceActionOfTypeInstance">
            <summary>Sets the shim of PluginGraph.EachInstance(Action`2&lt;Type,Instance&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.EjectFamilyType">
            <summary>Sets the shim of PluginGraph.EjectFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.FamiliesGet">
            <summary>Sets the shim of PluginGraph.get_Families()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.FindExistingOrCreateFamilyType">
            <summary>Sets the shim of PluginGraph.FindExistingOrCreateFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.FindInstanceTypeString">
            <summary>Sets the shim of PluginGraph.FindInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.HasDefaultForPluginTypeType">
            <summary>Sets the shim of PluginGraph.HasDefaultForPluginType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.HasFamilyType">
            <summary>Sets the shim of PluginGraph.HasFamily(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.HasInstanceTypeString">
            <summary>Sets the shim of PluginGraph.HasInstance(Type pluginType, String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ImportRegistryRegistry">
            <summary>Sets the shim of PluginGraph.ImportRegistry(Registry registry)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ImportRegistryType">
            <summary>Sets the shim of PluginGraph.ImportRegistry(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.IsRunningConfigureGet">
            <summary>Sets the shim of PluginGraph.get_IsRunningConfigure()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.IsRunningConfigureSetBoolean">
            <summary>Sets the shim of PluginGraph.set_IsRunningConfigure(Boolean value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ItemStructureMapGraphIFamilyCollectiongetType">
            <summary>Sets the shim of PluginGraph.StructureMap.Graph.IFamilyCollection.get_Item(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ItemStructureMapGraphIFamilyCollectionsetTypePluginFamily">
            <summary>Sets the shim of PluginGraph.StructureMap.Graph.IFamilyCollection.set_Item(Type pluginType, PluginFamily value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.NameGet">
            <summary>Sets the shim of PluginGraph.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.NameSetString">
            <summary>Sets the shim of PluginGraph.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.NewChild">
            <summary>Sets the shim of PluginGraph.NewChild()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ParentGet">
            <summary>Sets the shim of PluginGraph.get_Parent()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ParentSetPluginGraph">
            <summary>Sets the shim of PluginGraph.set_Parent(PluginGraph value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ProfileNameGet">
            <summary>Sets the shim of PluginGraph.get_ProfileName()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ProfileNameSetString">
            <summary>Sets the shim of PluginGraph.set_ProfileName(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ProfileString">
            <summary>Sets the shim of PluginGraph.Profile(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ProfilesGet">
            <summary>Sets the shim of PluginGraph.get_Profiles()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.RegistriesGet">
            <summary>Sets the shim of PluginGraph.get_Registries()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.RootGet">
            <summary>Sets the shim of PluginGraph.get_Root()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.SingletonCacheGet">
            <summary>Sets the shim of PluginGraph.get_SingletonCache()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.StructureMapGraphIFamilyCollectionHasType">
            <summary>Sets the shim of PluginGraph.StructureMap.Graph.IFamilyCollection.Has(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.SystemCollectionsGenericIEnumerableStructureMapGraphPluginFamilyGetEnumerator">
            <summary>Sets the shim of PluginGraph.System.Collections.Generic.IEnumerable&lt;StructureMap.Graph.PluginFamily&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of PluginGraph.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.SystemIDisposableDispose">
            <summary>Sets the shim of PluginGraph.System.IDisposable.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.ToNestedGraph">
            <summary>Sets the shim of PluginGraph.ToNestedGraph()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph._StructureMapGraphIFamilyCollectionget_Itemb__34_0Type">
            <summary>Sets the shim of PluginGraph.&lt;StructureMap.Graph.IFamilyCollection.get_Item&gt;b__34_0(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph._SystemIDisposableDisposeb__62_0KeyValuePairOfTypePluginFamily">
            <summary>Sets the shim of PluginGraph.&lt;System.IDisposable.Dispose&gt;b__62_0(KeyValuePair`2&lt;Type,PluginFamily&gt; family)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph._ctorb__17_0String">
            <summary>Sets the shim of PluginGraph.&lt;.ctor&gt;b__17_0(String name)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimPluginGraph.addCloseGenericPolicyTo">
            <summary>Sets the shim of PluginGraph.addCloseGenericPolicyTo()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimSetterRules">
            <summary>Shim type of StructureMap.Graph.SetterRules</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimSetterRules.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimSetterRules.#ctor(StructureMap.Graph.SetterRules)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.AddFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of SetterRules.Add(Func`2&lt;PropertyInfo,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.AddIEnumerableOfFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of SetterRules.Add(IEnumerable`1&lt;Func`2&lt;PropertyInfo,Boolean&gt;&gt; rules)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.ShimSetterRules.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.AllInstances.AddFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of SetterRules.Add(Func`2&lt;PropertyInfo,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.AllInstances.AddIEnumerableOfFuncOfPropertyInfoBoolean">
            <summary>Sets the shim of SetterRules.Add(IEnumerable`1&lt;Func`2&lt;PropertyInfo,Boolean&gt;&gt; rules)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.AllInstances.Clear">
            <summary>Sets the shim of SetterRules.Clear()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.AllInstances.IsMandatoryPropertyInfo">
            <summary>Sets the shim of SetterRules.IsMandatory(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimSetterRules.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.ShimSetterRules.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.Clear">
            <summary>Sets the shim of SetterRules.Clear()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.Constructor">
            <summary>Sets the shim of SetterRules.SetterRules()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.ShimSetterRules.IsMandatoryPropertyInfo">
            <summary>Sets the shim of SetterRules.IsMandatory(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubAllPossibleInstance">
            <summary>Stub type of StructureMap.Graph.AllPossibleInstance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubAllPossibleInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAllPossibleInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAllPossibleInstance.Description">
            <summary>Sets the stub of AllPossibleInstance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.DescriptionGet">
            <summary>Sets the stub of AllPossibleInstance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.InitializeStub">
            <summary>Initializes a new instance of type StubAllPossibleInstance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAllPossibleInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAllPossibleInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAllPossibleInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAllPossibleInstance.ReturnedType">
            <summary>Sets the stub of AllPossibleInstance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.ReturnedTypeGet">
            <summary>Sets the stub of AllPossibleInstance.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of AllPossibleInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.ToDependencySourceType">
            <summary>Sets the stub of AllPossibleInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubAllPossibleInstance.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAllPossibleInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubAssemblyScanner">
            <summary>Stub type of StructureMap.Graph.AssemblyScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAssemblyScanner.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAssemblyScanner.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubAssemblyScanner.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyScanner</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAssemblyScanner.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubAssemblyScanner.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubCloseGenericFamilyPolicy">
            <summary>Stub type of StructureMap.Graph.CloseGenericFamilyPolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubCloseGenericFamilyPolicy.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCloseGenericFamilyPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubCloseGenericFamilyPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubCloseGenericFamilyPolicy</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCloseGenericFamilyPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCloseGenericFamilyPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubCompositeFilter`1">
            <summary>Stub type of StructureMap.Graph.CompositeFilter`1</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubCompositeFilter`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCompositeFilter`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubCompositeFilter`1.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeFilter</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCompositeFilter`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCompositeFilter`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubCompositePredicate`1">
            <summary>Stub type of StructureMap.Graph.CompositePredicate`1</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubCompositePredicate`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCompositePredicate`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubCompositePredicate`1.InitializeStub">
            <summary>Initializes a new instance of type StubCompositePredicate</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCompositePredicate`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubCompositePredicate`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention">
            <summary>Stub type of StructureMap.Graph.ConfigurableRegistrationConvention</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurableRegistrationConvention</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.ScanTypes(StructureMap.Graph.Scanning.TypeSet,StructureMap.Registry)">
            <summary>Sets the stub of ConfigurableRegistrationConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubConfigurableRegistrationConvention.ScanTypesTypeSetRegistry">
            <summary>Sets the stub of ConfigurableRegistrationConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubDefaultConventionScanner">
            <summary>Stub type of StructureMap.Graph.DefaultConventionScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubDefaultConventionScanner.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubDefaultConventionScanner.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubDefaultConventionScanner.FindPluginType(System.Type)">
            <summary>Sets the stub of DefaultConventionScanner.FindPluginType(Type concreteType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubDefaultConventionScanner.FindPluginTypeType">
            <summary>Sets the stub of DefaultConventionScanner.FindPluginType(Type concreteType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubDefaultConventionScanner.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultConventionScanner</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubDefaultConventionScanner.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubDefaultConventionScanner.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubDefaultConventionScanner.ScanTypes(StructureMap.Graph.Scanning.TypeSet,StructureMap.Registry)">
            <summary>Sets the stub of DefaultConventionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubDefaultConventionScanner.ScanTypesTypeSetRegistry">
            <summary>Sets the stub of DefaultConventionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubDefaultConventionScanner.ToString">
            <summary>Sets the stub of DefaultConventionScanner.ToString()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubDefaultConventionScanner.ToString01">
            <summary>Sets the stub of DefaultConventionScanner.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubEnumerableFamilyPolicy">
            <summary>Stub type of StructureMap.Graph.EnumerableFamilyPolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubEnumerableFamilyPolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubEnumerableFamilyPolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubEnumerableFamilyPolicy.InitializeStub">
            <summary>Initializes a new instance of type StubEnumerableFamilyPolicy</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubEnumerableFamilyPolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubEnumerableFamilyPolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubFindAllTypesFilter">
            <summary>Stub type of StructureMap.Graph.FindAllTypesFilter</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFindAllTypesFilter.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFindAllTypesFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFindAllTypesFilter.InitializeStub">
            <summary>Initializes a new instance of type StubFindAllTypesFilter</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFindAllTypesFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFindAllTypesFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFindAllTypesFilter.ToString">
            <summary>Sets the stub of FindAllTypesFilter.ToString()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFindAllTypesFilter.ToString01">
            <summary>Sets the stub of FindAllTypesFilter.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubFindRegistriesScanner">
            <summary>Stub type of StructureMap.Graph.FindRegistriesScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFindRegistriesScanner.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFindRegistriesScanner.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFindRegistriesScanner.InitializeStub">
            <summary>Initializes a new instance of type StubFindRegistriesScanner</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFindRegistriesScanner.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFindRegistriesScanner.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubFirstInterfaceConvention">
            <summary>Stub type of StructureMap.Graph.FirstInterfaceConvention</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.InitializeStub">
            <summary>Initializes a new instance of type StubFirstInterfaceConvention</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.ScanTypes(StructureMap.Graph.Scanning.TypeSet,StructureMap.Registry)">
            <summary>Sets the stub of FirstInterfaceConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.ScanTypesTypeSetRegistry">
            <summary>Sets the stub of FirstInterfaceConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.ToString">
            <summary>Sets the stub of FirstInterfaceConvention.ToString()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFirstInterfaceConvention.ToString01">
            <summary>Sets the stub of FirstInterfaceConvention.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubFuncBuildByNamePolicy">
            <summary>Stub type of StructureMap.Graph.FuncBuildByNamePolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncBuildByNamePolicy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncBuildByNamePolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncBuildByNamePolicy.InitializeStub">
            <summary>Initializes a new instance of type StubFuncBuildByNamePolicy</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncBuildByNamePolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncBuildByNamePolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubFuncByNameInstance`1">
            <summary>Stub type of StructureMap.Graph.FuncByNameInstance`1</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubFuncByNameInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.Description">
            <summary>Sets the stub of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.DescriptionGet">
            <summary>Sets the stub of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubFuncByNameInstance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ReturnedType">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ThisInstanceGet">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ToDependencySourceType">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.ToNamedCloneString">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubFuncByNameInstance`1.thisInstance">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubGenericConnectionScanner">
            <summary>Stub type of StructureMap.Graph.GenericConnectionScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubGenericConnectionScanner.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubGenericConnectionScanner.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubGenericConnectionScanner.InitializeStub">
            <summary>Initializes a new instance of type StubGenericConnectionScanner</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubGenericConnectionScanner.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubGenericConnectionScanner.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubGenericConnectionScanner.ScanTypes(StructureMap.Graph.Scanning.TypeSet,StructureMap.Registry)">
            <summary>Sets the stub of GenericConnectionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubGenericConnectionScanner.ScanTypesTypeSetRegistry">
            <summary>Sets the stub of GenericConnectionScanner.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubGenericConnectionScanner.ToString">
            <summary>Sets the stub of GenericConnectionScanner.ToString()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubGenericConnectionScanner.ToString01">
            <summary>Sets the stub of GenericConnectionScanner.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubHasLifecycle">
            <summary>Stub type of StructureMap.Graph.HasLifecycle</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubHasLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubHasLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubHasLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubHasLifecycle</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubHasLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubHasLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubIAssemblyScanner">
            <summary>Stub type of StructureMap.Graph.IAssemblyScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.#ctor">
            <summary>Initializes a new instance of type StubIAssemblyScanner</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.AddAllTypesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Graph.FindAllTypesFilter})">
            <summary>Sets stubs of AddAllTypesOf()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AddAllTypesOfType">
            <summary>Sets the stub of IAssemblyScanner.AddAllTypesOf(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesAndExecutablesFromApplicationBaseDirectoryFuncOfAssemblyBoolean">
            <summary>Sets the stub of IAssemblyScanner.AssembliesAndExecutablesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesAndExecutablesFromPathString">
            <summary>Sets the stub of IAssemblyScanner.AssembliesAndExecutablesFromPath(String path)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesAndExecutablesFromPathStringFuncOfAssemblyBoolean">
            <summary>Sets the stub of IAssemblyScanner.AssembliesAndExecutablesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesFromApplicationBaseDirectory">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromApplicationBaseDirectory()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesFromApplicationBaseDirectoryFuncOfAssemblyBoolean">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesFromPathString">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromPath(String path)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssembliesFromPathStringFuncOfAssemblyBoolean">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssemblyAssembly">
            <summary>Sets the stub of IAssemblyScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssemblyContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of AssemblyContainingType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssemblyContainingTypeType">
            <summary>Sets the stub of IAssemblyScanner.AssemblyContainingType(Type type)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.AssemblyString">
            <summary>Sets the stub of IAssemblyScanner.Assembly(String assemblyName)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubIAssemblyScanner.Description as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.ConnectImplementationsToTypesClosingType">
            <summary>Sets the stub of IAssemblyScanner.ConnectImplementationsToTypesClosing(Type openGenericType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.ConventionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of Convention()</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#Description">
            <summary>Sets the stub of IAssemblyScanner.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.DescriptionGet">
            <summary>Sets the stub of IAssemblyScanner.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.DescriptionSetString">
            <summary>Sets the stub of IAssemblyScanner.set_Description(String value)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.ExcludeFuncOfTypeBoolean">
            <summary>Sets the stub of IAssemblyScanner.Exclude(Func`2&lt;Type,Boolean&gt; exclude)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.ExcludeNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of ExcludeNamespaceContainingType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.ExcludeNamespaceString">
            <summary>Sets the stub of IAssemblyScanner.ExcludeNamespace(String nameSpace)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.ExcludeTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of ExcludeType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.IncludeFuncOfTypeBoolean">
            <summary>Sets the stub of IAssemblyScanner.Include(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.IncludeNamespaceContainingTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of IncludeNamespaceContainingType()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.IncludeNamespaceString">
            <summary>Sets the stub of IAssemblyScanner.IncludeNamespace(String nameSpace)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.LookForRegistries">
            <summary>Sets the stub of IAssemblyScanner.LookForRegistries()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.RegisterConcreteTypesAgainstTheFirstInterface">
            <summary>Sets the stub of IAssemblyScanner.RegisterConcreteTypesAgainstTheFirstInterface()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.SingleImplementationsOfInterface">
            <summary>Sets the stub of IAssemblyScanner.SingleImplementationsOfInterface()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AddAllTypesOf``1">
            <summary>Sets the stub of IAssemblyScanner.AddAllTypesOf()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AddAllTypesOf(System.Type)">
            <summary>Sets the stub of IAssemblyScanner.AddAllTypesOf(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesAndExecutablesFromApplicationBaseDirectory(System.Func{System.Reflection.Assembly,System.Boolean})">
            <summary>Sets the stub of IAssemblyScanner.AssembliesAndExecutablesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesAndExecutablesFromPath(System.String)">
            <summary>Sets the stub of IAssemblyScanner.AssembliesAndExecutablesFromPath(String path)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesAndExecutablesFromPath(System.String,System.Func{System.Reflection.Assembly,System.Boolean})">
            <summary>Sets the stub of IAssemblyScanner.AssembliesAndExecutablesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesFromApplicationBaseDirectory">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromApplicationBaseDirectory()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesFromApplicationBaseDirectory(System.Func{System.Reflection.Assembly,System.Boolean})">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromApplicationBaseDirectory(Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesFromPath(System.String)">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromPath(String path)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssembliesFromPath(System.String,System.Func{System.Reflection.Assembly,System.Boolean})">
            <summary>Sets the stub of IAssemblyScanner.AssembliesFromPath(String path, Func`2&lt;Assembly,Boolean&gt; assemblyFilter)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#Assembly(System.String)">
            <summary>Sets the stub of IAssemblyScanner.Assembly(String assemblyName)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#Assembly(System.Reflection.Assembly)">
            <summary>Sets the stub of IAssemblyScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssemblyContainingType``1">
            <summary>Sets the stub of IAssemblyScanner.AssemblyContainingType()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#AssemblyContainingType(System.Type)">
            <summary>Sets the stub of IAssemblyScanner.AssemblyContainingType(Type type)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#ConnectImplementationsToTypesClosing(System.Type)">
            <summary>Sets the stub of IAssemblyScanner.ConnectImplementationsToTypesClosing(Type openGenericType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#Convention``1">
            <summary>Sets the stub of IAssemblyScanner.Convention()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#Exclude(System.Func{System.Type,System.Boolean})">
            <summary>Sets the stub of IAssemblyScanner.Exclude(Func`2&lt;Type,Boolean&gt; exclude)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#ExcludeNamespace(System.String)">
            <summary>Sets the stub of IAssemblyScanner.ExcludeNamespace(String nameSpace)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#ExcludeNamespaceContainingType``1">
            <summary>Sets the stub of IAssemblyScanner.ExcludeNamespaceContainingType()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#ExcludeType``1">
            <summary>Sets the stub of IAssemblyScanner.ExcludeType()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#Include(System.Func{System.Type,System.Boolean})">
            <summary>Sets the stub of IAssemblyScanner.Include(Func`2&lt;Type,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#IncludeNamespace(System.String)">
            <summary>Sets the stub of IAssemblyScanner.IncludeNamespace(String nameSpace)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#IncludeNamespaceContainingType``1">
            <summary>Sets the stub of IAssemblyScanner.IncludeNamespaceContainingType()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#LookForRegistries">
            <summary>Sets the stub of IAssemblyScanner.LookForRegistries()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#RegisterConcreteTypesAgainstTheFirstInterface">
            <summary>Sets the stub of IAssemblyScanner.RegisterConcreteTypesAgainstTheFirstInterface()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#SingleImplementationsOfInterface">
            <summary>Sets the stub of IAssemblyScanner.SingleImplementationsOfInterface()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#TheCallingAssembly">
            <summary>Sets the stub of IAssemblyScanner.TheCallingAssembly()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#With(StructureMap.Graph.IRegistrationConvention)">
            <summary>Sets the stub of IAssemblyScanner.With(IRegistrationConvention convention)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIAssemblyScanner.StructureMap#Graph#IAssemblyScanner#WithDefaultConventions">
            <summary>Sets the stub of IAssemblyScanner.WithDefaultConventions()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.TheCallingAssembly">
            <summary>Sets the stub of IAssemblyScanner.TheCallingAssembly()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.WithDefaultConventions">
            <summary>Sets the stub of IAssemblyScanner.WithDefaultConventions()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIAssemblyScanner.WithIRegistrationConvention">
            <summary>Sets the stub of IAssemblyScanner.With(IRegistrationConvention convention)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubIFamilyCollection">
            <summary>Stub type of StructureMap.Graph.IFamilyCollection</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIFamilyCollection.#ctor">
            <summary>Initializes a new instance of type StubIFamilyCollection</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyCollection.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyCollection.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyCollection.HasType">
            <summary>Sets the stub of IFamilyCollection.Has(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubIFamilyCollection.StructureMap#Graph#IFamilyCollection#Item(System.Type)">
            <summary>Sets the stub of IFamilyCollection.get_Item(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyCollection.ItemGetType">
            <summary>Sets the stub of IFamilyCollection.get_Item(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyCollection.ItemSetTypePluginFamily">
            <summary>Sets the stub of IFamilyCollection.set_Item(Type pluginType, PluginFamily value)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIFamilyCollection.StructureMap#Graph#IFamilyCollection#Has(System.Type)">
            <summary>Sets the stub of IFamilyCollection.Has(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIFamilyCollection.System#Collections#Generic#IEnumerable{StructureMap#Graph#PluginFamily}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIFamilyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubIFamilyPolicy">
            <summary>Stub type of StructureMap.Graph.IFamilyPolicy</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIFamilyPolicy.#ctor">
            <summary>Initializes a new instance of type StubIFamilyPolicy</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubIFamilyPolicy.StructureMap#Graph#IFamilyPolicy#AppliesToHasFamilyChecks">
            <summary>Sets the stub of IFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyPolicy.AppliesToHasFamilyChecksGet">
            <summary>Sets the stub of IFamilyPolicy.get_AppliesToHasFamilyChecks()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIFamilyPolicy.BuildType">
            <summary>Sets the stub of IFamilyPolicy.Build(Type type)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIFamilyPolicy.StructureMap#Graph#IFamilyPolicy#Build(System.Type)">
            <summary>Sets the stub of IFamilyPolicy.Build(Type type)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubIPluginGraph">
            <summary>Stub type of StructureMap.Graph.IPluginGraph</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIPluginGraph.#ctor">
            <summary>Initializes a new instance of type StubIPluginGraph</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIPluginGraph.AddTypeTypeType">
            <summary>Sets the stub of IPluginGraph.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIPluginGraph.AddTypeTypeTypeString">
            <summary>Sets the stub of IPluginGraph.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIPluginGraph.StructureMap#Graph#IPluginGraph#AddType(System.Type,System.Type)">
            <summary>Sets the stub of IPluginGraph.AddType(Type pluginType, Type concreteType)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIPluginGraph.StructureMap#Graph#IPluginGraph#AddType(System.Type,System.Type,System.String)">
            <summary>Sets the stub of IPluginGraph.AddType(Type pluginType, Type concreteType, String name)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubIRegistrationConvention">
            <summary>Stub type of StructureMap.Graph.IRegistrationConvention</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIRegistrationConvention.#ctor">
            <summary>Initializes a new instance of type StubIRegistrationConvention</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubIRegistrationConvention.ScanTypesTypeSetRegistry">
            <summary>Sets the stub of IRegistrationConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubIRegistrationConvention.StructureMap#Graph#IRegistrationConvention#ScanTypes(StructureMap.Graph.Scanning.TypeSet,StructureMap.Registry)">
            <summary>Sets the stub of IRegistrationConvention.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubImplementationMap">
            <summary>Stub type of StructureMap.Graph.ImplementationMap</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubImplementationMap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubImplementationMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubImplementationMap.InitializeStub">
            <summary>Initializes a new instance of type StubImplementationMap</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubImplementationMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubImplementationMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubImplementationMap.ScanTypes(StructureMap.Graph.Scanning.TypeSet,StructureMap.Registry)">
            <summary>Sets the stub of ImplementationMap.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubImplementationMap.ScanTypesTypeSetRegistry">
            <summary>Sets the stub of ImplementationMap.ScanTypes(TypeSet types, Registry registry)</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubImplementationMap.ToString">
            <summary>Sets the stub of ImplementationMap.ToString()</summary>
        </member>
        <member name="F:StructureMap.Graph.Fakes.StubImplementationMap.ToString01">
            <summary>Sets the stub of ImplementationMap.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubPluginFamily">
            <summary>Stub type of StructureMap.Graph.PluginFamily</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubPluginFamily.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubPluginFamily.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubPluginFamily.InitializeStub">
            <summary>Initializes a new instance of type StubPluginFamily</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubPluginFamily.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubPluginFamily.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Fakes.StubSetterRules">
            <summary>Stub type of StructureMap.Graph.SetterRules</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubSetterRules.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubSetterRules.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Fakes.StubSetterRules.InitializeStub">
            <summary>Initializes a new instance of type StubSetterRules</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubSetterRules.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Fakes.StubSetterRules.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord">
            <summary>Shim type of StructureMap.Graph.Scanning.AssemblyScanRecord</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.#ctor(StructureMap.Graph.Scanning.AssemblyScanRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.AllInstances.ToString01">
            <summary>Sets the shim of AssemblyScanRecord.ToString()</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.Constructor">
            <summary>Sets the shim of AssemblyScanRecord.AssemblyScanRecord()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyScanRecord.ToString">
            <summary>Sets the shim of AssemblyScanRecord.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf">
            <summary>Shim type of StructureMap.Graph.Scanning.AssemblyShelf</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.#ctor(StructureMap.Graph.Scanning.AssemblyShelf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.AddType">
            <summary>Sets the shim of AssemblyShelf.Add(Type type)</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.AllInstances.AddType">
            <summary>Sets the shim of AssemblyShelf.Add(Type type)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.AllInstances.AllTypes">
            <summary>Sets the shim of AssemblyShelf.AllTypes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.AllInstances.SelectListsTypeClassification">
            <summary>Sets the shim of AssemblyShelf.SelectLists(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.AllTypes">
            <summary>Sets the shim of AssemblyShelf.AllTypes()</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.Constructor">
            <summary>Sets the shim of AssemblyShelf.AssemblyShelf()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyShelf.SelectListsTypeClassification">
            <summary>Sets the shim of AssemblyShelf.SelectLists(TypeClassification classification)</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes">
            <summary>Shim type of StructureMap.Graph.Scanning.AssemblyTypes</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.#ctor(StructureMap.Graph.Scanning.AssemblyTypes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.AllInstances.FindTypesTypeClassification">
            <summary>Sets the shim of AssemblyTypes.FindTypes(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.AllInstances.RecordGet">
            <summary>Sets the shim of AssemblyTypes.get_Record()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.AllInstances.allTypesIListOfTypeArray">
            <summary>Sets the shim of AssemblyTypes.allTypes(IList`1&lt;Type&gt;[] shelves)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.AllInstances.selectGroupsTypeClassification">
            <summary>Sets the shim of AssemblyTypes.selectGroups(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.AllInstances.selectShelvesTypeClassification">
            <summary>Sets the shim of AssemblyTypes.selectShelves(TypeClassification classification)</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.ConstructorAssembly">
            <summary>Sets the shim of AssemblyTypes.AssemblyTypes(Assembly assembly)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.ConstructorStringFuncOfIEnumerableOfType">
            <summary>Sets the shim of AssemblyTypes.AssemblyTypes(String name, Func`1&lt;IEnumerable`1&lt;Type&gt;&gt; typeSource)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.FindTypesTypeClassification">
            <summary>Sets the shim of AssemblyTypes.FindTypes(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.RecordGet">
            <summary>Sets the shim of AssemblyTypes.get_Record()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.allTypesIListOfTypeArray">
            <summary>Sets the shim of AssemblyTypes.allTypes(IList`1&lt;Type&gt;[] shelves)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.selectGroupsTypeClassification">
            <summary>Sets the shim of AssemblyTypes.selectGroups(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimAssemblyTypes.selectShelvesTypeClassification">
            <summary>Sets the shim of AssemblyTypes.selectShelves(TypeClassification classification)</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery">
            <summary>Shim type of StructureMap.Graph.Scanning.TypeQuery</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.#ctor(StructureMap.Graph.Scanning.TypeQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.AllInstances.FindAssemblyTypes">
            <summary>Sets the shim of TypeQuery.Find(AssemblyTypes assembly)</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.ConstructorTypeClassificationFuncOfTypeBoolean">
            <summary>Sets the shim of TypeQuery.TypeQuery(TypeClassification classification, Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeQuery.FindAssemblyTypes">
            <summary>Sets the shim of TypeQuery.Find(AssemblyTypes assembly)</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository">
            <summary>Shim type of StructureMap.Graph.Scanning.TypeRepository</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.AssertNoTypeScanningFailures">
            <summary>Sets the shim of TypeRepository.AssertNoTypeScanningFailures()</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.ClearAll">
            <summary>Sets the shim of TypeRepository.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.FailedAssemblies">
            <summary>Sets the shim of TypeRepository.FailedAssemblies()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.FindTypesAssemblyTypeClassificationFuncOfTypeBoolean">
            <summary>Sets the shim of TypeRepository.FindTypes(Assembly assembly, TypeClassification classification, Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.FindTypesIEnumerableOfAssemblyFuncOfTypeBoolean">
            <summary>Sets the shim of TypeRepository.FindTypes(IEnumerable`1&lt;Assembly&gt; assemblies, Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.FindTypesIEnumerableOfAssemblyTypeClassificationFuncOfTypeBoolean">
            <summary>Sets the shim of TypeRepository.FindTypes(IEnumerable`1&lt;Assembly&gt; assemblies, TypeClassification classification, Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.ForAssemblyAssembly">
            <summary>Sets the shim of TypeRepository.ForAssembly(Assembly assembly)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeRepository.StaticConstructor">
            <summary>Sets the shim of TypeRepository.TypeRepository()</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimTypeSet">
            <summary>Shim type of StructureMap.Graph.Scanning.TypeSet</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.#ctor(StructureMap.Graph.Scanning.TypeSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.AllInstances.AllTypes">
            <summary>Sets the shim of TypeSet.AllTypes()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.AllInstances.FindTypesTypeClassification">
            <summary>Sets the shim of TypeSet.FindTypes(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.AllInstances.RecordsGet">
            <summary>Sets the shim of TypeSet.get_Records()</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.AllTypes">
            <summary>Sets the shim of TypeSet.AllTypes()</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.ConstructorIEnumerableOfAssemblyTypesFuncOfTypeBoolean">
            <summary>Sets the shim of TypeSet.TypeSet(IEnumerable`1&lt;AssemblyTypes&gt; allTypes, Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.FindTypesTypeClassification">
            <summary>Sets the shim of TypeSet.FindTypes(TypeClassification classification)</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.ShimTypeSet.RecordsGet">
            <summary>Sets the shim of TypeSet.get_Records()</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord">
            <summary>Stub type of StructureMap.Graph.Scanning.AssemblyScanRecord</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyScanRecord</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.ToString">
            <summary>Sets the stub of AssemblyScanRecord.ToString()</summary>
        </member>
        <member name="F:StructureMap.Graph.Scanning.Fakes.StubAssemblyScanRecord.ToString01">
            <summary>Sets the stub of AssemblyScanRecord.ToString()</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.StubAssemblyShelf">
            <summary>Stub type of StructureMap.Graph.Scanning.AssemblyShelf</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyShelf.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyShelf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyShelf.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyShelf</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyShelf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyShelf.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes">
            <summary>Stub type of StructureMap.Graph.Scanning.AssemblyTypes</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes.#ctor(System.Reflection.Assembly)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes.#ctor(System.String,System.Func{System.Collections.Generic.IEnumerable{System.Type}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyTypes</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubAssemblyTypes.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.StubTypeQuery">
            <summary>Stub type of StructureMap.Graph.Scanning.TypeQuery</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubTypeQuery.#ctor(StructureMap.Graph.Scanning.TypeClassification,System.Func{System.Type,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubTypeQuery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubTypeQuery.InitializeStub">
            <summary>Initializes a new instance of type StubTypeQuery</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubTypeQuery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubTypeQuery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Graph.Scanning.Fakes.StubTypeSet">
            <summary>Stub type of StructureMap.Graph.Scanning.TypeSet</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubTypeSet.#ctor(System.Collections.Generic.IEnumerable{StructureMap.Graph.Scanning.AssemblyTypes},System.Func{System.Type,System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubTypeSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Graph.Scanning.Fakes.StubTypeSet.InitializeStub">
            <summary>Initializes a new instance of type StubTypeSet</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubTypeSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Graph.Scanning.Fakes.StubTypeSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimArgument">
            <summary>Shim type of StructureMap.Pipeline.Argument</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArgument.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArgument.#ctor(StructureMap.Pipeline.Argument)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimArgument.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArgument.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of Argument.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArgument.AllInstances.ToString01">
            <summary>Sets the shim of Argument.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArgument.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArgument.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArgument.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArgument.CloseTypeTypeArray">
            <summary>Sets the shim of Argument.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArgument.Constructor">
            <summary>Sets the shim of Argument.Argument()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArgument.ToString">
            <summary>Sets the shim of Argument.ToString()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1">
            <summary>Shim type of StructureMap.Pipeline.ArrayCoercion`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.#ctor(StructureMap.Pipeline.ArrayCoercion{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.AllInstances.ConvertIEnumerableOfObject">
            <summary>Sets the shim of ArrayCoercion`1.Convert(IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ArrayCoercion`1.get_ElementType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.Bind(StructureMap.Pipeline.IEnumerableCoercion)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.Constructor">
            <summary>Sets the shim of ArrayCoercion`1.ArrayCoercion`1()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.ConvertIEnumerableOfObject">
            <summary>Sets the shim of ArrayCoercion`1.Convert(IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayCoercion`1.ElementTypeGet">
            <summary>Sets the shim of ArrayCoercion`1.get_ElementType()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2">
            <summary>Shim type of StructureMap.Pipeline.ArrayDefinitionExpression`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.#ctor(StructureMap.Pipeline.ArrayDefinitionExpression{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.AllInstances.ContainsActionOfIInstanceExpressionOfT1">
            <summary>Sets the shim of ArrayDefinitionExpression`2.Contains(Action`1&lt;IInstanceExpression`1&lt;!1&gt;&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.AllInstances.ContainsInstanceArray">
            <summary>Sets the shim of ArrayDefinitionExpression`2.Contains(Instance[] children)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.ConstructorT0String">
            <summary>Sets the shim of ArrayDefinitionExpression`2.ArrayDefinitionExpression`2(!0 instance, String propertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.ContainsActionOfIInstanceExpressionOfT1">
            <summary>Sets the shim of ArrayDefinitionExpression`2.Contains(Action`1&lt;IInstanceExpression`1&lt;!1&gt;&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimArrayDefinitionExpression`2.ContainsInstanceArray">
            <summary>Sets the shim of ArrayDefinitionExpression`2.Contains(Instance[] children)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector">
            <summary>Shim type of StructureMap.Pipeline.AttributeConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.#ctor(StructureMap.Pipeline.AttributeConstructorSelector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.AllInstances.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the shim of AttributeConstructorSelector.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.Bind(StructureMap.Pipeline.IConstructorSelector)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.Constructor">
            <summary>Sets the shim of AttributeConstructorSelector.AttributeConstructorSelector()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimAttributeConstructorSelector.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the shim of AttributeConstructorSelector.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle">
            <summary>Shim type of StructureMap.Pipeline.ChildContainerSingletonLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.#ctor(StructureMap.Pipeline.ChildContainerSingletonLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of ChildContainerSingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of ChildContainerSingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.ConstructorIObjectCache">
            <summary>Sets the shim of ChildContainerSingletonLifecycle.ChildContainerSingletonLifecycle(IObjectCache cache)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of ChildContainerSingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimChildContainerSingletonLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of ChildContainerSingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConfiguredInstance">
            <summary>Shim type of StructureMap.Pipeline.ConfiguredInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.#ctor(StructureMap.Pipeline.ConfiguredInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.AllInstances.thisInstanceGet">
            <summary>Sets the shim of ConfiguredInstance.get_thisInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.AllInstances.thisObject">
            <summary>Sets the shim of ConfiguredInstance.thisObject()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.Bind(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.ConstructorType">
            <summary>Sets the shim of ConfiguredInstance.ConfiguredInstance(Type pluggedType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.ConstructorTypeString">
            <summary>Sets the shim of ConfiguredInstance.ConfiguredInstance(Type pluggedType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.ConstructorTypeStringDependencyCollectionIEnumerableOfIInterceptorConstructorInfo">
            <summary>Sets the shim of ConfiguredInstance.ConfiguredInstance(Type pluggedType, String name, DependencyCollection dependencies, IEnumerable`1&lt;IInterceptor&gt; interceptors, ConstructorInfo constructor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.ConstructorTypeTypeArray">
            <summary>Sets the shim of ConfiguredInstance.ConfiguredInstance(Type templateType, Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.thisInstanceGet">
            <summary>Sets the shim of ConfiguredInstance.get_thisInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstance.thisObject">
            <summary>Sets the shim of ConfiguredInstance.thisObject()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions">
            <summary>Shim type of StructureMap.Pipeline.ConfiguredInstanceExtensions</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.DefaultLifecycleIConfiguredInstance">
            <summary>Sets the shim of ConfiguredInstanceExtensions.DefaultLifecycle(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.SettablePropertiesIConfiguredInstance">
            <summary>Sets the shim of ConfiguredInstanceExtensions.SettableProperties(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConfiguredInstanceExtensions.SingletonIConfiguredInstance">
            <summary>Sets the shim of ConfiguredInstanceExtensions.Singleton(IConfiguredInstance instance)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConstructorInstance">
            <summary>Shim type of StructureMap.Pipeline.ConstructorInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance.#ctor(StructureMap.Pipeline.ConstructorInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConstructorInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.AllInstances.thisInstanceGet">
            <summary>Sets the shim of ConstructorInstance.get_thisInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.AllInstances.thisObject">
            <summary>Sets the shim of ConstructorInstance.thisObject()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance.Bind(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.ConstructorType">
            <summary>Sets the shim of ConstructorInstance.ConstructorInstance(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.ConstructorTypeString">
            <summary>Sets the shim of ConstructorInstance.ConstructorInstance(Type pluggedType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.thisInstanceGet">
            <summary>Sets the shim of ConstructorInstance.get_thisInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance.thisObject">
            <summary>Sets the shim of ConstructorInstance.thisObject()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1">
            <summary>Shim type of StructureMap.Pipeline.ConstructorInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.#ctor(StructureMap.Pipeline.ConstructorInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ConstructorGet">
            <summary>Sets the shim of ConstructorInstance`1.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ConstructorSetConstructorInfo">
            <summary>Sets the shim of ConstructorInstance`1.set_Constructor(ConstructorInfo value)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.CtorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance{`0},StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Ctor()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.CtorOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance{`0},System.String,StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Ctor(String constructorArg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.DependenciesGet">
            <summary>Sets the shim of ConstructorInstance`1.get_Dependencies()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.EnumerableOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance{`0},StructureMap.Pipeline.ArrayDefinitionExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.EnumerableOf()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.EnumerableOfOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance{`0},System.String,StructureMap.Pipeline.ArrayDefinitionExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.EnumerableOf(String ctorOrPropertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.OverrideExplicitArguments">
            <summary>Sets the shim of ConstructorInstance`1.Override(ExplicitArguments arguments)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.PluggedTypeGet">
            <summary>Sets the shim of ConstructorInstance`1.get_PluggedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.SetterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance{`0},StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Setter()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.SetterOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance{`0},System.String,StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Setter(String setterName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ToBuilderTypePolicies">
            <summary>Sets the shim of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances.ToString01">
            <summary>Sets the shim of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.AllInstances._ctorb__0_0StructureMapAttribute">
            <summary>Sets the shim of ConstructorInstance`1.&lt;.ctor&gt;b__0_0(StructureMapAttribute x)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.Bind(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.CloseTypeTypeArray">
            <summary>Sets the shim of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ConstructorGet">
            <summary>Sets the shim of ConstructorInstance`1.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ConstructorSetConstructorInfo">
            <summary>Sets the shim of ConstructorInstance`1.set_Constructor(ConstructorInfo value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ConstructorType">
            <summary>Sets the shim of ConstructorInstance`1.ConstructorInstance`1(Type concreteType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ConstructorTypeString">
            <summary>Sets the shim of ConstructorInstance`1.ConstructorInstance`1(Type pluggedType, String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.CtorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Ctor()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.CtorOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Ctor(String constructorArg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.DependenciesGet">
            <summary>Sets the shim of ConstructorInstance`1.get_Dependencies()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.DescriptionGet">
            <summary>Sets the shim of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.EnumerableOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ArrayDefinitionExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.EnumerableOf()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.EnumerableOfOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Pipeline.ArrayDefinitionExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.EnumerableOf(String ctorOrPropertyName)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ConstructorInstance})">
            <summary>Sets the shim of ConstructorInstance`1.For()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.OverrideExplicitArguments">
            <summary>Sets the shim of ConstructorInstance`1.Override(ExplicitArguments arguments)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.PluggedTypeGet">
            <summary>Sets the shim of ConstructorInstance`1.get_PluggedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ReturnedTypeGet">
            <summary>Sets the shim of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.SetterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Setter()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.SetterOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Pipeline.DependencyExpression{`0,``0}})">
            <summary>Sets the shim of ConstructorInstance`1.Setter(String setterName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ToBuilderTypePolicies">
            <summary>Sets the shim of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ToDependencySourceType">
            <summary>Sets the shim of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ToNamedCloneString">
            <summary>Sets the shim of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1.ToString">
            <summary>Sets the shim of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorInstance`1._ctorb__0_0StructureMapAttribute">
            <summary>Sets the shim of ConstructorInstance`1.&lt;.ctor&gt;b__0_0(StructureMapAttribute x)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConstructorSelector">
            <summary>Shim type of StructureMap.Pipeline.ConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorSelector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorSelector.#ctor(StructureMap.Pipeline.ConstructorSelector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.AddIConstructorSelector">
            <summary>Sets the shim of ConstructorSelector.Add(IConstructorSelector selector)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimConstructorSelector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.AllInstances.AddIConstructorSelector">
            <summary>Sets the shim of ConstructorSelector.Add(IConstructorSelector selector)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.AllInstances.SelectTypeDependencyCollection">
            <summary>Sets the shim of ConstructorSelector.Select(Type pluggedType, DependencyCollection dependencies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.AllInstances.applyTypeIConfiguredInstance">
            <summary>Sets the shim of ConstructorSelector.apply(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorSelector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorSelector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimConstructorSelector.Bind(StructureMap.IInstancePolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.ConstructorPluginGraph">
            <summary>Sets the shim of ConstructorSelector.ConstructorSelector(PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.SelectTypeDependencyCollection">
            <summary>Sets the shim of ConstructorSelector.Select(Type pluggedType, DependencyCollection dependencies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimConstructorSelector.applyTypeIConfiguredInstance">
            <summary>Sets the shim of ConstructorSelector.apply(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimContainerLifecycle">
            <summary>Shim type of StructureMap.Pipeline.ContainerLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.#ctor(StructureMap.Pipeline.ContainerLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of ContainerLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of ContainerLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.Constructor">
            <summary>Sets the shim of ContainerLifecycle.ContainerLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of ContainerLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of ContainerLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache">
            <summary>Shim type of StructureMap.Pipeline.ContainerSpecificObjectCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.#ctor(StructureMap.Pipeline.ContainerSpecificObjectCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.AllInstances.ReleaseObject">
            <summary>Sets the shim of ContainerSpecificObjectCache.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.AllInstances.TrackedGet">
            <summary>Sets the shim of ContainerSpecificObjectCache.get_Tracked()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.AllInstances.buildWithSessionTypeInstanceIBuildSession">
            <summary>Sets the shim of ContainerSpecificObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.Bind(StructureMap.Pipeline.IObjectCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.Bind(StructureMap.Pipeline.ITransientTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.Constructor">
            <summary>Sets the shim of ContainerSpecificObjectCache.ContainerSpecificObjectCache()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.ReleaseObject">
            <summary>Sets the shim of ContainerSpecificObjectCache.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.TrackedGet">
            <summary>Sets the shim of ContainerSpecificObjectCache.get_Tracked()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimContainerSpecificObjectCache.buildWithSessionTypeInstanceIBuildSession">
            <summary>Sets the shim of ContainerSpecificObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimDefaultInstance">
            <summary>Shim type of StructureMap.Pipeline.DefaultInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDefaultInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDefaultInstance.#ctor(StructureMap.Pipeline.DefaultInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimDefaultInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.AllInstances.DescriptionGet">
            <summary>Sets the shim of DefaultInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of DefaultInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of DefaultInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of DefaultInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDefaultInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDefaultInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDefaultInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.Constructor">
            <summary>Sets the shim of DefaultInstance.DefaultInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.DescriptionGet">
            <summary>Sets the shim of DefaultInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.ReturnedTypeGet">
            <summary>Sets the shim of DefaultInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.ToDependencySourceType">
            <summary>Sets the shim of DefaultInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDefaultInstance.ToNamedCloneString">
            <summary>Sets the shim of DefaultInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimDependencyCollection">
            <summary>Shim type of StructureMap.Pipeline.DependencyCollection</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.#ctor(StructureMap.Pipeline.DependencyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddArgument">
            <summary>Sets the shim of DependencyCollection.Add(Argument argument)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddForConstructorParameterParameterInfoObject">
            <summary>Sets the shim of DependencyCollection.AddForConstructorParameter(ParameterInfo parameter, Object valueOrInstance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddForPropertyPropertyInfoObject">
            <summary>Sets the shim of DependencyCollection.AddForProperty(PropertyInfo property, Object valueOrInstance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddOf1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Pipeline.Instance})">
            <summary>Sets the shim of DependencyCollection.Add(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of DependencyCollection.Add(!!0 valueOrInstance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddStringIEnumerableOfInstance">
            <summary>Sets the shim of DependencyCollection.Add(String name, IEnumerable`1&lt;Instance&gt; items)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddStringObject">
            <summary>Sets the shim of DependencyCollection.Add(String name, Object dependency)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddStringTypeObject">
            <summary>Sets the shim of DependencyCollection.Add(String name, Type type, Object dependency)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AddTypeObject">
            <summary>Sets the shim of DependencyCollection.Add(Type type, Object dependency)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddArgument">
            <summary>Sets the shim of DependencyCollection.Add(Argument argument)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddForConstructorParameterParameterInfoObject">
            <summary>Sets the shim of DependencyCollection.AddForConstructorParameter(ParameterInfo parameter, Object valueOrInstance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddForPropertyPropertyInfoObject">
            <summary>Sets the shim of DependencyCollection.AddForProperty(PropertyInfo property, Object valueOrInstance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddOf1Instance``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Pipeline.DependencyCollection,StructureMap.Pipeline.Instance})">
            <summary>Sets the shim of DependencyCollection.Add(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Pipeline.DependencyCollection,``0})">
            <summary>Sets the shim of DependencyCollection.Add(!!0 valueOrInstance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddStringIEnumerableOfInstance">
            <summary>Sets the shim of DependencyCollection.Add(String name, IEnumerable`1&lt;Instance&gt; items)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddStringObject">
            <summary>Sets the shim of DependencyCollection.Add(String name, Object dependency)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddStringTypeObject">
            <summary>Sets the shim of DependencyCollection.Add(String name, Type type, Object dependency)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.AddTypeObject">
            <summary>Sets the shim of DependencyCollection.Add(Type type, Object dependency)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.Clone">
            <summary>Sets the shim of DependencyCollection.Clone()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.CopyToDependencyCollection">
            <summary>Sets the shim of DependencyCollection.CopyTo(DependencyCollection peer)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.FindByTypeAndNameTypeString">
            <summary>Sets the shim of DependencyCollection.FindByTypeAndName(Type propertyType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.FindByTypeOrNameTypeString">
            <summary>Sets the shim of DependencyCollection.FindByTypeOrName(Type argumentType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of DependencyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.GetString">
            <summary>Sets the shim of DependencyCollection.Get(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.HasAny">
            <summary>Sets the shim of DependencyCollection.HasAny()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.HasString">
            <summary>Sets the shim of DependencyCollection.Has(String propertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.InsertArgument">
            <summary>Sets the shim of DependencyCollection.Insert(Argument argument)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.RemoveByNameString">
            <summary>Sets the shim of DependencyCollection.RemoveByName(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DependencyCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.findByAllTypeString">
            <summary>Sets the shim of DependencyCollection.findByAll(Type argumentType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.findByNameString">
            <summary>Sets the shim of DependencyCollection.findByName(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.AllInstances.findByTypeOnlyType">
            <summary>Sets the shim of DependencyCollection.findByTypeOnly(Type argumentType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyCollection.Bind(System.Collections.Generic.IEnumerable{StructureMap.Pipeline.Argument})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.Clone">
            <summary>Sets the shim of DependencyCollection.Clone()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.Constructor">
            <summary>Sets the shim of DependencyCollection.DependencyCollection()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.CopyToDependencyCollection">
            <summary>Sets the shim of DependencyCollection.CopyTo(DependencyCollection peer)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.FindByTypeAndNameTypeString">
            <summary>Sets the shim of DependencyCollection.FindByTypeAndName(Type propertyType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.FindByTypeOrNameTypeString">
            <summary>Sets the shim of DependencyCollection.FindByTypeOrName(Type argumentType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.GetEnumerator">
            <summary>Sets the shim of DependencyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.GetString">
            <summary>Sets the shim of DependencyCollection.Get(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.HasAny">
            <summary>Sets the shim of DependencyCollection.HasAny()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.HasString">
            <summary>Sets the shim of DependencyCollection.Has(String propertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.InsertArgument">
            <summary>Sets the shim of DependencyCollection.Insert(Argument argument)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.RemoveByNameString">
            <summary>Sets the shim of DependencyCollection.RemoveByName(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DependencyCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.findByAllTypeString">
            <summary>Sets the shim of DependencyCollection.findByAll(Type argumentType, String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.findByNameString">
            <summary>Sets the shim of DependencyCollection.findByName(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyCollection.findByTypeOnlyType">
            <summary>Sets the shim of DependencyCollection.findByTypeOnly(Type argumentType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2">
            <summary>Shim type of StructureMap.Pipeline.DependencyExpression`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.#ctor(StructureMap.Pipeline.DependencyExpression{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsExpressionOfFuncOfIContextT1">
            <summary>Sets the shim of DependencyExpression`2.Is(Expression`1&lt;Func`2&lt;IContext,!1&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsExpressionOfFuncOfT1">
            <summary>Sets the shim of DependencyExpression`2.Is(Expression`1&lt;Func`1&lt;!1&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsInstance">
            <summary>Sets the shim of DependencyExpression`2.Is(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsNamedInstanceString">
            <summary>Sets the shim of DependencyExpression`2.IsNamedInstance(String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.DependencyExpression{`0,`1},`0})">
            <summary>Sets the shim of DependencyExpression`2.Is()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsOf1ActionOfSmartInstanceOfM0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.DependencyExpression{`0,`1},System.Action{StructureMap.Pipeline.SmartInstance{``0,`1}},`0})">
            <summary>Sets the shim of DependencyExpression`2.Is(Action`1&lt;SmartInstance`2&lt;!!0,!1&gt;&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsSpecialActionOfIInstanceExpressionOfT1">
            <summary>Sets the shim of DependencyExpression`2.IsSpecial(Action`1&lt;IInstanceExpression`1&lt;!1&gt;&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsStringFuncOfIContextT1">
            <summary>Sets the shim of DependencyExpression`2.Is(String description, Func`2&lt;IContext,!1&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsStringFuncOfT1">
            <summary>Sets the shim of DependencyExpression`2.Is(String description, Func`1&lt;!1&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsT1">
            <summary>Sets the shim of DependencyExpression`2.Is(!1 value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.IsTheDefault">
            <summary>Sets the shim of DependencyExpression`2.IsTheDefault()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances.NamedString">
            <summary>Sets the shim of DependencyExpression`2.Named(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.AllInstances._IsSpecialb__3_0Instance">
            <summary>Sets the shim of DependencyExpression`2.&lt;IsSpecial&gt;b__3_0(Instance i)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.ConstructorT0String">
            <summary>Sets the shim of DependencyExpression`2.DependencyExpression`2(!0 instance, String propertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsExpressionOfFuncOfIContextT1">
            <summary>Sets the shim of DependencyExpression`2.Is(Expression`1&lt;Func`2&lt;IContext,!1&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsExpressionOfFuncOfT1">
            <summary>Sets the shim of DependencyExpression`2.Is(Expression`1&lt;Func`1&lt;!1&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsInstance">
            <summary>Sets the shim of DependencyExpression`2.Is(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsNamedInstanceString">
            <summary>Sets the shim of DependencyExpression`2.IsNamedInstance(String instanceKey)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{`0})">
            <summary>Sets the shim of DependencyExpression`2.Is()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsOf1ActionOfSmartInstanceOfM0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{StructureMap.Pipeline.SmartInstance{``0,`1}},`0})">
            <summary>Sets the shim of DependencyExpression`2.Is(Action`1&lt;SmartInstance`2&lt;!!0,!1&gt;&gt; configure)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsSpecialActionOfIInstanceExpressionOfT1">
            <summary>Sets the shim of DependencyExpression`2.IsSpecial(Action`1&lt;IInstanceExpression`1&lt;!1&gt;&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsStringFuncOfIContextT1">
            <summary>Sets the shim of DependencyExpression`2.Is(String description, Func`2&lt;IContext,!1&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsStringFuncOfT1">
            <summary>Sets the shim of DependencyExpression`2.Is(String description, Func`1&lt;!1&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsT1">
            <summary>Sets the shim of DependencyExpression`2.Is(!1 value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.IsTheDefault">
            <summary>Sets the shim of DependencyExpression`2.IsTheDefault()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2.NamedString">
            <summary>Sets the shim of DependencyExpression`2.Named(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimDependencyExpression`2._IsSpecialb__3_0Instance">
            <summary>Sets the shim of DependencyExpression`2.&lt;IsSpecial&gt;b__3_0(Instance i)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimEnumerableInstance">
            <summary>Shim type of StructureMap.Pipeline.EnumerableInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.#ctor(StructureMap.Pipeline.EnumerableInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.AllInstances.ChildrenGet">
            <summary>Sets the shim of EnumerableInstance.get_Children()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.AllInstances.DescriptionGet">
            <summary>Sets the shim of EnumerableInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of EnumerableInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of EnumerableInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.ChildrenGet">
            <summary>Sets the shim of EnumerableInstance.get_Children()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.ConstructorIEnumerableOfInstance">
            <summary>Sets the shim of EnumerableInstance.EnumerableInstance(IEnumerable`1&lt;Instance&gt; children)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.DescriptionGet">
            <summary>Sets the shim of EnumerableInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.DetermineCoercionType">
            <summary>Sets the shim of EnumerableInstance.DetermineCoercion(Type propertyType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.DetermineElementTypeType">
            <summary>Sets the shim of EnumerableInstance.DetermineElementType(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.IsEnumerableType">
            <summary>Sets the shim of EnumerableInstance.IsEnumerable(Type type)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.OpenEnumerableTypesGet">
            <summary>Sets the shim of EnumerableInstance.get_OpenEnumerableTypes()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.ReturnedTypeGet">
            <summary>Sets the shim of EnumerableInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.StaticConstructor">
            <summary>Sets the shim of EnumerableInstance.EnumerableInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.ToDependencySourceType">
            <summary>Sets the shim of EnumerableInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimEnumerableInstance.determineCoercionTypeType">
            <summary>Sets the shim of EnumerableInstance.determineCoercionType(Type propertyType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimExplicitArguments">
            <summary>Shim type of StructureMap.Pipeline.ExplicitArguments</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.#ctor(StructureMap.Pipeline.ExplicitArguments)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.ConfigureIConfiguredInstance">
            <summary>Sets the shim of ExplicitArguments.Configure(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.DefaultsGet">
            <summary>Sets the shim of ExplicitArguments.get_Defaults()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.GetArgString">
            <summary>Sets the shim of ExplicitArguments.GetArg(String key)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,``0})">
            <summary>Sets the shim of ExplicitArguments.Get()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.GetType01">
            <summary>Sets the shim of ExplicitArguments.Get(Type type)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.HasString">
            <summary>Sets the shim of ExplicitArguments.Has(String propertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.HasType">
            <summary>Sets the shim of ExplicitArguments.Has(Type type)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.OnlyNeedsDefaults">
            <summary>Sets the shim of ExplicitArguments.OnlyNeedsDefaults()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.SetArgStringObject">
            <summary>Sets the shim of ExplicitArguments.SetArg(String key, Object argValue)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.SetOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExplicitArguments,``0,StructureMap.Pipeline.ExplicitArguments})">
            <summary>Sets the shim of ExplicitArguments.Set(!!0 arg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.SetTypeObject">
            <summary>Sets the shim of ExplicitArguments.Set(Type pluginType, Object arg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.AllInstances.ToString01">
            <summary>Sets the shim of ExplicitArguments.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.ConfigureIConfiguredInstance">
            <summary>Sets the shim of ExplicitArguments.Configure(IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.Constructor">
            <summary>Sets the shim of ExplicitArguments.ExplicitArguments()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of ExplicitArguments.ExplicitArguments(IDictionary`2&lt;String,Object&gt; args)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.DefaultsGet">
            <summary>Sets the shim of ExplicitArguments.get_Defaults()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.GetArgString">
            <summary>Sets the shim of ExplicitArguments.GetArg(String key)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ExplicitArguments.Get()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.GetType">
            <summary>Sets the shim of ExplicitArguments.Get(Type type)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.HasString">
            <summary>Sets the shim of ExplicitArguments.Has(String propertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.HasType">
            <summary>Sets the shim of ExplicitArguments.Has(Type type)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.OnlyNeedsDefaults">
            <summary>Sets the shim of ExplicitArguments.OnlyNeedsDefaults()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.SetArgStringObject">
            <summary>Sets the shim of ExplicitArguments.SetArg(String key, Object argValue)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExplicitArguments.SetOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,StructureMap.Pipeline.ExplicitArguments})">
            <summary>Sets the shim of ExplicitArguments.Set(!!0 arg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.SetTypeObject">
            <summary>Sets the shim of ExplicitArguments.Set(Type pluginType, Object arg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExplicitArguments.ToString">
            <summary>Sets the shim of ExplicitArguments.ToString()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1">
            <summary>Shim type of StructureMap.Pipeline.ExpressedInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.#ctor(StructureMap.Pipeline.ExpressedInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.AlwaysUnique">
            <summary>Sets the shim of ExpressedInstance`1.AlwaysUnique()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.ContainerScoped">
            <summary>Sets the shim of ExpressedInstance`1.ContainerScoped()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.InterceptWithIInterceptor">
            <summary>Sets the shim of ExpressedInstance`1.InterceptWith(IInterceptor interceptor)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.LifecycleIsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ExpressedInstance{`0},`0})">
            <summary>Sets the shim of ExpressedInstance`1.LifecycleIs()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.NamedString">
            <summary>Sets the shim of ExpressedInstance`1.Named(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.Singleton">
            <summary>Sets the shim of ExpressedInstance`1.Singleton()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AllInstances.Transient">
            <summary>Sets the shim of ExpressedInstance`1.Transient()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.AlwaysUnique">
            <summary>Sets the shim of ExpressedInstance`1.AlwaysUnique()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.Constructor">
            <summary>Sets the shim of ExpressedInstance`1.ExpressedInstance`1()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.ContainerScoped">
            <summary>Sets the shim of ExpressedInstance`1.ContainerScoped()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.InterceptWithIInterceptor">
            <summary>Sets the shim of ExpressedInstance`1.InterceptWith(IInterceptor interceptor)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.LifecycleIsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{`0})">
            <summary>Sets the shim of ExpressedInstance`1.LifecycleIs()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.NamedString">
            <summary>Sets the shim of ExpressedInstance`1.Named(String instanceKey)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.Singleton">
            <summary>Sets the shim of ExpressedInstance`1.Singleton()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`1.Transient">
            <summary>Sets the shim of ExpressedInstance`1.Transient()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3">
            <summary>Shim type of StructureMap.Pipeline.ExpressedInstance`3</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.#ctor(StructureMap.Pipeline.ExpressedInstance{`0,`1,`2})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.DecorateWithExpressionOfFuncOfIContextT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(Expression`1&lt;Func`3&lt;IContext,!2,!2&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.DecorateWithExpressionOfFuncOfT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(Expression`1&lt;Func`2&lt;!2,!2&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.DecorateWithStringFuncOfIContextT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(String description, Func`3&lt;IContext,!2,!2&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.DecorateWithStringFuncOfT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(String description, Func`2&lt;!2,!2&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.OnCreationExpressionOfActionOfIContextT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(Expression`1&lt;Action`2&lt;IContext,!1&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.OnCreationExpressionOfActionOfT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(Expression`1&lt;Action`1&lt;!1&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.OnCreationStringActionOfIContextT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(String description, Action`2&lt;IContext,!1&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.AllInstances.OnCreationStringActionOfT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(String description, Action`1&lt;!1&gt; handler)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.Constructor">
            <summary>Sets the shim of ExpressedInstance`3.ExpressedInstance`3()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.DecorateWithExpressionOfFuncOfIContextT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(Expression`1&lt;Func`3&lt;IContext,!2,!2&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.DecorateWithExpressionOfFuncOfT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(Expression`1&lt;Func`2&lt;!2,!2&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.DecorateWithStringFuncOfIContextT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(String description, Func`3&lt;IContext,!2,!2&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.DecorateWithStringFuncOfT2T2">
            <summary>Sets the shim of ExpressedInstance`3.DecorateWith(String description, Func`2&lt;!2,!2&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.OnCreationExpressionOfActionOfIContextT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(Expression`1&lt;Action`2&lt;IContext,!1&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.OnCreationExpressionOfActionOfT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(Expression`1&lt;Action`1&lt;!1&gt;&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.OnCreationStringActionOfIContextT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(String description, Action`2&lt;IContext,!1&gt; handler)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimExpressedInstance`3.OnCreationStringActionOfT1">
            <summary>Sets the shim of ExpressedInstance`3.OnCreation(String description, Action`1&lt;!1&gt; handler)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimFirstConstructor">
            <summary>Shim type of StructureMap.Pipeline.FirstConstructor</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimFirstConstructor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimFirstConstructor.#ctor(StructureMap.Pipeline.FirstConstructor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimFirstConstructor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimFirstConstructor.AllInstances.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the shim of FirstConstructor.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimFirstConstructor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimFirstConstructor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimFirstConstructor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimFirstConstructor.Bind(StructureMap.Pipeline.IConstructorSelector)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimFirstConstructor.Constructor">
            <summary>Sets the shim of FirstConstructor.FirstConstructor()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimFirstConstructor.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the shim of FirstConstructor.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector">
            <summary>Shim type of StructureMap.Pipeline.GreediestConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.#ctor(StructureMap.Pipeline.GreediestConstructorSelector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.AllInstances.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the shim of GreediestConstructorSelector.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.Bind(StructureMap.Pipeline.IConstructorSelector)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.Constructor">
            <summary>Sets the shim of GreediestConstructorSelector.GreediestConstructorSelector()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the shim of GreediestConstructorSelector.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimGreediestConstructorSelector.HasMissingPrimitivesConstructorInfoDependencyCollection">
            <summary>Sets the shim of GreediestConstructorSelector.HasMissingPrimitives(ConstructorInfo ctor, DependencyCollection dependencies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimInstance">
            <summary>Shim type of StructureMap.Pipeline.Instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimInstance.#ctor(StructureMap.Pipeline.Instance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AddInterceptorIInterceptor">
            <summary>Sets the shim of Instance.AddInterceptor(IInterceptor interceptor)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.AddInterceptorIInterceptor">
            <summary>Sets the shim of Instance.AddInterceptor(IInterceptor interceptor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.ApplyAllPoliciesTypePolicies">
            <summary>Sets the shim of Instance.ApplyAllPolicies(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.ClearBuildPlan">
            <summary>Sets the shim of Instance.ClearBuildPlan()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.CreateToken">
            <summary>Sets the shim of Instance.CreateToken()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.DetermineLifecycleILifecycle">
            <summary>Sets the shim of Instance.DetermineLifecycle(ILifecycle parent)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.EqualsInstance">
            <summary>Sets the shim of Instance.Equals(Instance other)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.EqualsObject">
            <summary>Sets the shim of Instance.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.GetHashCode01">
            <summary>Sets the shim of Instance.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.HasBuildPlan">
            <summary>Sets the shim of Instance.HasBuildPlan()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.HasExplicitName">
            <summary>Sets the shim of Instance.HasExplicitName()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.IdGet">
            <summary>Sets the shim of Instance.get_Id()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.IdSetGuid">
            <summary>Sets the shim of Instance.set_Id(Guid value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.InstanceKeyType">
            <summary>Sets the shim of Instance.InstanceKey(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.InterceptorsGet">
            <summary>Sets the shim of Instance.get_Interceptors()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.NameGet">
            <summary>Sets the shim of Instance.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.NameSetString">
            <summary>Sets the shim of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.ResolveBuildPlanTypePolicies">
            <summary>Sets the shim of Instance.ResolveBuildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.ToBuilderTypePolicies">
            <summary>Sets the shim of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.buildPlanTypePolicies">
            <summary>Sets the shim of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.AllInstances.toDescriptionType">
            <summary>Sets the shim of Instance.toDescription(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.ApplyAllPoliciesTypePolicies">
            <summary>Sets the shim of Instance.ApplyAllPolicies(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.ClearBuildPlan">
            <summary>Sets the shim of Instance.ClearBuildPlan()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.CloseTypeTypeArray">
            <summary>Sets the shim of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.Constructor">
            <summary>Sets the shim of Instance.Instance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.CreateToken">
            <summary>Sets the shim of Instance.CreateToken()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.DetermineLifecycleILifecycle">
            <summary>Sets the shim of Instance.DetermineLifecycle(ILifecycle parent)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.EqualsInstance">
            <summary>Sets the shim of Instance.Equals(Instance other)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.EqualsObject">
            <summary>Sets the shim of Instance.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.GetHashCode">
            <summary>Sets the shim of Instance.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.HasBuildPlan">
            <summary>Sets the shim of Instance.HasBuildPlan()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.HasExplicitName">
            <summary>Sets the shim of Instance.HasExplicitName()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.IdGet">
            <summary>Sets the shim of Instance.get_Id()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.IdSetGuid">
            <summary>Sets the shim of Instance.set_Id(Guid value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.InstanceKeyType">
            <summary>Sets the shim of Instance.InstanceKey(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.InterceptorsGet">
            <summary>Sets the shim of Instance.get_Interceptors()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.NameGet">
            <summary>Sets the shim of Instance.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.NameSetString">
            <summary>Sets the shim of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.ResolveBuildPlanTypePolicies">
            <summary>Sets the shim of Instance.ResolveBuildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.ToBuilderTypePolicies">
            <summary>Sets the shim of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.ToNamedCloneString">
            <summary>Sets the shim of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.buildPlanTypePolicies">
            <summary>Sets the shim of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimInstance.toDescriptionType">
            <summary>Sets the shim of Instance.toDescription(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1">
            <summary>Shim type of StructureMap.Pipeline.LambdaInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.#ctor(StructureMap.Pipeline.LambdaInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.Bind(StructureMap.Pipeline.LambdaInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.ConstructorExpressionOfFuncOfIContextT0">
            <summary>Sets the shim of LambdaInstance`1.LambdaInstance`1(Expression`1&lt;Func`2&lt;IContext,!0&gt;&gt; builder)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.ConstructorExpressionOfFuncOfT0">
            <summary>Sets the shim of LambdaInstance`1.LambdaInstance`1(Expression`1&lt;Func`1&lt;!0&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.ConstructorStringFuncOfIContextT0">
            <summary>Sets the shim of LambdaInstance`1.LambdaInstance`1(String description, Func`2&lt;IContext,!0&gt; builder)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`1.ConstructorStringFuncOfT0">
            <summary>Sets the shim of LambdaInstance`1.LambdaInstance`1(String description, Func`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2">
            <summary>Shim type of StructureMap.Pipeline.LambdaInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.#ctor(StructureMap.Pipeline.LambdaInstance{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.DescriptionGet">
            <summary>Sets the shim of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.StructureMapBuildingIDependencySourceAcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of LambdaInstance`2.StructureMap.Building.IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of LambdaInstance`2.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.AllInstances.thisInstanceGet">
            <summary>Sets the shim of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.Bind(StructureMap.Pipeline.LambdaInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.CloseTypeTypeArray">
            <summary>Sets the shim of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ConstructorExpressionOfFuncOfIContextT0">
            <summary>Sets the shim of LambdaInstance`2.LambdaInstance`2(Expression`1&lt;Func`2&lt;IContext,!0&gt;&gt; builder)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ConstructorExpressionOfFuncOfT0">
            <summary>Sets the shim of LambdaInstance`2.LambdaInstance`2(Expression`1&lt;Func`1&lt;!0&gt;&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ConstructorStringExpression">
            <summary>Sets the shim of LambdaInstance`2.LambdaInstance`2(String description, Expression builder)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ConstructorStringFuncOfIContextT0">
            <summary>Sets the shim of LambdaInstance`2.LambdaInstance`2(String description, Func`2&lt;IContext,!0&gt; builder)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ConstructorStringFuncOfT0">
            <summary>Sets the shim of LambdaInstance`2.LambdaInstance`2(String description, Func`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.DescriptionGet">
            <summary>Sets the shim of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ReturnedTypeGet">
            <summary>Sets the shim of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.StructureMapBuildingIDependencySourceAcceptVisitorIDependencyVisitor">
            <summary>Sets the shim of LambdaInstance`2.StructureMap.Building.IDependencySource.AcceptVisitor(IDependencyVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ToDependencySourceType">
            <summary>Sets the shim of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ToExpressionParameterExpressionParameterExpression">
            <summary>Sets the shim of LambdaInstance`2.ToExpression(ParameterExpression session, ParameterExpression context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.ToNamedCloneString">
            <summary>Sets the shim of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLambdaInstance`2.thisInstanceGet">
            <summary>Sets the shim of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLifecycleBase">
            <summary>Shim type of StructureMap.Pipeline.LifecycleBase</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleBase.#ctor(StructureMap.Pipeline.LifecycleBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLifecycleBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleBase.AllInstances.DescriptionGet">
            <summary>Sets the shim of LifecycleBase.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleBase.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleBase.Constructor">
            <summary>Sets the shim of LifecycleBase.LifecycleBase()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleBase.DescriptionGet">
            <summary>Sets the shim of LifecycleBase.get_Description()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache">
            <summary>Shim type of StructureMap.Pipeline.LifecycleObjectCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.#ctor(StructureMap.Pipeline.LifecycleObjectCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.CountGet">
            <summary>Sets the shim of LifecycleObjectCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.DisposeAndClear">
            <summary>Sets the shim of LifecycleObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.EjectTypeInstance">
            <summary>Sets the shim of LifecycleObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of LifecycleObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.HasTypeInstance">
            <summary>Sets the shim of LifecycleObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.SetTypeInstanceObject">
            <summary>Sets the shim of LifecycleObjectCache.Set(Type pluginType, Instance instance, Object value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances._DisposeAndClearb__10_0">
            <summary>Sets the shim of LifecycleObjectCache.&lt;DisposeAndClear&gt;b__10_0()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances._get_Countb__4_0">
            <summary>Sets the shim of LifecycleObjectCache.&lt;get_Count&gt;b__4_0()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.AllInstances.buildWithSessionTypeInstanceIBuildSession">
            <summary>Sets the shim of LifecycleObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.Bind(StructureMap.Pipeline.IObjectCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.Constructor">
            <summary>Sets the shim of LifecycleObjectCache.LifecycleObjectCache()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.CountGet">
            <summary>Sets the shim of LifecycleObjectCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.DisposeAndClear">
            <summary>Sets the shim of LifecycleObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.EjectTypeInstance">
            <summary>Sets the shim of LifecycleObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of LifecycleObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.HasTypeInstance">
            <summary>Sets the shim of LifecycleObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.SetTypeInstanceObject">
            <summary>Sets the shim of LifecycleObjectCache.Set(Type pluginType, Instance instance, Object value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache._DisposeAndClearb__10_0">
            <summary>Sets the shim of LifecycleObjectCache.&lt;DisposeAndClear&gt;b__10_0()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache._get_Countb__4_0">
            <summary>Sets the shim of LifecycleObjectCache.&lt;get_Count&gt;b__4_0()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycleObjectCache.buildWithSessionTypeInstanceIBuildSession">
            <summary>Sets the shim of LifecycleObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimLifecycles">
            <summary>Shim type of StructureMap.Pipeline.Lifecycles</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycles.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycles.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycles.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycles.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycles.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ILifecycle})">
            <summary>Sets the shim of Lifecycles.Get()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimLifecycles.RegisterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ILifecycle})">
            <summary>Sets the shim of Lifecycles.Register()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimLifecycles.StaticConstructor">
            <summary>Sets the shim of Lifecycles.Lifecycles()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimListCoercion`1">
            <summary>Shim type of StructureMap.Pipeline.ListCoercion`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimListCoercion`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimListCoercion`1.#ctor(StructureMap.Pipeline.ListCoercion{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimListCoercion`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimListCoercion`1.AllInstances.ConvertIEnumerableOfObject">
            <summary>Sets the shim of ListCoercion`1.Convert(IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimListCoercion`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of ListCoercion`1.get_ElementType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimListCoercion`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimListCoercion`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimListCoercion`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimListCoercion`1.Bind(StructureMap.Pipeline.IEnumerableCoercion)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimListCoercion`1.Constructor">
            <summary>Sets the shim of ListCoercion`1.ListCoercion`1()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimListCoercion`1.ConvertIEnumerableOfObject">
            <summary>Sets the shim of ListCoercion`1.Convert(IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimListCoercion`1.ElementTypeGet">
            <summary>Sets the shim of ListCoercion`1.get_ElementType()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimNullInstance">
            <summary>Shim type of StructureMap.Pipeline.NullInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNullInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNullInstance.#ctor(StructureMap.Pipeline.NullInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimNullInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.AllInstances.DescriptionGet">
            <summary>Sets the shim of NullInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of NullInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of NullInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNullInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNullInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNullInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.Constructor">
            <summary>Sets the shim of NullInstance.NullInstance()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.DescriptionGet">
            <summary>Sets the shim of NullInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.ReturnedTypeGet">
            <summary>Sets the shim of NullInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNullInstance.ToDependencySourceType">
            <summary>Sets the shim of NullInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimNulloTransientCache">
            <summary>Shim type of StructureMap.Pipeline.NulloTransientCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.#ctor(StructureMap.Pipeline.NulloTransientCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.CountGet">
            <summary>Sets the shim of NulloTransientCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.DisposeAndClear">
            <summary>Sets the shim of NulloTransientCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.EjectTypeInstance">
            <summary>Sets the shim of NulloTransientCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of NulloTransientCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.HasTypeInstance">
            <summary>Sets the shim of NulloTransientCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.LockerGet">
            <summary>Sets the shim of NulloTransientCache.get_Locker()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.ReleaseObject">
            <summary>Sets the shim of NulloTransientCache.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.AllInstances.TrackedGet">
            <summary>Sets the shim of NulloTransientCache.get_Tracked()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.Bind(StructureMap.Pipeline.IObjectCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.Bind(StructureMap.Pipeline.ITransientTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.Constructor">
            <summary>Sets the shim of NulloTransientCache.NulloTransientCache()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.CountGet">
            <summary>Sets the shim of NulloTransientCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.DisposeAndClear">
            <summary>Sets the shim of NulloTransientCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.EjectTypeInstance">
            <summary>Sets the shim of NulloTransientCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of NulloTransientCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.HasTypeInstance">
            <summary>Sets the shim of NulloTransientCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.LockerGet">
            <summary>Sets the shim of NulloTransientCache.get_Locker()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.ReleaseObject">
            <summary>Sets the shim of NulloTransientCache.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimNulloTransientCache.TrackedGet">
            <summary>Sets the shim of NulloTransientCache.get_Tracked()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimObjectInstance">
            <summary>Shim type of StructureMap.Pipeline.ObjectInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.#ctor(StructureMap.Pipeline.ObjectInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimObjectInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.Bind(StructureMap.Building.IBuildPlan)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.Bind(StructureMap.Building.IBuildPlanVisitable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.Bind(StructureMap.Pipeline.IValue)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance.ConstructorObject">
            <summary>Sets the shim of ObjectInstance.ObjectInstance(Object anObject)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimObjectInstance`2">
            <summary>Shim type of StructureMap.Pipeline.ObjectInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.#ctor(StructureMap.Pipeline.ObjectInstance{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.DescriptionGet">
            <summary>Sets the shim of ObjectInstance`2.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.Dispose">
            <summary>Sets the shim of ObjectInstance`2.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ObjectGet">
            <summary>Sets the shim of ObjectInstance`2.get_Object()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ObjectSetT0">
            <summary>Sets the shim of ObjectInstance`2.set_Object(!0 value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of ObjectInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.StructureMapBuildingIBuildPlanBuildIBuildSessionIContext">
            <summary>Sets the shim of ObjectInstance`2.StructureMap.Building.IBuildPlan.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.StructureMapBuildingIBuildPlanVisitableAcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of ObjectInstance`2.StructureMap.Building.IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of ObjectInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of ObjectInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ToString01">
            <summary>Sets the shim of ObjectInstance`2.ToString()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.ValueStructureMapPipelineIValueget">
            <summary>Sets the shim of ObjectInstance`2.StructureMap.Pipeline.IValue.get_Value()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.buildPlanTypePolicies">
            <summary>Sets the shim of ObjectInstance`2.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.AllInstances.thisInstanceGet">
            <summary>Sets the shim of ObjectInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Bind(StructureMap.Building.IBuildPlan)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Bind(StructureMap.Building.IBuildPlanVisitable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Bind(StructureMap.Pipeline.IValue)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ConstructorT0">
            <summary>Sets the shim of ObjectInstance`2.ObjectInstance`2(!0 anObject)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.DescriptionGet">
            <summary>Sets the shim of ObjectInstance`2.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.Dispose">
            <summary>Sets the shim of ObjectInstance`2.Dispose()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ObjectGet">
            <summary>Sets the shim of ObjectInstance`2.get_Object()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ObjectSetT0">
            <summary>Sets the shim of ObjectInstance`2.set_Object(!0 value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ReturnedTypeGet">
            <summary>Sets the shim of ObjectInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.StructureMapBuildingIBuildPlanBuildIBuildSessionIContext">
            <summary>Sets the shim of ObjectInstance`2.StructureMap.Building.IBuildPlan.Build(IBuildSession session, IContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.StructureMapBuildingIBuildPlanVisitableAcceptVisitorIBuildPlanVisitor">
            <summary>Sets the shim of ObjectInstance`2.StructureMap.Building.IBuildPlanVisitable.AcceptVisitor(IBuildPlanVisitor visitor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ToDependencySourceType">
            <summary>Sets the shim of ObjectInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ToNamedCloneString">
            <summary>Sets the shim of ObjectInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ToString">
            <summary>Sets the shim of ObjectInstance`2.ToString()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.ValueStructureMapPipelineIValueget">
            <summary>Sets the shim of ObjectInstance`2.StructureMap.Pipeline.IValue.get_Value()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.buildPlanTypePolicies">
            <summary>Sets the shim of ObjectInstance`2.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectInstance`2.thisInstanceGet">
            <summary>Sets the shim of ObjectInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimObjectLifecycle">
            <summary>Shim type of StructureMap.Pipeline.ObjectLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.#ctor(StructureMap.Pipeline.ObjectLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of ObjectLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of ObjectLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.Constructor">
            <summary>Sets the shim of ObjectLifecycle.ObjectLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of ObjectLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimObjectLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of ObjectLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions">
            <summary>Shim type of StructureMap.Pipeline.ReaderWriterLockExtensions</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.MaybeWriteOf1ReaderWriterLockSlimFuncOfM0FuncOfBooleanAction``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.ReaderWriterLockSlim,System.Func{``0},System.Func{System.Boolean},System.Action,``0})">
            <summary>Sets the shim of ReaderWriterLockExtensions.MaybeWrite(ReaderWriterLockSlim theLock, Func`1&lt;!!0&gt; answer, Func`1&lt;Boolean&gt; missingTest, Action write)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.MaybeWriteReaderWriterLockSlimAction">
            <summary>Sets the shim of ReaderWriterLockExtensions.MaybeWrite(ReaderWriterLockSlim theLock, Action action)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.ReadOf1ReaderWriterLockSlimFuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.ReaderWriterLockSlim,System.Func{``0},``0})">
            <summary>Sets the shim of ReaderWriterLockExtensions.Read(ReaderWriterLockSlim rwLock, Func`1&lt;!!0&gt; func)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReaderWriterLockExtensions.WriteReaderWriterLockSlimAction">
            <summary>Sets the shim of ReaderWriterLockExtensions.Write(ReaderWriterLockSlim rwLock, Action action)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimReferencedInstance">
            <summary>Shim type of StructureMap.Pipeline.ReferencedInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReferencedInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReferencedInstance.#ctor(StructureMap.Pipeline.ReferencedInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of ReferencedInstance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.DescriptionGet">
            <summary>Sets the shim of ReferencedInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.EqualsObject">
            <summary>Sets the shim of ReferencedInstance.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.EqualsReferencedInstance">
            <summary>Sets the shim of ReferencedInstance.Equals(ReferencedInstance referencedInstance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.GetHashCode01">
            <summary>Sets the shim of ReferencedInstance.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.ReferenceKeyGet">
            <summary>Sets the shim of ReferencedInstance.get_ReferenceKey()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of ReferencedInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of ReferencedInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of ReferencedInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReferencedInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReferencedInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReferencedInstance.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimReferencedInstance.Bind(System.IEquatable{StructureMap.Pipeline.ReferencedInstance})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.CloseTypeTypeArray">
            <summary>Sets the shim of ReferencedInstance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.ConstructorString">
            <summary>Sets the shim of ReferencedInstance.ReferencedInstance(String referenceKey)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.DescriptionGet">
            <summary>Sets the shim of ReferencedInstance.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.EqualsObject">
            <summary>Sets the shim of ReferencedInstance.Equals(Object obj)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.EqualsReferencedInstance">
            <summary>Sets the shim of ReferencedInstance.Equals(ReferencedInstance referencedInstance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.GetHashCode">
            <summary>Sets the shim of ReferencedInstance.GetHashCode()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.ReferenceKeyGet">
            <summary>Sets the shim of ReferencedInstance.get_ReferenceKey()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.ReturnedTypeGet">
            <summary>Sets the shim of ReferencedInstance.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.ToDependencySourceType">
            <summary>Sets the shim of ReferencedInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimReferencedInstance.ToNamedCloneString">
            <summary>Sets the shim of ReferencedInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle">
            <summary>Shim type of StructureMap.Pipeline.SingletonLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.#ctor(StructureMap.Pipeline.SingletonLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of SingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of SingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.Constructor">
            <summary>Sets the shim of SingletonLifecycle.SingletonLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of SingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSingletonLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of SingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimSmartInstance`1">
            <summary>Shim type of StructureMap.Pipeline.SmartInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.#ctor(StructureMap.Pipeline.SmartInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.Bind(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`1.ConstructorExpressionOfFuncOfT0">
            <summary>Sets the shim of SmartInstance`1.SmartInstance`1(Expression`1&lt;Func`1&lt;!0&gt;&gt; constructorSelection)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimSmartInstance`2">
            <summary>Shim type of StructureMap.Pipeline.SmartInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.#ctor(StructureMap.Pipeline.SmartInstance{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.ConstructorStructureMapPipelineIConfiguredInstanceget">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.ConstructorStructureMapPipelineIConfiguredInstancesetConstructorInfo">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.set_Constructor(ConstructorInfo value)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.CtorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Ctor()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.CtorOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},System.String,StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Ctor(String constructorArg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.DependenciesStructureMapPipelineIConfiguredInstanceget">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.get_Dependencies()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.DescriptionGet">
            <summary>Sets the shim of SmartInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.EnumerableOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},StructureMap.Pipeline.ArrayDefinitionExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.EnumerableOf()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.EnumerableOfOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},System.String,StructureMap.Pipeline.ArrayDefinitionExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.EnumerableOf(String ctorOrPropertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.HasExplicitName">
            <summary>Sets the shim of SmartInstance`2.HasExplicitName()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.NameGet">
            <summary>Sets the shim of SmartInstance`2.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.NameSetString">
            <summary>Sets the shim of SmartInstance`2.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.PluggedTypeStructureMapPipelineIConfiguredInstanceget">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.get_PluggedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of SmartInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.SelectConstructorExpressionOfFuncOfT0">
            <summary>Sets the shim of SmartInstance`2.SelectConstructor(Expression`1&lt;Func`1&lt;!0&gt;&gt; constructor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.SetPropertyActionOfT0">
            <summary>Sets the shim of SmartInstance`2.SetProperty(Action`1&lt;!0&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.SetterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Setter()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.SetterOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},System.Linq.Expressions.Expression{System.Func{`0,``0}},StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Setter(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.SetterOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.SmartInstance{`0,`1},System.String,StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Setter(String setterName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.StructureMapPipelineIOverridableInstanceOverrideExplicitArguments">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IOverridableInstance.Override(ExplicitArguments arguments)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.ToBuilderTypePolicies">
            <summary>Sets the shim of SmartInstance`2.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of SmartInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.ToNamedCloneString">
            <summary>Sets the shim of SmartInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances._ctorb__1_0StructureMapAttribute">
            <summary>Sets the shim of SmartInstance`2.&lt;.ctor&gt;b__1_0(StructureMapAttribute x)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.AllInstances.thisInstanceGet">
            <summary>Sets the shim of SmartInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.Bind(StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ConstructorExpressionOfFuncOfT0">
            <summary>Sets the shim of SmartInstance`2.SmartInstance`2(Expression`1&lt;Func`1&lt;!0&gt;&gt; constructorSelection)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ConstructorStructureMapPipelineIConfiguredInstanceget">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.get_Constructor()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ConstructorStructureMapPipelineIConfiguredInstancesetConstructorInfo">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.set_Constructor(ConstructorInfo value)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.CtorOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Ctor()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.CtorOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Ctor(String constructorArg)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.DependenciesStructureMapPipelineIConfiguredInstanceget">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.get_Dependencies()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.DescriptionGet">
            <summary>Sets the shim of SmartInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.EnumerableOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.ArrayDefinitionExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.EnumerableOf()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.EnumerableOfOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Pipeline.ArrayDefinitionExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.EnumerableOf(String ctorOrPropertyName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.HasExplicitName">
            <summary>Sets the shim of SmartInstance`2.HasExplicitName()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.NameGet">
            <summary>Sets the shim of SmartInstance`2.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.NameSetString">
            <summary>Sets the shim of SmartInstance`2.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.PluggedTypeStructureMapPipelineIConfiguredInstanceget">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IConfiguredInstance.get_PluggedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ReturnedTypeGet">
            <summary>Sets the shim of SmartInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.SelectConstructorExpressionOfFuncOfT0">
            <summary>Sets the shim of SmartInstance`2.SelectConstructor(Expression`1&lt;Func`1&lt;!0&gt;&gt; constructor)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.SetPropertyActionOfT0">
            <summary>Sets the shim of SmartInstance`2.SetProperty(Action`1&lt;!0&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.SetterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Setter()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.SetterOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Setter(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.SetterOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Pipeline.DependencyExpression{StructureMap.Pipeline.SmartInstance{`0,`1},``0}})">
            <summary>Sets the shim of SmartInstance`2.Setter(String setterName)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.StructureMapPipelineIOverridableInstanceOverrideExplicitArguments">
            <summary>Sets the shim of SmartInstance`2.StructureMap.Pipeline.IOverridableInstance.Override(ExplicitArguments arguments)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ToBuilderTypePolicies">
            <summary>Sets the shim of SmartInstance`2.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ToDependencySourceType">
            <summary>Sets the shim of SmartInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.ToNamedCloneString">
            <summary>Sets the shim of SmartInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2._ctorb__1_0StructureMapAttribute">
            <summary>Sets the shim of SmartInstance`2.&lt;.ctor&gt;b__1_0(StructureMapAttribute x)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimSmartInstance`2.thisInstanceGet">
            <summary>Sets the shim of SmartInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle">
            <summary>Shim type of StructureMap.Pipeline.ThreadLocalStorageLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.#ctor(StructureMap.Pipeline.ThreadLocalStorageLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.Constructor">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.ThreadLocalStorageLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.RefreshCache">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.RefreshCache()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimThreadLocalStorageLifecycle.StaticConstructor">
            <summary>Sets the shim of ThreadLocalStorageLifecycle.ThreadLocalStorageLifecycle()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache">
            <summary>Shim type of StructureMap.Pipeline.TrackingTransientCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.#ctor(StructureMap.Pipeline.TrackingTransientCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.CountGet">
            <summary>Sets the shim of TrackingTransientCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.DisposeAndClear">
            <summary>Sets the shim of TrackingTransientCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.EjectTypeInstance">
            <summary>Sets the shim of TrackingTransientCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of TrackingTransientCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.HasTypeInstance">
            <summary>Sets the shim of TrackingTransientCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.ReleaseObject">
            <summary>Sets the shim of TrackingTransientCache.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.StyleGet">
            <summary>Sets the shim of TrackingTransientCache.get_Style()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.AllInstances.TrackedGet">
            <summary>Sets the shim of TrackingTransientCache.get_Tracked()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.Bind(StructureMap.Pipeline.IObjectCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.Bind(StructureMap.Pipeline.ITransientTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.Constructor">
            <summary>Sets the shim of TrackingTransientCache.TrackingTransientCache()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.CountGet">
            <summary>Sets the shim of TrackingTransientCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.DisposeAndClear">
            <summary>Sets the shim of TrackingTransientCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.EjectTypeInstance">
            <summary>Sets the shim of TrackingTransientCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of TrackingTransientCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.HasTypeInstance">
            <summary>Sets the shim of TrackingTransientCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.ReleaseObject">
            <summary>Sets the shim of TrackingTransientCache.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.StyleGet">
            <summary>Sets the shim of TrackingTransientCache.get_Style()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTrackingTransientCache.TrackedGet">
            <summary>Sets the shim of TrackingTransientCache.get_Tracked()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimTransientLifecycle">
            <summary>Shim type of StructureMap.Pipeline.TransientLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.#ctor(StructureMap.Pipeline.TransientLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of TransientLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of TransientLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.Bind(StructureMap.Pipeline.IAppropriateForNestedContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.Constructor">
            <summary>Sets the shim of TransientLifecycle.TransientLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of TransientLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimTransientLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of TransientLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle">
            <summary>Shim type of StructureMap.Pipeline.UniquePerRequestLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.#ctor(StructureMap.Pipeline.UniquePerRequestLifecycle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.AllInstances.EjectAllILifecycleContext">
            <summary>Sets the shim of UniquePerRequestLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.AllInstances.FindCacheILifecycleContext">
            <summary>Sets the shim of UniquePerRequestLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.Bind(StructureMap.Pipeline.IAppropriateForNestedContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.Bind(StructureMap.Pipeline.ILifecycle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.Constructor">
            <summary>Sets the shim of UniquePerRequestLifecycle.UniquePerRequestLifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.EjectAllILifecycleContext">
            <summary>Sets the shim of UniquePerRequestLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.FindCacheILifecycleContext">
            <summary>Sets the shim of UniquePerRequestLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache">
            <summary>Shim type of StructureMap.Pipeline.UniquePerRequestLifecycle+NulloObjectCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.#ctor(StructureMap.Pipeline.UniquePerRequestLifecycle.NulloObjectCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.AllInstances.CountGet">
            <summary>Sets the shim of NulloObjectCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.AllInstances.DisposeAndClear">
            <summary>Sets the shim of NulloObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.AllInstances.EjectTypeInstance">
            <summary>Sets the shim of NulloObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.AllInstances.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of NulloObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.AllInstances.HasTypeInstance">
            <summary>Sets the shim of NulloObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.Bind(StructureMap.Pipeline.IObjectCache)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.Constructor">
            <summary>Sets the shim of NulloObjectCache.NulloObjectCache()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.CountGet">
            <summary>Sets the shim of NulloObjectCache.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.DisposeAndClear">
            <summary>Sets the shim of NulloObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.EjectTypeInstance">
            <summary>Sets the shim of NulloObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.GetTypeInstanceIBuildSession">
            <summary>Sets the shim of NulloObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.ShimUniquePerRequestLifecycle.ShimNulloObjectCache.HasTypeInstance">
            <summary>Sets the shim of NulloObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubArgument">
            <summary>Stub type of StructureMap.Pipeline.Argument</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubArgument.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubArgument.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubArgument.InitializeStub">
            <summary>Initializes a new instance of type StubArgument</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubArgument.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubArgument.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubArgument.ToString">
            <summary>Sets the stub of Argument.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubArgument.ToString01">
            <summary>Sets the stub of Argument.ToString()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubArrayCoercion`1">
            <summary>Stub type of StructureMap.Pipeline.ArrayCoercion`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubArrayCoercion`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubArrayCoercion`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubArrayCoercion`1.InitializeStub">
            <summary>Initializes a new instance of type StubArrayCoercion</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubArrayCoercion`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubArrayCoercion`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubAttributeConstructorSelector">
            <summary>Stub type of StructureMap.Pipeline.AttributeConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubAttributeConstructorSelector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubAttributeConstructorSelector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubAttributeConstructorSelector.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeConstructorSelector</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubAttributeConstructorSelector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubAttributeConstructorSelector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle">
            <summary>Stub type of StructureMap.Pipeline.ChildContainerSingletonLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.#ctor(StructureMap.Pipeline.IObjectCache)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ChildContainerSingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of ChildContainerSingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ChildContainerSingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of ChildContainerSingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubChildContainerSingletonLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubChildContainerSingletonLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubConfiguredInstance">
            <summary>Stub type of StructureMap.Pipeline.ConfiguredInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.#ctor(System.Type,System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.#ctor(System.Type,System.String,StructureMap.Pipeline.DependencyCollection,System.Collections.Generic.IEnumerable{StructureMap.Building.Interception.IInterceptor},System.Reflection.ConstructorInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubConfiguredInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.CloseType(System.Type[])">
            <summary>Sets the stub of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.CloseTypeTypeArray">
            <summary>Sets the stub of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.Description">
            <summary>Sets the stub of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.DescriptionGet">
            <summary>Sets the stub of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.InitializeStub">
            <summary>Initializes a new instance of type StubConfiguredInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ReturnedType">
            <summary>Sets the stub of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ReturnedTypeGet">
            <summary>Sets the stub of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ThisInstanceGet">
            <summary>Sets the stub of ConfiguredInstance.get_thisInstance()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ThisObject">
            <summary>Sets the stub of ConfiguredInstance.thisObject()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToDependencySourceType">
            <summary>Sets the stub of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToNamedCloneString">
            <summary>Sets the stub of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToString">
            <summary>Sets the stub of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConfiguredInstance.ToString01">
            <summary>Sets the stub of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConfiguredInstance.thisInstance">
            <summary>Sets the stub of ConfiguredInstance.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConfiguredInstance.thisObject">
            <summary>Sets the stub of ConfiguredInstance.thisObject()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubConstructorInstance">
            <summary>Stub type of StructureMap.Pipeline.ConstructorInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubConstructorInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.CloseType(System.Type[])">
            <summary>Sets the stub of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.CloseTypeTypeArray">
            <summary>Sets the stub of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.Description">
            <summary>Sets the stub of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.DescriptionGet">
            <summary>Sets the stub of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.ReturnedType">
            <summary>Sets the stub of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ReturnedTypeGet">
            <summary>Sets the stub of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ThisInstanceGet">
            <summary>Sets the stub of ConstructorInstance.get_thisInstance()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ThisObject">
            <summary>Sets the stub of ConstructorInstance.thisObject()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToDependencySourceType">
            <summary>Sets the stub of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToNamedCloneString">
            <summary>Sets the stub of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToString">
            <summary>Sets the stub of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance.ToString01">
            <summary>Sets the stub of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance.thisInstance">
            <summary>Sets the stub of ConstructorInstance.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance.thisObject">
            <summary>Sets the stub of ConstructorInstance.thisObject()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubConstructorInstance`1">
            <summary>Stub type of StructureMap.Pipeline.ConstructorInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubConstructorInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of ConstructorInstance`1.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.Description">
            <summary>Sets the stub of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.DescriptionGet">
            <summary>Sets the stub of ConstructorInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ReturnedType">
            <summary>Sets the stub of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of ConstructorInstance`1.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ThisInstanceGet">
            <summary>Sets the stub of ExpressedInstance`1.get_thisInstance()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ThisObject">
            <summary>Sets the stub of ConstructorInstance`1.thisObject()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of ConstructorInstance`1.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToDependencySourceType">
            <summary>Sets the stub of ConstructorInstance`1.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToNamedCloneString">
            <summary>Sets the stub of ConstructorInstance`1.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToString">
            <summary>Sets the stub of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.ToString01">
            <summary>Sets the stub of ConstructorInstance`1.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.thisInstance">
            <summary>Sets the stub of ExpressedInstance`1.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorInstance`1.thisObject">
            <summary>Sets the stub of ConstructorInstance`1.thisObject()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubConstructorSelector">
            <summary>Stub type of StructureMap.Pipeline.ConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorSelector.#ctor(StructureMap.Graph.PluginGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubConstructorSelector.ApplyTypeIConfiguredInstance">
            <summary>Sets the stub of ConstructorSelector.apply(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorSelector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorSelector.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorSelector</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorSelector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubConstructorSelector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubConstructorSelector.apply(System.Type,StructureMap.Pipeline.IConfiguredInstance)">
            <summary>Sets the stub of ConstructorSelector.apply(Type pluginType, IConfiguredInstance instance)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubContainerLifecycle">
            <summary>Stub type of StructureMap.Pipeline.ContainerLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubContainerLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ContainerLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubContainerLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of ContainerLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ContainerLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubContainerLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of ContainerLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubContainerLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubContainerLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubContainerLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache">
            <summary>Stub type of StructureMap.Pipeline.ContainerSpecificObjectCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.BuildWithSessionTypeInstanceIBuildSession">
            <summary>Sets the stub of ContainerSpecificObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.InitializeStub">
            <summary>Initializes a new instance of type StubContainerSpecificObjectCache</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubContainerSpecificObjectCache.buildWithSession(System.Type,StructureMap.Pipeline.Instance,StructureMap.IBuildSession)">
            <summary>Sets the stub of ContainerSpecificObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubDefaultInstance">
            <summary>Stub type of StructureMap.Pipeline.DefaultInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubDefaultInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDefaultInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDefaultInstance.Description">
            <summary>Sets the stub of DefaultInstance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.DescriptionGet">
            <summary>Sets the stub of DefaultInstance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDefaultInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDefaultInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDefaultInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDefaultInstance.ReturnedType">
            <summary>Sets the stub of DefaultInstance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.ReturnedTypeGet">
            <summary>Sets the stub of DefaultInstance.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of DefaultInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.ToDependencySourceType">
            <summary>Sets the stub of DefaultInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of DefaultInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubDefaultInstance.ToNamedCloneString">
            <summary>Sets the stub of DefaultInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDefaultInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubDependencyCollection">
            <summary>Stub type of StructureMap.Pipeline.DependencyCollection</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDependencyCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDependencyCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubDependencyCollection.InitializeStub">
            <summary>Initializes a new instance of type StubDependencyCollection</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDependencyCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubDependencyCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubEnumerableInstance">
            <summary>Stub type of StructureMap.Pipeline.EnumerableInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.#ctor(System.Collections.Generic.IEnumerable{StructureMap.Pipeline.Instance})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubEnumerableInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubEnumerableInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubEnumerableInstance.Description">
            <summary>Sets the stub of EnumerableInstance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.DescriptionGet">
            <summary>Sets the stub of EnumerableInstance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.InitializeStub">
            <summary>Initializes a new instance of type StubEnumerableInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubEnumerableInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubEnumerableInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubEnumerableInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ReturnedType">
            <summary>Sets the stub of EnumerableInstance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ReturnedTypeGet">
            <summary>Sets the stub of EnumerableInstance.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of EnumerableInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ToDependencySourceType">
            <summary>Sets the stub of EnumerableInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubEnumerableInstance.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubEnumerableInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubExplicitArguments">
            <summary>Stub type of StructureMap.Pipeline.ExplicitArguments</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExplicitArguments.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExplicitArguments.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExplicitArguments.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExplicitArguments.InitializeStub">
            <summary>Initializes a new instance of type StubExplicitArguments</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExplicitArguments.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExplicitArguments.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExplicitArguments.ToString">
            <summary>Sets the stub of ExplicitArguments.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExplicitArguments.ToString01">
            <summary>Sets the stub of ExplicitArguments.ToString()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubExpressedInstance`1">
            <summary>Stub type of StructureMap.Pipeline.ExpressedInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubExpressedInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.Description">
            <summary>Sets the stub of Instance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.DescriptionGet">
            <summary>Sets the stub of Instance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubExpressedInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ReturnedType">
            <summary>Sets the stub of Instance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of Instance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ThisInstanceGet">
            <summary>Sets the stub of ExpressedInstance`1.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of Instance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ToDependencySourceType">
            <summary>Sets the stub of Instance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`1.thisInstance">
            <summary>Sets the stub of ExpressedInstance`1.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubExpressedInstance`3">
            <summary>Stub type of StructureMap.Pipeline.ExpressedInstance`3</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubExpressedInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.Description">
            <summary>Sets the stub of Instance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.DescriptionGet">
            <summary>Sets the stub of Instance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.InitializeStub">
            <summary>Initializes a new instance of type StubExpressedInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ReturnedType">
            <summary>Sets the stub of Instance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ReturnedTypeGet">
            <summary>Sets the stub of Instance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ThisInstanceGet">
            <summary>Sets the stub of ExpressedInstance`1.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ToDependencySource(System.Type)">
            <summary>Sets the stub of Instance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ToDependencySourceType">
            <summary>Sets the stub of Instance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubExpressedInstance`3.thisInstance">
            <summary>Sets the stub of ExpressedInstance`1.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubFirstConstructor">
            <summary>Stub type of StructureMap.Pipeline.FirstConstructor</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubFirstConstructor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubFirstConstructor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubFirstConstructor.InitializeStub">
            <summary>Initializes a new instance of type StubFirstConstructor</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubFirstConstructor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubFirstConstructor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubGreediestConstructorSelector">
            <summary>Stub type of StructureMap.Pipeline.GreediestConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubGreediestConstructorSelector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubGreediestConstructorSelector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubGreediestConstructorSelector.InitializeStub">
            <summary>Initializes a new instance of type StubGreediestConstructorSelector</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubGreediestConstructorSelector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubGreediestConstructorSelector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubIAppropriateForNestedContainer">
            <summary>Stub type of StructureMap.Pipeline.IAppropriateForNestedContainer</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIAppropriateForNestedContainer.#ctor">
            <summary>Initializes a new instance of type StubIAppropriateForNestedContainer</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubIConfiguredInstance">
            <summary>Stub type of StructureMap.Pipeline.IConfiguredInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.#ctor">
            <summary>Initializes a new instance of type StubIConfiguredInstance</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.AddInterceptorIInterceptor">
            <summary>Sets the stub of IConfiguredInstance.AddInterceptor(IInterceptor interceptor)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.AttachBackingFieldToConstructor">
            <summary>Attaches delegates to emulate StubIConfiguredInstance.Constructor as a property with a backing field.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubIConfiguredInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.ClearBuildPlan">
            <summary>Sets the stub of IConfiguredInstance.ClearBuildPlan()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#Constructor">
            <summary>Sets the stub of IConfiguredInstance.get_Constructor()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.ConstructorGet">
            <summary>Sets the stub of IConfiguredInstance.get_Constructor()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.ConstructorSetConstructorInfo">
            <summary>Sets the stub of IConfiguredInstance.set_Constructor(ConstructorInfo value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#Dependencies">
            <summary>Sets the stub of IConfiguredInstance.get_Dependencies()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.DependenciesGet">
            <summary>Sets the stub of IConfiguredInstance.get_Dependencies()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.HasBuildPlan">
            <summary>Sets the stub of IConfiguredInstance.HasBuildPlan()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#Lifecycle">
            <summary>Sets the stub of IConfiguredInstance.get_Lifecycle()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.LifecycleGet">
            <summary>Sets the stub of IConfiguredInstance.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#Name">
            <summary>Sets the stub of IConfiguredInstance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.NameGet">
            <summary>Sets the stub of IConfiguredInstance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.NameSetString">
            <summary>Sets the stub of IConfiguredInstance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#PluggedType">
            <summary>Sets the stub of IConfiguredInstance.get_PluggedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.PluggedTypeGet">
            <summary>Sets the stub of IConfiguredInstance.get_PluggedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.SetLifecycleToILifecycle">
            <summary>Sets the stub of IConfiguredInstance.SetLifecycleTo(ILifecycle lifecycle)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.SetLifecycleToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of SetLifecycleTo()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#AddInterceptor(StructureMap.Building.Interception.IInterceptor)">
            <summary>Sets the stub of IConfiguredInstance.AddInterceptor(IInterceptor interceptor)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#ClearBuildPlan">
            <summary>Sets the stub of IConfiguredInstance.ClearBuildPlan()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#HasBuildPlan">
            <summary>Sets the stub of IConfiguredInstance.HasBuildPlan()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#SetLifecycleTo``1">
            <summary>Sets the stub of IConfiguredInstance.SetLifecycleTo()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConfiguredInstance.StructureMap#Pipeline#IConfiguredInstance#SetLifecycleTo(StructureMap.Pipeline.ILifecycle)">
            <summary>Sets the stub of IConfiguredInstance.SetLifecycleTo(ILifecycle lifecycle)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubIConstructorSelector">
            <summary>Stub type of StructureMap.Pipeline.IConstructorSelector</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConstructorSelector.#ctor">
            <summary>Initializes a new instance of type StubIConstructorSelector</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIConstructorSelector.FindTypeDependencyCollectionPluginGraph">
            <summary>Sets the stub of IConstructorSelector.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIConstructorSelector.StructureMap#Pipeline#IConstructorSelector#Find(System.Type,StructureMap.Pipeline.DependencyCollection,StructureMap.Graph.PluginGraph)">
            <summary>Sets the stub of IConstructorSelector.Find(Type pluggedType, DependencyCollection dependencies, PluginGraph graph)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubIEnumerableCoercion">
            <summary>Stub type of StructureMap.Pipeline.IEnumerableCoercion</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIEnumerableCoercion.#ctor">
            <summary>Initializes a new instance of type StubIEnumerableCoercion</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIEnumerableCoercion.ConvertIEnumerableOfObject">
            <summary>Sets the stub of IEnumerableCoercion.Convert(IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIEnumerableCoercion.StructureMap#Pipeline#IEnumerableCoercion#ElementType">
            <summary>Sets the stub of IEnumerableCoercion.get_ElementType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIEnumerableCoercion.ElementTypeGet">
            <summary>Sets the stub of IEnumerableCoercion.get_ElementType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIEnumerableCoercion.StructureMap#Pipeline#IEnumerableCoercion#Convert(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Sets the stub of IEnumerableCoercion.Convert(IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubILifecycle">
            <summary>Stub type of StructureMap.Pipeline.ILifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubILifecycle.#ctor">
            <summary>Initializes a new instance of type StubILifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubILifecycle.StructureMap#Pipeline#ILifecycle#Description">
            <summary>Sets the stub of ILifecycle.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubILifecycle.DescriptionGet">
            <summary>Sets the stub of ILifecycle.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubILifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of ILifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubILifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of ILifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubILifecycle.StructureMap#Pipeline#ILifecycle#EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ILifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubILifecycle.StructureMap#Pipeline#ILifecycle#FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ILifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubILocationPolicy">
            <summary>Stub type of StructureMap.Pipeline.ILocationPolicy</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubILocationPolicy.#ctor">
            <summary>Initializes a new instance of type StubILocationPolicy</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubILocationPolicy.BuildBuildSessionInstance">
            <summary>Sets the stub of ILocationPolicy.Build(BuildSession session, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubILocationPolicy.StructureMap#Pipeline#ILocationPolicy#Build(StructureMap.BuildSession,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of ILocationPolicy.Build(BuildSession session, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubIObjectCache">
            <summary>Stub type of StructureMap.Pipeline.IObjectCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIObjectCache.#ctor">
            <summary>Initializes a new instance of type StubIObjectCache</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIObjectCache.StructureMap#Pipeline#IObjectCache#Count">
            <summary>Sets the stub of IObjectCache.get_Count()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIObjectCache.CountGet">
            <summary>Sets the stub of IObjectCache.get_Count()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIObjectCache.DisposeAndClear">
            <summary>Sets the stub of IObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIObjectCache.EjectTypeInstance">
            <summary>Sets the stub of IObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIObjectCache.GetTypeInstanceIBuildSession">
            <summary>Sets the stub of IObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIObjectCache.HasTypeInstance">
            <summary>Sets the stub of IObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIObjectCache.StructureMap#Pipeline#IObjectCache#DisposeAndClear">
            <summary>Sets the stub of IObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIObjectCache.StructureMap#Pipeline#IObjectCache#Eject(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIObjectCache.StructureMap#Pipeline#IObjectCache#Get(System.Type,StructureMap.Pipeline.Instance,StructureMap.IBuildSession)">
            <summary>Sets the stub of IObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIObjectCache.StructureMap#Pipeline#IObjectCache#Has(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubITransientTracking">
            <summary>Stub type of StructureMap.Pipeline.ITransientTracking</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubITransientTracking.#ctor">
            <summary>Initializes a new instance of type StubITransientTracking</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#IObjectCache#Count">
            <summary>Sets the stub of IObjectCache.get_Count()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.CountGet">
            <summary>Sets the stub of IObjectCache.get_Count()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.DisposeAndClear">
            <summary>Sets the stub of IObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.EjectTypeInstance">
            <summary>Sets the stub of IObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.GetTypeInstanceIBuildSession">
            <summary>Sets the stub of IObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.HasTypeInstance">
            <summary>Sets the stub of IObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.ReleaseObject">
            <summary>Sets the stub of ITransientTracking.Release(Object o)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#IObjectCache#DisposeAndClear">
            <summary>Sets the stub of IObjectCache.DisposeAndClear()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#IObjectCache#Eject(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IObjectCache.Eject(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#IObjectCache#Get(System.Type,StructureMap.Pipeline.Instance,StructureMap.IBuildSession)">
            <summary>Sets the stub of IObjectCache.Get(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#IObjectCache#Has(System.Type,StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IObjectCache.Has(Type pluginType, Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#ITransientTracking#Release(System.Object)">
            <summary>Sets the stub of ITransientTracking.Release(Object o)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubITransientTracking.StructureMap#Pipeline#ITransientTracking#Tracked">
            <summary>Sets the stub of ITransientTracking.get_Tracked()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubITransientTracking.TrackedGet">
            <summary>Sets the stub of ITransientTracking.get_Tracked()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubIValue">
            <summary>Stub type of StructureMap.Pipeline.IValue</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubIValue.#ctor">
            <summary>Initializes a new instance of type StubIValue</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubIValue.StructureMap#Pipeline#IValue#Value">
            <summary>Sets the stub of IValue.get_Value()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubIValue.ValueGet">
            <summary>Sets the stub of IValue.get_Value()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubInstance">
            <summary>Stub type of StructureMap.Pipeline.Instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubInstance.Description">
            <summary>Sets the stub of Instance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.DescriptionGet">
            <summary>Sets the stub of Instance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.InitializeStub">
            <summary>Initializes a new instance of type StubInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubInstance.ReturnedType">
            <summary>Sets the stub of Instance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.ReturnedTypeGet">
            <summary>Sets the stub of Instance.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of Instance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.ToDependencySourceType">
            <summary>Sets the stub of Instance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubInstance.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubLambdaInstance">
            <summary>Stub type of StructureMap.Pipeline.LambdaInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance.#ctor">
            <summary>Initializes a new instance of type StubLambdaInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance.StructureMap#Pipeline#LambdaInstance#ReturnedType">
            <summary>Sets the stub of LambdaInstance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance.get_ReturnedType()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubLambdaInstance`1">
            <summary>Stub type of StructureMap.Pipeline.LambdaInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.#ctor(System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.#ctor(System.String,System.Func{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.#ctor(System.String,System.Func{StructureMap.IContext,`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubLambdaInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.Description">
            <summary>Sets the stub of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.DescriptionGet">
            <summary>Sets the stub of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubLambdaInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ReturnedType">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ThisInstanceGet">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ToDependencySourceType">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.ToNamedCloneString">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`1.thisInstance">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubLambdaInstance`2">
            <summary>Stub type of StructureMap.Pipeline.LambdaInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.#ctor(System.Linq.Expressions.Expression{System.Func{StructureMap.IContext,`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.#ctor(System.String,System.Func{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.#ctor(System.String,System.Func{StructureMap.IContext,`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubLambdaInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.CloseType(System.Type[])">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.CloseTypeTypeArray">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.Description">
            <summary>Sets the stub of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.DescriptionGet">
            <summary>Sets the stub of LambdaInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.InitializeStub">
            <summary>Initializes a new instance of type StubLambdaInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ReturnedType">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ThisInstanceGet">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ToDependencySource(System.Type)">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ToDependencySourceType">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ToNamedClone(System.String)">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.ToNamedCloneString">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLambdaInstance`2.thisInstance">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubLifecycleBase">
            <summary>Stub type of StructureMap.Pipeline.LifecycleBase</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLifecycleBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleBase.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of LifecycleBase.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLifecycleBase.EjectAllILifecycleContext">
            <summary>Sets the stub of LifecycleBase.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleBase.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of LifecycleBase.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLifecycleBase.FindCacheILifecycleContext">
            <summary>Sets the stub of LifecycleBase.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleBase.InitializeStub">
            <summary>Initializes a new instance of type StubLifecycleBase</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLifecycleBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLifecycleBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache">
            <summary>Stub type of StructureMap.Pipeline.LifecycleObjectCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.BuildWithSessionTypeInstanceIBuildSession">
            <summary>Sets the stub of LifecycleObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.InitializeStub">
            <summary>Initializes a new instance of type StubLifecycleObjectCache</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubLifecycleObjectCache.buildWithSession(System.Type,StructureMap.Pipeline.Instance,StructureMap.IBuildSession)">
            <summary>Sets the stub of LifecycleObjectCache.buildWithSession(Type pluginType, Instance instance, IBuildSession session)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubListCoercion`1">
            <summary>Stub type of StructureMap.Pipeline.ListCoercion`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubListCoercion`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubListCoercion`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubListCoercion`1.InitializeStub">
            <summary>Initializes a new instance of type StubListCoercion</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubListCoercion`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubListCoercion`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubNullInstance">
            <summary>Stub type of StructureMap.Pipeline.NullInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubNullInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNullInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNullInstance.Description">
            <summary>Sets the stub of NullInstance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.DescriptionGet">
            <summary>Sets the stub of NullInstance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.InitializeStub">
            <summary>Initializes a new instance of type StubNullInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNullInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNullInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNullInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNullInstance.ReturnedType">
            <summary>Sets the stub of NullInstance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.ReturnedTypeGet">
            <summary>Sets the stub of NullInstance.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of NullInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.ToDependencySourceType">
            <summary>Sets the stub of NullInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubNullInstance.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNullInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubNulloTransientCache">
            <summary>Stub type of StructureMap.Pipeline.NulloTransientCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNulloTransientCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNulloTransientCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubNulloTransientCache.InitializeStub">
            <summary>Initializes a new instance of type StubNulloTransientCache</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNulloTransientCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubNulloTransientCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubObjectInstance">
            <summary>Stub type of StructureMap.Pipeline.ObjectInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubObjectInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of ObjectInstance`2.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.Description">
            <summary>Sets the stub of ObjectInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.DescriptionGet">
            <summary>Sets the stub of ObjectInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.InitializeStub">
            <summary>Initializes a new instance of type StubObjectInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.ReturnedType">
            <summary>Sets the stub of ObjectInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.ReturnedTypeGet">
            <summary>Sets the stub of ObjectInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.ThisInstanceGet">
            <summary>Sets the stub of ObjectInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of ObjectInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.ToDependencySourceType">
            <summary>Sets the stub of ObjectInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of ObjectInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.ToNamedCloneString">
            <summary>Sets the stub of ObjectInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.ToString">
            <summary>Sets the stub of ObjectInstance`2.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance.ToString01">
            <summary>Sets the stub of ObjectInstance`2.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of ObjectInstance`2.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance.thisInstance">
            <summary>Sets the stub of ObjectInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubObjectInstance`2">
            <summary>Stub type of StructureMap.Pipeline.ObjectInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubObjectInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.BuildPlanTypePolicies">
            <summary>Sets the stub of ObjectInstance`2.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.Description">
            <summary>Sets the stub of ObjectInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.DescriptionGet">
            <summary>Sets the stub of ObjectInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.InitializeStub">
            <summary>Initializes a new instance of type StubObjectInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ReturnedType">
            <summary>Sets the stub of ObjectInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ReturnedTypeGet">
            <summary>Sets the stub of ObjectInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ThisInstanceGet">
            <summary>Sets the stub of ObjectInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToDependencySource(System.Type)">
            <summary>Sets the stub of ObjectInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToDependencySourceType">
            <summary>Sets the stub of ObjectInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToNamedClone(System.String)">
            <summary>Sets the stub of ObjectInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToNamedCloneString">
            <summary>Sets the stub of ObjectInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToString">
            <summary>Sets the stub of ObjectInstance`2.ToString()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectInstance`2.ToString01">
            <summary>Sets the stub of ObjectInstance`2.ToString()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectInstance`2.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of ObjectInstance`2.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectInstance`2.thisInstance">
            <summary>Sets the stub of ObjectInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubObjectLifecycle">
            <summary>Stub type of StructureMap.Pipeline.ObjectLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ObjectLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of ObjectLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ObjectLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubObjectLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of ObjectLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubObjectLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubObjectLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubObjectLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubReferencedInstance">
            <summary>Stub type of StructureMap.Pipeline.ReferencedInstance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubReferencedInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubReferencedInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.CloseType(System.Type[])">
            <summary>Sets the stub of ReferencedInstance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.CloseTypeTypeArray">
            <summary>Sets the stub of ReferencedInstance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubReferencedInstance.Description">
            <summary>Sets the stub of ReferencedInstance.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.DescriptionGet">
            <summary>Sets the stub of ReferencedInstance.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.Equals(System.Object)">
            <summary>Sets the stub of ReferencedInstance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.EqualsObject">
            <summary>Sets the stub of ReferencedInstance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.GetHashCode">
            <summary>Sets the stub of ReferencedInstance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.GetHashCode01">
            <summary>Sets the stub of ReferencedInstance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.InitializeStub">
            <summary>Initializes a new instance of type StubReferencedInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubReferencedInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubReferencedInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubReferencedInstance.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubReferencedInstance.ReturnedType">
            <summary>Sets the stub of ReferencedInstance.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.ReturnedTypeGet">
            <summary>Sets the stub of ReferencedInstance.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.ToDependencySource(System.Type)">
            <summary>Sets the stub of ReferencedInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.ToDependencySourceType">
            <summary>Sets the stub of ReferencedInstance.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.ToNamedClone(System.String)">
            <summary>Sets the stub of ReferencedInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubReferencedInstance.ToNamedCloneString">
            <summary>Sets the stub of ReferencedInstance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubReferencedInstance.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubSingletonLifecycle">
            <summary>Stub type of StructureMap.Pipeline.SingletonLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of SingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of SingletonLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of SingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of SingletonLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubSingletonLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSingletonLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubSmartInstance`1">
            <summary>Stub type of StructureMap.Pipeline.SmartInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubSmartInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.Description">
            <summary>Sets the stub of SmartInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.DescriptionGet">
            <summary>Sets the stub of SmartInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.HasExplicitName">
            <summary>Sets the stub of SmartInstance`2.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.HasExplicitName01">
            <summary>Sets the stub of SmartInstance`2.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubSmartInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.Name">
            <summary>Sets the stub of SmartInstance`2.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.NameGet">
            <summary>Sets the stub of SmartInstance`2.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.NameSetString">
            <summary>Sets the stub of SmartInstance`2.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ReturnedType">
            <summary>Sets the stub of SmartInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of SmartInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ThisInstanceGet">
            <summary>Sets the stub of SmartInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of SmartInstance`2.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of SmartInstance`2.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of SmartInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ToDependencySourceType">
            <summary>Sets the stub of SmartInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of SmartInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`1.ToNamedCloneString">
            <summary>Sets the stub of SmartInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`1.thisInstance">
            <summary>Sets the stub of SmartInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubSmartInstance`2">
            <summary>Stub type of StructureMap.Pipeline.SmartInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubSmartInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.CloseType(System.Type[])">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.CloseTypeTypeArray">
            <summary>Sets the stub of Instance.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.Description">
            <summary>Sets the stub of SmartInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.DescriptionGet">
            <summary>Sets the stub of SmartInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.HasExplicitName">
            <summary>Sets the stub of SmartInstance`2.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.HasExplicitName01">
            <summary>Sets the stub of SmartInstance`2.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.InitializeStub">
            <summary>Initializes a new instance of type StubSmartInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.Name">
            <summary>Sets the stub of SmartInstance`2.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.NameGet">
            <summary>Sets the stub of SmartInstance`2.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.NameSetString">
            <summary>Sets the stub of SmartInstance`2.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ReturnedType">
            <summary>Sets the stub of SmartInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ReturnedTypeGet">
            <summary>Sets the stub of SmartInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ThisInstanceGet">
            <summary>Sets the stub of SmartInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of SmartInstance`2.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ToBuilderTypePolicies">
            <summary>Sets the stub of SmartInstance`2.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ToDependencySource(System.Type)">
            <summary>Sets the stub of SmartInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ToDependencySourceType">
            <summary>Sets the stub of SmartInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ToNamedClone(System.String)">
            <summary>Sets the stub of SmartInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubSmartInstance`2.ToNamedCloneString">
            <summary>Sets the stub of SmartInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubSmartInstance`2.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubSmartInstance`2.thisInstance">
            <summary>Sets the stub of SmartInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle">
            <summary>Stub type of StructureMap.Pipeline.ThreadLocalStorageLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ThreadLocalStorageLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of ThreadLocalStorageLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of ThreadLocalStorageLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of ThreadLocalStorageLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubThreadLocalStorageLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubThreadLocalStorageLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubTrackingTransientCache">
            <summary>Stub type of StructureMap.Pipeline.TrackingTransientCache</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubTrackingTransientCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubTrackingTransientCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubTrackingTransientCache.InitializeStub">
            <summary>Initializes a new instance of type StubTrackingTransientCache</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubTrackingTransientCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubTrackingTransientCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubTransientLifecycle">
            <summary>Stub type of StructureMap.Pipeline.TransientLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubTransientLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubTransientLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubTransientLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of TransientLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubTransientLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of TransientLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubTransientLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of TransientLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubTransientLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of TransientLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubTransientLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubTransientLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubTransientLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubTransientLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle">
            <summary>Stub type of StructureMap.Pipeline.UniquePerRequestLifecycle</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.EjectAll(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of UniquePerRequestLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.EjectAllILifecycleContext">
            <summary>Sets the stub of UniquePerRequestLifecycle.EjectAll(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.FindCache(StructureMap.ILifecycleContext)">
            <summary>Sets the stub of UniquePerRequestLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.FindCacheILifecycleContext">
            <summary>Sets the stub of UniquePerRequestLifecycle.FindCache(ILifecycleContext context)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.InitializeStub">
            <summary>Initializes a new instance of type StubUniquePerRequestLifecycle</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Fakes.StubUniquePerRequestLifecycle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate">
            <summary>Shim type of StructureMap.Pipeline.Lazy.FuncFactoryTemplate</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.#ctor(StructureMap.Pipeline.Lazy.FuncFactoryTemplate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of FuncFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.AllInstances.DescriptionGet">
            <summary>Sets the shim of FuncFactoryTemplate.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of FuncFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.AllInstances.ToBuilderTypePolicies">
            <summary>Sets the shim of FuncFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of FuncFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.CloseTypeTypeArray">
            <summary>Sets the shim of FuncFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.Constructor">
            <summary>Sets the shim of FuncFactoryTemplate.FuncFactoryTemplate()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.DescriptionGet">
            <summary>Sets the shim of FuncFactoryTemplate.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.ReturnedTypeGet">
            <summary>Sets the shim of FuncFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.ToBuilderTypePolicies">
            <summary>Sets the shim of FuncFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncFactoryTemplate.ToDependencySourceType">
            <summary>Sets the shim of FuncFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1">
            <summary>Shim type of StructureMap.Pipeline.Lazy.FuncInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.#ctor(StructureMap.Pipeline.Lazy.FuncInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of FuncInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.Bind(StructureMap.Pipeline.LambdaInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.Constructor">
            <summary>Sets the shim of FuncInstance`1.FuncInstance`1()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncInstance`1.DescriptionGet">
            <summary>Sets the shim of FuncInstance`1.get_Description()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate">
            <summary>Shim type of StructureMap.Pipeline.Lazy.FuncWithArgFactoryTemplate</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.#ctor(StructureMap.Pipeline.Lazy.FuncWithArgFactoryTemplate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.AllInstances.DescriptionGet">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.AllInstances.ToBuilderTypePolicies">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.CloseTypeTypeArray">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.Constructor">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.FuncWithArgFactoryTemplate()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.DescriptionGet">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.ReturnedTypeGet">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.ToBuilderTypePolicies">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgFactoryTemplate.ToDependencySourceType">
            <summary>Sets the shim of FuncWithArgFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2">
            <summary>Shim type of StructureMap.Pipeline.Lazy.FuncWithArgInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.#ctor(StructureMap.Pipeline.Lazy.FuncWithArgInstance{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.AllInstances.DescriptionGet">
            <summary>Sets the shim of FuncWithArgInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.Bind(StructureMap.Pipeline.LambdaInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.Constructor">
            <summary>Sets the shim of FuncWithArgInstance`2.FuncWithArgInstance`2()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimFuncWithArgInstance`2.DescriptionGet">
            <summary>Sets the shim of FuncWithArgInstance`2.get_Description()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate">
            <summary>Shim type of StructureMap.Pipeline.Lazy.LazyFactoryTemplate</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.#ctor(StructureMap.Pipeline.Lazy.LazyFactoryTemplate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.AllInstances.CloseTypeTypeArray">
            <summary>Sets the shim of LazyFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.AllInstances.DescriptionGet">
            <summary>Sets the shim of LazyFactoryTemplate.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of LazyFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.AllInstances.ToBuilderTypePolicies">
            <summary>Sets the shim of LazyFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.AllInstances.ToDependencySourceType">
            <summary>Sets the shim of LazyFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.CloseTypeTypeArray">
            <summary>Sets the shim of LazyFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.Constructor">
            <summary>Sets the shim of LazyFactoryTemplate.LazyFactoryTemplate()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.DescriptionGet">
            <summary>Sets the shim of LazyFactoryTemplate.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.ReturnedTypeGet">
            <summary>Sets the shim of LazyFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.ToBuilderTypePolicies">
            <summary>Sets the shim of LazyFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyFactoryTemplate.ToDependencySourceType">
            <summary>Sets the shim of LazyFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1">
            <summary>Shim type of StructureMap.Pipeline.Lazy.LazyInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.#ctor(StructureMap.Pipeline.Lazy.LazyInstance{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of LazyInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.Bind(StructureMap.Building.IDependencySource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.Bind(StructureMap.Building.IDescribed)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.Bind(StructureMap.Pipeline.LambdaInstance)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.Constructor">
            <summary>Sets the shim of LazyInstance`1.LazyInstance`1()</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.ShimLazyInstance`1.DescriptionGet">
            <summary>Sets the shim of LazyInstance`1.get_Description()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate">
            <summary>Stub type of StructureMap.Pipeline.Lazy.FuncFactoryTemplate</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubFuncFactoryTemplate.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.CloseType(System.Type[])">
            <summary>Sets the stub of FuncFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.CloseTypeTypeArray">
            <summary>Sets the stub of FuncFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.Description">
            <summary>Sets the stub of FuncFactoryTemplate.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.DescriptionGet">
            <summary>Sets the stub of FuncFactoryTemplate.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.InitializeStub">
            <summary>Initializes a new instance of type StubFuncFactoryTemplate</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ReturnedType">
            <summary>Sets the stub of FuncFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ReturnedTypeGet">
            <summary>Sets the stub of FuncFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of FuncFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ToBuilderTypePolicies">
            <summary>Sets the stub of FuncFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ToDependencySource(System.Type)">
            <summary>Sets the stub of FuncFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ToDependencySourceType">
            <summary>Sets the stub of FuncFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncFactoryTemplate.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1">
            <summary>Stub type of StructureMap.Pipeline.Lazy.FuncInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubFuncInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.Description">
            <summary>Sets the stub of FuncInstance`1.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.DescriptionGet">
            <summary>Sets the stub of FuncInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubFuncInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ReturnedType">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ThisInstanceGet">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ToDependencySourceType">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.ToNamedCloneString">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncInstance`1.thisInstance">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate">
            <summary>Stub type of StructureMap.Pipeline.Lazy.FuncWithArgFactoryTemplate</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubFuncWithArgFactoryTemplate.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.CloseType(System.Type[])">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.CloseTypeTypeArray">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.Description">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.DescriptionGet">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.InitializeStub">
            <summary>Initializes a new instance of type StubFuncWithArgFactoryTemplate</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ReturnedType">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ReturnedTypeGet">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ToBuilderTypePolicies">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ToDependencySource(System.Type)">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ToDependencySourceType">
            <summary>Sets the stub of FuncWithArgFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgFactoryTemplate.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2">
            <summary>Stub type of StructureMap.Pipeline.Lazy.FuncWithArgInstance`2</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubFuncWithArgInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.CloseType(System.Type[])">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.CloseTypeTypeArray">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.Description">
            <summary>Sets the stub of FuncWithArgInstance`2.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.DescriptionGet">
            <summary>Sets the stub of FuncWithArgInstance`2.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.InitializeStub">
            <summary>Initializes a new instance of type StubFuncWithArgInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ReturnedType">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ThisInstanceGet">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ToDependencySource(System.Type)">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ToDependencySourceType">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ToNamedClone(System.String)">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.ToNamedCloneString">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubFuncWithArgInstance`2.thisInstance">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate">
            <summary>Stub type of StructureMap.Pipeline.Lazy.LazyFactoryTemplate</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubLazyFactoryTemplate.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.CloseType(System.Type[])">
            <summary>Sets the stub of LazyFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.CloseTypeTypeArray">
            <summary>Sets the stub of LazyFactoryTemplate.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.Description">
            <summary>Sets the stub of LazyFactoryTemplate.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.DescriptionGet">
            <summary>Sets the stub of LazyFactoryTemplate.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.InitializeStub">
            <summary>Initializes a new instance of type StubLazyFactoryTemplate</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ReturnedType">
            <summary>Sets the stub of LazyFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ReturnedTypeGet">
            <summary>Sets the stub of LazyFactoryTemplate.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of LazyFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ToBuilderTypePolicies">
            <summary>Sets the stub of LazyFactoryTemplate.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ToDependencySource(System.Type)">
            <summary>Sets the stub of LazyFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ToDependencySourceType">
            <summary>Sets the stub of LazyFactoryTemplate.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ToNamedClone(System.String)">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.ToNamedCloneString">
            <summary>Sets the stub of Instance.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyFactoryTemplate.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="T:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1">
            <summary>Stub type of StructureMap.Pipeline.Lazy.LazyInstance`1</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubLazyInstance.Name as a property with a backing field.</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.BuildPlanTypePolicies">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.CloseType(System.Type[])">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.CloseTypeTypeArray">
            <summary>Sets the stub of LambdaInstance`2.CloseType(Type[] types)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.Description">
            <summary>Sets the stub of LazyInstance`1.get_Description()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.DescriptionGet">
            <summary>Sets the stub of LazyInstance`1.get_Description()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.Equals(System.Object)">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.EqualsObject">
            <summary>Sets the stub of Instance.Equals(Object obj)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.GetHashCode">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.GetHashCode01">
            <summary>Sets the stub of Instance.GetHashCode()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.HasExplicitName">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.HasExplicitName01">
            <summary>Sets the stub of Instance.HasExplicitName()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.InitializeStub">
            <summary>Initializes a new instance of type StubLazyInstance</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.Name">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.NameGet">
            <summary>Sets the stub of Instance.get_Name()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.NameSetString">
            <summary>Sets the stub of Instance.set_Name(String value)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ReturnedType">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ReturnedTypeGet">
            <summary>Sets the stub of LambdaInstance`2.get_ReturnedType()</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ThisInstanceGet">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ToBuilder(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ToBuilderTypePolicies">
            <summary>Sets the stub of Instance.ToBuilder(Type pluginType, Policies policies)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ToDependencySource(System.Type)">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ToDependencySourceType">
            <summary>Sets the stub of LambdaInstance`2.ToDependencySource(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ToNamedClone(System.String)">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="F:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.ToNamedCloneString">
            <summary>Sets the stub of LambdaInstance`2.ToNamedClone(String name)</summary>
        </member>
        <member name="M:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.buildPlan(System.Type,StructureMap.Policies)">
            <summary>Sets the stub of Instance.buildPlan(Type pluginType, Policies policies)</summary>
        </member>
        <member name="P:StructureMap.Pipeline.Lazy.Fakes.StubLazyInstance`1.thisInstance">
            <summary>Sets the stub of LambdaInstance`2.get_thisInstance()</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration">
            <summary>Shim type of StructureMap.Query.ClosedPluginTypeConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.#ctor(StructureMap.Query.ClosedPluginTypeConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.BuildInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.Build(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.DefaultGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Default()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.EjectAndRemoveAll">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.EjectAndRemoveInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.EjectAndRemove(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.EjectAndRemoveInstanceRef">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.EjectInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.Eject(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.FallbackGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.HasBeenCreatedInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.HasBeenCreated(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.HasImplementations">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.InstancesGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.LifecycleGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.MissingNamedInstanceGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.PipelineGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.PluginTypeStructureMapQueryIFamilyget">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.StructureMap.Query.IFamily.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.PluginTypeStructureMapQueryIPluginTypeConfigurationget">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.StructureMap.Query.IPluginTypeConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.AllInstances.ProfileNameGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_ProfileName()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.Bind(StructureMap.Query.IFamily)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.Bind(StructureMap.Query.IPluginTypeConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.BuildInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.Build(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.ConstructorPluginFamilyIPipelineGraph">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.ClosedPluginTypeConfiguration(PluginFamily family, IPipelineGraph pipelineGraph)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.DefaultGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Default()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.EjectAndRemoveAll">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.EjectAndRemoveInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.EjectAndRemove(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.EjectAndRemoveInstanceRef">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.EjectInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.Eject(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.FallbackGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.HasBeenCreatedInstance">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.HasBeenCreated(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.HasImplementations">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.InstancesGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.LifecycleGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.MissingNamedInstanceGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.PipelineGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.PluginTypeStructureMapQueryIFamilyget">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.StructureMap.Query.IFamily.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.PluginTypeStructureMapQueryIPluginTypeConfigurationget">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.StructureMap.Query.IPluginTypeConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimClosedPluginTypeConfiguration.ProfileNameGet">
            <summary>Sets the shim of ClosedPluginTypeConfiguration.get_ProfileName()</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimEmptyConfiguration">
            <summary>Shim type of StructureMap.Query.EmptyConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimEmptyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimEmptyConfiguration.#ctor(StructureMap.Query.EmptyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.DefaultGet">
            <summary>Sets the shim of EmptyConfiguration.get_Default()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.EjectAndRemoveAll">
            <summary>Sets the shim of EmptyConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.EjectAndRemoveInstanceRef">
            <summary>Sets the shim of EmptyConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.FallbackGet">
            <summary>Sets the shim of EmptyConfiguration.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.HasImplementations">
            <summary>Sets the shim of EmptyConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.InstancesGet">
            <summary>Sets the shim of EmptyConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.LifecycleGet">
            <summary>Sets the shim of EmptyConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.MissingNamedInstanceGet">
            <summary>Sets the shim of EmptyConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.PluginTypeGet">
            <summary>Sets the shim of EmptyConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.AllInstances.ProfileNameGet">
            <summary>Sets the shim of EmptyConfiguration.get_ProfileName()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimEmptyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimEmptyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimEmptyConfiguration.Bind(StructureMap.Query.IPluginTypeConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.ConstructorType">
            <summary>Sets the shim of EmptyConfiguration.EmptyConfiguration(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.DefaultGet">
            <summary>Sets the shim of EmptyConfiguration.get_Default()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.EjectAndRemoveAll">
            <summary>Sets the shim of EmptyConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.EjectAndRemoveInstanceRef">
            <summary>Sets the shim of EmptyConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.FallbackGet">
            <summary>Sets the shim of EmptyConfiguration.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.HasImplementations">
            <summary>Sets the shim of EmptyConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.InstancesGet">
            <summary>Sets the shim of EmptyConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.LifecycleGet">
            <summary>Sets the shim of EmptyConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.MissingNamedInstanceGet">
            <summary>Sets the shim of EmptyConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.PluginTypeGet">
            <summary>Sets the shim of EmptyConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimEmptyConfiguration.ProfileNameGet">
            <summary>Sets the shim of EmptyConfiguration.get_ProfileName()</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration">
            <summary>Shim type of StructureMap.Query.GenericFamilyConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.#ctor(StructureMap.Query.GenericFamilyConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.DefaultGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Default()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.EjectAndRemoveAll">
            <summary>Sets the shim of GenericFamilyConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.EjectAndRemoveInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.EjectAndRemove(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.EjectAndRemoveInstanceRef">
            <summary>Sets the shim of GenericFamilyConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.FallbackGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.HasImplementations">
            <summary>Sets the shim of GenericFamilyConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.InstancesGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.LifecycleGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.MissingNamedInstanceGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.PipelineGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.PluginTypeGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.ProfileNameGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_ProfileName()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.StructureMapQueryIFamilyBuildInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.StructureMap.Query.IFamily.Build(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.StructureMapQueryIFamilyEjectInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.StructureMap.Query.IFamily.Eject(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances.StructureMapQueryIFamilyHasBeenCreatedInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.StructureMap.Query.IFamily.HasBeenCreated(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.AllInstances._get_Instancesb__18_0Instance">
            <summary>Sets the shim of GenericFamilyConfiguration.&lt;get_Instances&gt;b__18_0(Instance x)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.Bind(StructureMap.Query.IFamily)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.Bind(StructureMap.Query.IPluginTypeConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.ConstructorPluginFamilyIPipelineGraph">
            <summary>Sets the shim of GenericFamilyConfiguration.GenericFamilyConfiguration(PluginFamily family, IPipelineGraph pipeline)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.DefaultGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Default()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.EjectAndRemoveAll">
            <summary>Sets the shim of GenericFamilyConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.EjectAndRemoveInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.EjectAndRemove(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.EjectAndRemoveInstanceRef">
            <summary>Sets the shim of GenericFamilyConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.FallbackGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Fallback()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.HasImplementations">
            <summary>Sets the shim of GenericFamilyConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.InstancesGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.LifecycleGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.MissingNamedInstanceGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.PipelineGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.PluginTypeGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.ProfileNameGet">
            <summary>Sets the shim of GenericFamilyConfiguration.get_ProfileName()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.StructureMapQueryIFamilyBuildInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.StructureMap.Query.IFamily.Build(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.StructureMapQueryIFamilyEjectInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.StructureMap.Query.IFamily.Eject(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration.StructureMapQueryIFamilyHasBeenCreatedInstance">
            <summary>Sets the shim of GenericFamilyConfiguration.StructureMap.Query.IFamily.HasBeenCreated(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimGenericFamilyConfiguration._get_Instancesb__18_0Instance">
            <summary>Sets the shim of GenericFamilyConfiguration.&lt;get_Instances&gt;b__18_0(Instance x)</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimInstanceRef">
            <summary>Shim type of StructureMap.Query.InstanceRef</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimInstanceRef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimInstanceRef.#ctor(StructureMap.Query.InstanceRef)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.DescribeBuildPlanInt32">
            <summary>Sets the shim of InstanceRef.DescribeBuildPlan(Int32 maxLevels)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.DescriptionGet">
            <summary>Sets the shim of InstanceRef.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.EjectAndRemove">
            <summary>Sets the shim of InstanceRef.EjectAndRemove()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.EjectObject">
            <summary>Sets the shim of InstanceRef.EjectObject()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.InstanceRef,``0})">
            <summary>Sets the shim of InstanceRef.Get()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.InstanceGet">
            <summary>Sets the shim of InstanceRef.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.LifecycleGet">
            <summary>Sets the shim of InstanceRef.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.NameGet">
            <summary>Sets the shim of InstanceRef.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.ObjectHasBeenCreated">
            <summary>Sets the shim of InstanceRef.ObjectHasBeenCreated()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.PluginTypeGet">
            <summary>Sets the shim of InstanceRef.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.AllInstances.ReturnedTypeGet">
            <summary>Sets the shim of InstanceRef.get_ReturnedType()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimInstanceRef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimInstanceRef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.ConstructorInstanceIFamily">
            <summary>Sets the shim of InstanceRef.InstanceRef(Instance instance, IFamily family)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.DescribeBuildPlanInt32">
            <summary>Sets the shim of InstanceRef.DescribeBuildPlan(Int32 maxLevels)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.DescriptionGet">
            <summary>Sets the shim of InstanceRef.get_Description()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.EjectAndRemove">
            <summary>Sets the shim of InstanceRef.EjectAndRemove()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.EjectObject">
            <summary>Sets the shim of InstanceRef.EjectObject()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimInstanceRef.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of InstanceRef.Get()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.InstanceGet">
            <summary>Sets the shim of InstanceRef.get_Instance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.LifecycleGet">
            <summary>Sets the shim of InstanceRef.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.NameGet">
            <summary>Sets the shim of InstanceRef.get_Name()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.ObjectHasBeenCreated">
            <summary>Sets the shim of InstanceRef.ObjectHasBeenCreated()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.PluginTypeGet">
            <summary>Sets the shim of InstanceRef.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimInstanceRef.ReturnedTypeGet">
            <summary>Sets the shim of InstanceRef.get_ReturnedType()</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimModel">
            <summary>Shim type of StructureMap.Query.Model</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.#ctor(StructureMap.Query.Model)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.AllInstancesGet">
            <summary>Sets the shim of Model.get_AllInstances()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.DefaultTypeForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Type})">
            <summary>Sets the shim of Model.DefaultTypeFor()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.DefaultTypeForType">
            <summary>Sets the shim of Model.DefaultTypeFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.EjectAndRemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{StructureMap.Query.Model})">
            <summary>Sets the shim of Model.EjectAndRemove()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.EjectAndRemovePluginTypesFuncOfTypeBoolean">
            <summary>Sets the shim of Model.EjectAndRemovePluginTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.EjectAndRemoveType">
            <summary>Sets the shim of Model.EjectAndRemove(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.EjectAndRemoveTypesFuncOfTypeBoolean">
            <summary>Sets the shim of Model.EjectAndRemoveTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.FindOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.String,StructureMap.Query.InstanceRef})">
            <summary>Sets the shim of Model.Find(String name)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,StructureMap.Query.IPluginTypeConfiguration})">
            <summary>Sets the shim of Model.For()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.ForType">
            <summary>Sets the shim of Model.For(Type type)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.GetAllPossibleOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Model.GetAllPossible()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.HasDefaultImplementationForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Boolean})">
            <summary>Sets the shim of Model.HasDefaultImplementationFor()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.HasDefaultImplementationForType">
            <summary>Sets the shim of Model.HasDefaultImplementationFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.HasImplementationsForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Boolean})">
            <summary>Sets the shim of Model.HasImplementationsFor()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.HasImplementationsForType">
            <summary>Sets the shim of Model.HasImplementationsFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.InstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Collections.Generic.IEnumerable{StructureMap.Query.InstanceRef}})">
            <summary>Sets the shim of Model.InstancesOf()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.InstancesOfType">
            <summary>Sets the shim of Model.InstancesOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.PipelineGet">
            <summary>Sets the shim of Model.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.PluginGraphGet">
            <summary>Sets the shim of Model.get_PluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.PluginGraphSetPluginGraph">
            <summary>Sets the shim of Model.set_PluginGraph(PluginGraph value)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.PluginTypesGet">
            <summary>Sets the shim of Model.get_PluginTypes()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.RegistriesGet">
            <summary>Sets the shim of Model.get_Registries()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.ScannersGet">
            <summary>Sets the shim of Model.get_Scanners()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.findForFamilyOf1TypeFuncOfIPluginTypeConfigurationM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Type,System.Func{StructureMap.Query.IPluginTypeConfiguration,``0},``0})">
            <summary>Sets the shim of Model.findForFamily(Type pluginType, Func`2&lt;IPluginTypeConfiguration,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.AllInstances.findForFamilyOf1TypeFuncOfIPluginTypeConfigurationM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.Model,System.Type,System.Func{StructureMap.Query.IPluginTypeConfiguration,``0},``0,``0})">
            <summary>Sets the shim of Model.findForFamily(Type pluginType, Func`2&lt;IPluginTypeConfiguration,!!0&gt; func, !!0 defaultValue)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstances.pluginTypesGet">
            <summary>Sets the shim of Model.get_pluginTypes()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.AllInstancesGet">
            <summary>Sets the shim of Model.get_AllInstances()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.Bind(StructureMap.Query.IModel)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.ConstructorIPipelineGraphPluginGraph">
            <summary>Sets the shim of Model.Model(IPipelineGraph graph, PluginGraph pluginGraph)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.DefaultTypeForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type})">
            <summary>Sets the shim of Model.DefaultTypeFor()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.DefaultTypeForType">
            <summary>Sets the shim of Model.DefaultTypeFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.EjectAndRemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of Model.EjectAndRemove()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.EjectAndRemovePluginTypesFuncOfTypeBoolean">
            <summary>Sets the shim of Model.EjectAndRemovePluginTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.EjectAndRemoveType">
            <summary>Sets the shim of Model.EjectAndRemove(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.EjectAndRemoveTypesFuncOfTypeBoolean">
            <summary>Sets the shim of Model.EjectAndRemoveTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.FindOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Query.InstanceRef})">
            <summary>Sets the shim of Model.Find(String name)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.IPluginTypeConfiguration})">
            <summary>Sets the shim of Model.For()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.ForType">
            <summary>Sets the shim of Model.For(Type type)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.GetAllPossibleOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Model.GetAllPossible()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.HasDefaultImplementationForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of Model.HasDefaultImplementationFor()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.HasDefaultImplementationForType">
            <summary>Sets the shim of Model.HasDefaultImplementationFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.HasImplementationsForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of Model.HasImplementationsFor()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.HasImplementationsForType">
            <summary>Sets the shim of Model.HasImplementationsFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.InstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{StructureMap.Query.InstanceRef}})">
            <summary>Sets the shim of Model.InstancesOf()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.InstancesOfType">
            <summary>Sets the shim of Model.InstancesOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.PipelineGet">
            <summary>Sets the shim of Model.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.PluginGraphGet">
            <summary>Sets the shim of Model.get_PluginGraph()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.PluginGraphSetPluginGraph">
            <summary>Sets the shim of Model.set_PluginGraph(PluginGraph value)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.PluginTypesGet">
            <summary>Sets the shim of Model.get_PluginTypes()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.RegistriesGet">
            <summary>Sets the shim of Model.get_Registries()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.ScannersGet">
            <summary>Sets the shim of Model.get_Scanners()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.findForFamilyOf1TypeFuncOfIPluginTypeConfigurationM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Func{StructureMap.Query.IPluginTypeConfiguration,``0},``0})">
            <summary>Sets the shim of Model.findForFamily(Type pluginType, Func`2&lt;IPluginTypeConfiguration,!!0&gt; func)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimModel.findForFamilyOf1TypeFuncOfIPluginTypeConfigurationM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Func{StructureMap.Query.IPluginTypeConfiguration,``0},``0,``0})">
            <summary>Sets the shim of Model.findForFamily(Type pluginType, Func`2&lt;IPluginTypeConfiguration,!!0&gt; func, !!0 defaultValue)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimModel.pluginTypesGet">
            <summary>Sets the shim of Model.get_pluginTypes()</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions">
            <summary>Shim type of StructureMap.Query.PluginTypeConfigurationExtensions</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.EjectAndRemoveIPluginTypeConfigurationFuncOfInstanceRefBoolean">
            <summary>Sets the shim of PluginTypeConfigurationExtensions.EjectAndRemove(IPluginTypeConfiguration configuration, Func`2&lt;InstanceRef,Boolean&gt; filter)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.EjectAndRemoveIPluginTypeConfigurationString">
            <summary>Sets the shim of PluginTypeConfigurationExtensions.EjectAndRemove(IPluginTypeConfiguration configuration, String instanceName)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.ShimPluginTypeConfigurationExtensions.FindIPluginTypeConfigurationString">
            <summary>Sets the shim of PluginTypeConfigurationExtensions.Find(IPluginTypeConfiguration configuration, String instanceName)</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubClosedPluginTypeConfiguration">
            <summary>Stub type of StructureMap.Query.ClosedPluginTypeConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubClosedPluginTypeConfiguration.#ctor(StructureMap.Graph.PluginFamily,StructureMap.IPipelineGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubClosedPluginTypeConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubClosedPluginTypeConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubClosedPluginTypeConfiguration</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubClosedPluginTypeConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubClosedPluginTypeConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubEmptyConfiguration">
            <summary>Stub type of StructureMap.Query.EmptyConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubEmptyConfiguration.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubEmptyConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubEmptyConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyConfiguration</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubEmptyConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubEmptyConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubGenericFamilyConfiguration">
            <summary>Stub type of StructureMap.Query.GenericFamilyConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubGenericFamilyConfiguration.#ctor(StructureMap.Graph.PluginFamily,StructureMap.IPipelineGraph)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubGenericFamilyConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubGenericFamilyConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubGenericFamilyConfiguration</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubGenericFamilyConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubGenericFamilyConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubIFamily">
            <summary>Stub type of StructureMap.Query.IFamily</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIFamily.#ctor">
            <summary>Initializes a new instance of type StubIFamily</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.BuildInstance">
            <summary>Sets the stub of IFamily.Build(Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.EjectAndRemoveInstance">
            <summary>Sets the stub of IFamily.EjectAndRemove(Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.EjectInstance">
            <summary>Sets the stub of IFamily.Eject(Instance instance)</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.HasBeenCreatedInstance">
            <summary>Sets the stub of IFamily.HasBeenCreated(Instance instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#Lifecycle">
            <summary>Sets the stub of IFamily.get_Lifecycle()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.LifecycleGet">
            <summary>Sets the stub of IFamily.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#Pipeline">
            <summary>Sets the stub of IFamily.get_Pipeline()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.PipelineGet">
            <summary>Sets the stub of IFamily.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#PluginType">
            <summary>Sets the stub of IFamily.get_PluginType()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIFamily.PluginTypeGet">
            <summary>Sets the stub of IFamily.get_PluginType()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#Build(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IFamily.Build(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#Eject(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IFamily.Eject(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#EjectAndRemove(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IFamily.EjectAndRemove(Instance instance)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIFamily.StructureMap#Query#IFamily#HasBeenCreated(StructureMap.Pipeline.Instance)">
            <summary>Sets the stub of IFamily.HasBeenCreated(Instance instance)</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubIModel">
            <summary>Stub type of StructureMap.Query.IModel</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.#ctor">
            <summary>Initializes a new instance of type StubIModel</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#AllInstances">
            <summary>Sets the stub of IModel.get_AllInstances()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.AllInstancesGet">
            <summary>Sets the stub of IModel.get_AllInstances()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.DefaultTypeForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type})">
            <summary>Sets stubs of DefaultTypeFor()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.DefaultTypeForType">
            <summary>Sets the stub of IModel.DefaultTypeFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.EjectAndRemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets stubs of EjectAndRemove()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.EjectAndRemovePluginTypesFuncOfTypeBoolean">
            <summary>Sets the stub of IModel.EjectAndRemovePluginTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.EjectAndRemoveType">
            <summary>Sets the stub of IModel.EjectAndRemove(Type pluginType)</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.EjectAndRemoveTypesFuncOfTypeBoolean">
            <summary>Sets the stub of IModel.EjectAndRemoveTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.FindOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,StructureMap.Query.InstanceRef})">
            <summary>Sets stubs of Find(String name)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{StructureMap.Query.IPluginTypeConfiguration})">
            <summary>Sets stubs of For()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.ForType">
            <summary>Sets the stub of IModel.For(Type type)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.GetAllPossibleOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetAllPossible()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.HasDefaultImplementationForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of HasDefaultImplementationFor()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.HasDefaultImplementationForType">
            <summary>Sets the stub of IModel.HasDefaultImplementationFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.HasImplementationsForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of HasImplementationsFor()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.HasImplementationsForType">
            <summary>Sets the stub of IModel.HasImplementationsFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.InstancesOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{StructureMap.Query.InstanceRef}})">
            <summary>Sets stubs of InstancesOf()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.InstancesOfType">
            <summary>Sets the stub of IModel.InstancesOf(Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#Pipeline">
            <summary>Sets the stub of IModel.get_Pipeline()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.PipelineGet">
            <summary>Sets the stub of IModel.get_Pipeline()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#PluginTypes">
            <summary>Sets the stub of IModel.get_PluginTypes()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.PluginTypesGet">
            <summary>Sets the stub of IModel.get_PluginTypes()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#Registries">
            <summary>Sets the stub of IModel.get_Registries()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.RegistriesGet">
            <summary>Sets the stub of IModel.get_Registries()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#Scanners">
            <summary>Sets the stub of IModel.get_Scanners()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIModel.ScannersGet">
            <summary>Sets the stub of IModel.get_Scanners()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#DefaultTypeFor``1">
            <summary>Sets the stub of IModel.DefaultTypeFor()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#DefaultTypeFor(System.Type)">
            <summary>Sets the stub of IModel.DefaultTypeFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#EjectAndRemove``1">
            <summary>Sets the stub of IModel.EjectAndRemove()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#EjectAndRemove(System.Type)">
            <summary>Sets the stub of IModel.EjectAndRemove(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#EjectAndRemovePluginTypes(System.Func{System.Type,System.Boolean})">
            <summary>Sets the stub of IModel.EjectAndRemovePluginTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#EjectAndRemoveTypes(System.Func{System.Type,System.Boolean})">
            <summary>Sets the stub of IModel.EjectAndRemoveTypes(Func`2&lt;Type,Boolean&gt; filter)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#Find``1(System.String)">
            <summary>Sets the stub of IModel.Find(String name)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#For``1">
            <summary>Sets the stub of IModel.For()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#For(System.Type)">
            <summary>Sets the stub of IModel.For(Type type)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#GetAllPossible``1">
            <summary>Sets the stub of IModel.GetAllPossible()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#HasDefaultImplementationFor``1">
            <summary>Sets the stub of IModel.HasDefaultImplementationFor()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#HasDefaultImplementationFor(System.Type)">
            <summary>Sets the stub of IModel.HasDefaultImplementationFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#HasImplementationsFor``1">
            <summary>Sets the stub of IModel.HasImplementationsFor()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#HasImplementationsFor(System.Type)">
            <summary>Sets the stub of IModel.HasImplementationsFor(Type pluginType)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#InstancesOf``1">
            <summary>Sets the stub of IModel.InstancesOf()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIModel.StructureMap#Query#IModel#InstancesOf(System.Type)">
            <summary>Sets the stub of IModel.InstancesOf(Type pluginType)</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubIPluginTypeConfiguration">
            <summary>Stub type of StructureMap.Query.IPluginTypeConfiguration</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIPluginTypeConfiguration</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#Default">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Default()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.DefaultGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Default()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.EjectAndRemoveAll">
            <summary>Sets the stub of IPluginTypeConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.EjectAndRemoveInstanceRef">
            <summary>Sets the stub of IPluginTypeConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#Fallback">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Fallback()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.FallbackGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Fallback()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.HasImplementations">
            <summary>Sets the stub of IPluginTypeConfiguration.HasImplementations()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#Instances">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Instances()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.InstancesGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Instances()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#Lifecycle">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.LifecycleGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_Lifecycle()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#MissingNamedInstance">
            <summary>Sets the stub of IPluginTypeConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.MissingNamedInstanceGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_MissingNamedInstance()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#PluginType">
            <summary>Sets the stub of IPluginTypeConfiguration.get_PluginType()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.PluginTypeGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_PluginType()</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#ProfileName">
            <summary>Sets the stub of IPluginTypeConfiguration.get_ProfileName()</summary>
        </member>
        <member name="F:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.ProfileNameGet">
            <summary>Sets the stub of IPluginTypeConfiguration.get_ProfileName()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#EjectAndRemove(StructureMap.Query.InstanceRef)">
            <summary>Sets the stub of IPluginTypeConfiguration.EjectAndRemove(InstanceRef instance)</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#EjectAndRemoveAll">
            <summary>Sets the stub of IPluginTypeConfiguration.EjectAndRemoveAll()</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubIPluginTypeConfiguration.StructureMap#Query#IPluginTypeConfiguration#HasImplementations">
            <summary>Sets the stub of IPluginTypeConfiguration.HasImplementations()</summary>
        </member>
        <member name="T:StructureMap.Query.Fakes.StubInstanceRef">
            <summary>Stub type of StructureMap.Query.InstanceRef</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubInstanceRef.#ctor(StructureMap.Pipeline.Instance,StructureMap.Query.IFamily)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubInstanceRef.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Query.Fakes.StubInstanceRef.InitializeStub">
            <summary>Initializes a new instance of type StubInstanceRef</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubInstanceRef.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Query.Fakes.StubInstanceRef.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:StructureMap.TypeRules.Fakes.ShimAssemblyLoader">
            <summary>Shim type of StructureMap.TypeRules.AssemblyLoader</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimAssemblyLoader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimAssemblyLoader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimAssemblyLoader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimAssemblyLoader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimAssemblyLoader.ByNameString">
            <summary>Sets the shim of AssemblyLoader.ByName(String assemblyName)</summary>
        </member>
        <member name="T:StructureMap.TypeRules.Fakes.ShimTypeExtensions">
            <summary>Shim type of StructureMap.TypeRules.TypeExtensions</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.AllInterfacesType">
            <summary>Sets the shim of TypeExtensions.AllInterfaces(Type type)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.CanBeCastToOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Boolean})">
            <summary>Sets the shim of TypeExtensions.CanBeCastTo(Type pluggedType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.CanBeCastToTypeType">
            <summary>Sets the shim of TypeExtensions.CanBeCastTo(Type pluggedType, Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.CanBeCreatedType">
            <summary>Sets the shim of TypeExtensions.CanBeCreated(Type type)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.CloseAndBuildAsOf1TypeObjectTypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Object,System.Type[],``0})">
            <summary>Sets the shim of TypeExtensions.CloseAndBuildAs(Type openType, Object ctorArgument, Type[] parameterTypes)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.CloseAndBuildAsOf1TypeTypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Type[],``0})">
            <summary>Sets the shim of TypeExtensions.CloseAndBuildAs(Type openType, Type[] parameterTypes)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.ClosesTypeType">
            <summary>Sets the shim of TypeExtensions.Closes(Type type, Type openType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.CouldCloseToTypeType">
            <summary>Sets the shim of TypeExtensions.CouldCloseTo(Type openConcretion, Type closedInterface)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.FindFirstInterfaceThatClosesTypeType">
            <summary>Sets the shim of TypeExtensions.FindFirstInterfaceThatCloses(Type TPluggedType, Type templateType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.FindInterfacesThatCloseTypeType">
            <summary>Sets the shim of TypeExtensions.FindInterfacesThatClose(Type TPluggedType, Type templateType)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.ForAttributeOf1MemberInfoActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Reflection.MemberInfo,System.Action{``0}})">
            <summary>Sets the shim of TypeExtensions.ForAttribute(MemberInfo provider, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.ForAttributeOf1ParameterInfoActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Reflection.ParameterInfo,System.Action{``0}})">
            <summary>Sets the shim of TypeExtensions.ForAttribute(ParameterInfo provider, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetAssemblyType">
            <summary>Sets the shim of TypeExtensions.GetAssembly(Type type)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetAttributeOf1MemberInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.MemberInfo,``0})">
            <summary>Sets the shim of TypeExtensions.GetAttribute(MemberInfo provider)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetConstructorTypeTypeArray">
            <summary>Sets the shim of TypeExtensions.GetConstructor(Type type, Type[] argumentTypes)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetConstructorsType">
            <summary>Sets the shim of TypeExtensions.GetConstructors(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetExportedTypesAssembly">
            <summary>Sets the shim of TypeExtensions.GetExportedTypes(Assembly assembly)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetFullNameType">
            <summary>Sets the shim of TypeExtensions.GetFullName(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetGenericArgumentsType">
            <summary>Sets the shim of TypeExtensions.GetGenericArguments(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetGenericNameType">
            <summary>Sets the shim of TypeExtensions.GetGenericName(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetGetMethodPropertyInfo">
            <summary>Sets the shim of TypeExtensions.GetGetMethod(PropertyInfo pi)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetInnerTypeFromNullableType">
            <summary>Sets the shim of TypeExtensions.GetInnerTypeFromNullable(Type nullableType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetInterfacesType">
            <summary>Sets the shim of TypeExtensions.GetInterfaces(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetMethodTypeString">
            <summary>Sets the shim of TypeExtensions.GetMethod(Type type, String name)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetMethodTypeStringTypeArray">
            <summary>Sets the shim of TypeExtensions.GetMethod(Type type, String name, Type[] arguments)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetNameType">
            <summary>Sets the shim of TypeExtensions.GetName(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetSetMethodPropertyInfo">
            <summary>Sets the shim of TypeExtensions.GetSetMethod(PropertyInfo pi)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetSettablePropertiesType">
            <summary>Sets the shim of TypeExtensions.GetSettableProperties(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.GetTypeNameType">
            <summary>Sets the shim of TypeExtensions.GetTypeName(Type type)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.HasAttributeOf1Assembly``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.Assembly,System.Boolean})">
            <summary>Sets the shim of TypeExtensions.HasAttribute(Assembly assembly)</summary>
        </member>
        <member name="M:StructureMap.TypeRules.Fakes.ShimTypeExtensions.HasAttributeOf1MemberInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Sets the shim of TypeExtensions.HasAttribute(MemberInfo provider)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.HasConstructorsType">
            <summary>Sets the shim of TypeExtensions.HasConstructors(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.ImplementsInterfaceTemplateTypeType">
            <summary>Sets the shim of TypeExtensions.ImplementsInterfaceTemplate(Type TPluggedType, Type templateType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsAutoFillableType">
            <summary>Sets the shim of TypeExtensions.IsAutoFillable(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsChildArrayType">
            <summary>Sets the shim of TypeExtensions.IsChildArray(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsChildType">
            <summary>Sets the shim of TypeExtensions.IsChild(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsConcreteAndAssignableToTypeType">
            <summary>Sets the shim of TypeExtensions.IsConcreteAndAssignableTo(Type TPluggedType, Type pluginType)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsConcreteType">
            <summary>Sets the shim of TypeExtensions.IsConcrete(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsConcreteWithDefaultCtorType">
            <summary>Sets the shim of TypeExtensions.IsConcreteWithDefaultCtor(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsInNamespaceTypeString">
            <summary>Sets the shim of TypeExtensions.IsInNamespace(Type type, String nameSpace)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsInterfaceOrAbstractType">
            <summary>Sets the shim of TypeExtensions.IsInterfaceOrAbstract(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsNullableType">
            <summary>Sets the shim of TypeExtensions.IsNullable(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsOpenGenericType">
            <summary>Sets the shim of TypeExtensions.IsOpenGeneric(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsPrimitiveArrayType">
            <summary>Sets the shim of TypeExtensions.IsPrimitiveArray(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsPrimitiveType">
            <summary>Sets the shim of TypeExtensions.IsPrimitive(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsSimpleType">
            <summary>Sets the shim of TypeExtensions.IsSimple(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsStringType">
            <summary>Sets the shim of TypeExtensions.IsString(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.IsVoidReturnType">
            <summary>Sets the shim of TypeExtensions.IsVoidReturn(Type type)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.ParametersMatchMethodBaseICollectionOfType">
            <summary>Sets the shim of TypeExtensions.ParametersMatch(MethodBase method, ICollection`1&lt;Type&gt; parameterTypes)</summary>
        </member>
        <member name="P:StructureMap.TypeRules.Fakes.ShimTypeExtensions.rawFindInterfacesThatClosesTypeType">
            <summary>Sets the shim of TypeExtensions.rawFindInterfacesThatCloses(Type TPluggedType, Type templateType)</summary>
        </member>
        <member name="T:StructureMap.Util.Fakes.ShimLightweightCache`2">
            <summary>Shim type of StructureMap.Util.LightweightCache`2</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.ShimLightweightCache`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.ShimLightweightCache`2.#ctor(StructureMap.Util.LightweightCache{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.Clear">
            <summary>Sets the shim of LightweightCache`2.Clear()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.ClearAll">
            <summary>Sets the shim of LightweightCache`2.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.CountGet">
            <summary>Sets the shim of LightweightCache`2.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.EachActionOfT0T1">
            <summary>Sets the shim of LightweightCache`2.Each(Action`2&lt;!0,!1&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.EachActionOfT1">
            <summary>Sets the shim of LightweightCache`2.Each(Action`1&lt;!1&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.ExistsPredicateOfT1">
            <summary>Sets the shim of LightweightCache`2.Exists(Predicate`1&lt;!1&gt; predicate)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.FillDefaultT0">
            <summary>Sets the shim of LightweightCache`2.FillDefault(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.FillT0T1">
            <summary>Sets the shim of LightweightCache`2.Fill(!0 key, !1 value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.FindPredicateOfT1">
            <summary>Sets the shim of LightweightCache`2.Find(Predicate`1&lt;!1&gt; predicate)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.FirstGet">
            <summary>Sets the shim of LightweightCache`2.get_First()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.GetAll">
            <summary>Sets the shim of LightweightCache`2.GetAll()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.GetEnumerator">
            <summary>Sets the shim of LightweightCache`2.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.GetKeyGet">
            <summary>Sets the shim of LightweightCache`2.get_GetKey()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.GetKeySetFuncOfT1T0">
            <summary>Sets the shim of LightweightCache`2.set_GetKey(Func`2&lt;!1,!0&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.HasT0">
            <summary>Sets the shim of LightweightCache`2.Has(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of LightweightCache`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.ItemSetT0T1">
            <summary>Sets the shim of LightweightCache`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.OnMissingSetFuncOfT0T1">
            <summary>Sets the shim of LightweightCache`2.set_OnMissing(Func`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.RemoveT0">
            <summary>Sets the shim of LightweightCache`2.Remove(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of LightweightCache`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.TryRetrieveT0T1Out">
            <summary>Sets the shim of LightweightCache`2.TryRetrieve(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.AllInstances.WithValueT0ActionOfT1">
            <summary>Sets the shim of LightweightCache`2.WithValue(!0 key, Action`1&lt;!1&gt; action)</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.ShimLightweightCache`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.ShimLightweightCache`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.ShimLightweightCache`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.ShimLightweightCache`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.Clear">
            <summary>Sets the shim of LightweightCache`2.Clear()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ClearAll">
            <summary>Sets the shim of LightweightCache`2.ClearAll()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.Constructor">
            <summary>Sets the shim of LightweightCache`2.LightweightCache`2()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ConstructorFuncOfT0T1">
            <summary>Sets the shim of LightweightCache`2.LightweightCache`2(Func`2&lt;!0,!1&gt; onMissing)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ConstructorIDictionaryOfT0T1">
            <summary>Sets the shim of LightweightCache`2.LightweightCache`2(IDictionary`2&lt;!0,!1&gt; dictionary)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ConstructorIDictionaryOfT0T1FuncOfT0T1">
            <summary>Sets the shim of LightweightCache`2.LightweightCache`2(IDictionary`2&lt;!0,!1&gt; dictionary, Func`2&lt;!0,!1&gt; onMissing)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.CountGet">
            <summary>Sets the shim of LightweightCache`2.get_Count()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.EachActionOfT0T1">
            <summary>Sets the shim of LightweightCache`2.Each(Action`2&lt;!0,!1&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.EachActionOfT1">
            <summary>Sets the shim of LightweightCache`2.Each(Action`1&lt;!1&gt; action)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ExistsPredicateOfT1">
            <summary>Sets the shim of LightweightCache`2.Exists(Predicate`1&lt;!1&gt; predicate)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.FillDefaultT0">
            <summary>Sets the shim of LightweightCache`2.FillDefault(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.FillT0T1">
            <summary>Sets the shim of LightweightCache`2.Fill(!0 key, !1 value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.FindPredicateOfT1">
            <summary>Sets the shim of LightweightCache`2.Find(Predicate`1&lt;!1&gt; predicate)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.FirstGet">
            <summary>Sets the shim of LightweightCache`2.get_First()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.GetAll">
            <summary>Sets the shim of LightweightCache`2.GetAll()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.GetEnumerator">
            <summary>Sets the shim of LightweightCache`2.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.GetKeyGet">
            <summary>Sets the shim of LightweightCache`2.get_GetKey()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.GetKeySetFuncOfT1T0">
            <summary>Sets the shim of LightweightCache`2.set_GetKey(Func`2&lt;!1,!0&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.HasT0">
            <summary>Sets the shim of LightweightCache`2.Has(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ItemGetT0">
            <summary>Sets the shim of LightweightCache`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.ItemSetT0T1">
            <summary>Sets the shim of LightweightCache`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.OnMissingSetFuncOfT0T1">
            <summary>Sets the shim of LightweightCache`2.set_OnMissing(Func`2&lt;!0,!1&gt; value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.RemoveT0">
            <summary>Sets the shim of LightweightCache`2.Remove(!0 key)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of LightweightCache`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.TryRetrieveT0T1Out">
            <summary>Sets the shim of LightweightCache`2.TryRetrieve(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.ShimLightweightCache`2.WithValueT0ActionOfT1">
            <summary>Sets the shim of LightweightCache`2.WithValue(!0 key, Action`1&lt;!1&gt; action)</summary>
        </member>
        <member name="T:StructureMap.Util.Fakes.StubLightweightCache`2">
            <summary>Stub type of StructureMap.Util.LightweightCache`2</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.StubLightweightCache`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.StubLightweightCache`2.#ctor(System.Func{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.StubLightweightCache`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.StubLightweightCache`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Func{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.StubLightweightCache`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:StructureMap.Util.Fakes.StubLightweightCache`2.InitializeStub">
            <summary>Initializes a new instance of type StubLightweightCache</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.StubLightweightCache`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:StructureMap.Util.Fakes.StubLightweightCache`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
